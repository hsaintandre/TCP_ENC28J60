Version 3.2 HI-TECH Software Intermediate Code
"50 main.c
[s S143 `ui 1 `uc -> 2 `i `uc -> 2 `i `uc 1 ]
[n S143 PING checksum id seq_num payload ]
"16
[s S139 `uc -> 6 `i `uc -> 6 `i `uc -> 2 `i ]
[n S139 Link MAC_d MAC_s eth_type ]
"21
[s S140 `uc 1 `uc 1 `uc -> 2 `i `uc -> 2 `i `uc -> 2 `i `uc 1 `uc 1 `uc -> 2 `i `uc -> 4 `i `uc -> 4 `i ]
[n S140 IP ver_ihl dscp_ecn total_length id flags_n_offset ttl protocol chksum IP_s IP_d ]
"44
[s S142 `uc -> 2 `i `uc -> 2 `i `uc -> 2 `i `uc 1 ]
[n S142 UDP PORT_s PORT_d length flag ]
"33
[s S141 `uc -> 2 `i `uc -> 2 `i `uc -> 4 `i `uc -> 4 `i `uc -> 2 `i `uc -> 2 `i `uc -> 2 `i `uc -> 2 `i `uc 1 ]
[n S141 TCP PORT_s PORT_d seq_num ack_num offset_n_flags window chksum urg_pointer status ]
"1548 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[s S59 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S59 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1547
[u S58 `S59 1 ]
[n S58 . . ]
"1558
[v _PIE1bits `VS58 ~T0 @X0 0 e@140 ]
"2402
[s S95 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S95 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"2412
[s S96 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S96 . TXD8 . nTX8 ]
"2417
[s S97 :6 `uc 1 :1 `uc 1 ]
[n S97 . . TX8_9 ]
"2401
[u S94 `S95 1 `S96 1 `S97 1 ]
[n S94 . . . . ]
"2422
[v _TXSTAbits `VS94 ~T0 @X0 0 e@152 ]
"3181
[s S127 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S127 . ABDEN WUE . BRG16 SCKP . RCIDL ABDOVF ]
"3180
[u S126 `S127 1 ]
[n S126 . . ]
"3192
[v _BAUDCTLbits `VS126 ~T0 @X0 0 e@391 ]
"2544
[v _SPBRGH `Vuc ~T0 @X0 0 e@154 ]
"2482
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"963
[s S35 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S35 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"973
[s S36 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S36 . RCD8 . RC9 ]
"978
[s S37 :6 `uc 1 :1 `uc 1 ]
[n S37 . . nRC8 ]
"982
[s S38 :6 `uc 1 :1 `uc 1 ]
[n S38 . . RC8_9 ]
"962
[u S34 `S35 1 `S36 1 `S37 1 `S38 1 ]
[n S34 . . . . . ]
"987
[v _RCSTAbits `VS34 ~T0 @X0 0 e@24 ]
"462
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"461
[u S16 `S17 1 ]
[n S16 . . ]
"472
[v _PIR1bits `VS16 ~T0 @X0 0 e@12 ]
"1052
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"1881
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"691
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"3097
[v _EEADR `Vuc ~T0 @X0 0 e@269 ]
"3090
[v _EEDAT `Vuc ~T0 @X0 0 e@268 ]
"3327
[s S133 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S133 . RD WR WREN WRERR . EEPGD ]
"3326
[u S132 `S133 1 ]
[n S132 . . ]
"3336
[v _EECON1bits `VS132 ~T0 @X0 0 e@396 ]
"3366
[v _EECON2 `Vuc ~T0 @X0 0 e@397 ]
"518
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . CCP2IF . ULPWUIF BCLIF EEIF C1IF C2IF OSFIF ]
"517
[u S18 `S19 1 ]
[n S18 . . ]
"529
[v _PIR2bits `VS18 ~T0 @X0 0 e@13 ]
"2023
[s S78 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S78 . BF UA R_nW S P D_nA CKE SMP ]
"2033
[s S79 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S79 . . R . D ]
"2039
[s S80 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S80 . . I2C_READ I2C_START I2C_STOP I2C_DATA ]
"2046
[s S81 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S81 . . nW . nA ]
"2052
[s S82 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S82 . . nWRITE . nADDRESS ]
"2058
[s S83 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S83 . . R_W . D_A ]
"2064
[s S84 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S84 . . READ_WRITE . DATA_ADDRESS ]
"2022
[u S77 `S78 1 `S79 1 `S80 1 `S81 1 `S82 1 `S83 1 `S84 1 ]
[n S77 . . . . . . . . ]
"2071
[v _SSPSTATbits `VS77 ~T0 @X0 0 e@148 ]
"775
[s S28 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S28 . SSPM CKP SSPEN SSPOV WCOL ]
"782
[s S29 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S29 . SSPM0 SSPM1 SSPM2 SSPM3 ]
"774
[u S27 `S28 1 `S29 1 ]
[n S27 . . . ]
"789
[v _SSPCONbits `VS27 ~T0 @X0 0 e@20 ]
"1403
[s S53 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S53 . TRISB0 TRISB1 TRISB2 TRISB3 TRISB4 TRISB5 TRISB6 TRISB7 ]
"1402
[u S52 `S53 1 ]
[n S52 . . ]
"1414
[v _TRISBbits `VS52 ~T0 @X0 0 e@134 ]
"1465
[s S55 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S55 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1464
[u S54 `S55 1 ]
[n S54 . . ]
"1476
[v _TRISCbits `VS54 ~T0 @X0 0 e@135 ]
"232
[s S8 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S8 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"231
[u S7 `S8 1 ]
[n S7 . . ]
"243
[v _PORTBbits `VS7 ~T0 @X0 0 e@6 ]
[v F1552 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic.h
[v __delay `JF1552 ~T0 @X0 0 e ]
[p i __delay ]
"762 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[v _SSPBUF `Vuc ~T0 @X0 0 e@19 ]
"195 C:\Program Files (x86)\Microchip\xc8\v1.45\include\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
"1170 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[s S43 :1 `uc 1 :1 `uc 1 :4 `uc 1 :2 `uc 1 ]
[n S43 . ADON GO_nDONE CHS ADCS ]
"1176
[s S44 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S44 . . GO CHS0 CHS1 CHS2 CHS3 ADCS0 ADCS1 ]
"1186
[s S45 :1 `uc 1 :1 `uc 1 ]
[n S45 . . nDONE ]
"1190
[s S46 :1 `uc 1 :1 `uc 1 ]
[n S46 . . GO_DONE ]
"1169
[u S42 `S43 1 `S44 1 `S45 1 `S46 1 ]
[n S42 . . . . . ]
"1195
[v _ADCON0bits `VS42 ~T0 @X0 0 e@31 ]
"2810
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"294
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"293
[u S9 `S10 1 ]
[n S9 . . ]
"305
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
"1059
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
[p mainexit ]
"1702
[v _OSCCON `Vuc ~T0 @X0 0 e@143 ]
"378
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"3271
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"1341
[s S51 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S51 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 TRISA6 TRISA7 ]
"1340
[u S50 `S51 1 ]
[n S50 . . ]
"1352
[v _TRISAbits `VS50 ~T0 @X0 0 e@133 ]
"3227
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"2823
[s S112 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S112 . . VCFG0 VCFG1 . ADFM ]
"2822
[u S111 `S112 1 ]
[n S111 . . ]
"2831
[v _ADCON1bits `VS111 ~T0 @X0 0 e@159 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f886.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[; ;pic16f886.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f886.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f886.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f886.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f886.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f886.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f886.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f886.h: 76: typedef union {
[; ;pic16f886.h: 77: struct {
[; ;pic16f886.h: 78: unsigned C :1;
[; ;pic16f886.h: 79: unsigned DC :1;
[; ;pic16f886.h: 80: unsigned Z :1;
[; ;pic16f886.h: 81: unsigned nPD :1;
[; ;pic16f886.h: 82: unsigned nTO :1;
[; ;pic16f886.h: 83: unsigned RP :2;
[; ;pic16f886.h: 84: unsigned IRP :1;
[; ;pic16f886.h: 85: };
[; ;pic16f886.h: 86: struct {
[; ;pic16f886.h: 87: unsigned :5;
[; ;pic16f886.h: 88: unsigned RP0 :1;
[; ;pic16f886.h: 89: unsigned RP1 :1;
[; ;pic16f886.h: 90: };
[; ;pic16f886.h: 91: struct {
[; ;pic16f886.h: 92: unsigned CARRY :1;
[; ;pic16f886.h: 93: unsigned :1;
[; ;pic16f886.h: 94: unsigned ZERO :1;
[; ;pic16f886.h: 95: };
[; ;pic16f886.h: 96: } STATUSbits_t;
[; ;pic16f886.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f886.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f886.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f886.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f886.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f886.h: 169: typedef union {
[; ;pic16f886.h: 170: struct {
[; ;pic16f886.h: 171: unsigned RA0 :1;
[; ;pic16f886.h: 172: unsigned RA1 :1;
[; ;pic16f886.h: 173: unsigned RA2 :1;
[; ;pic16f886.h: 174: unsigned RA3 :1;
[; ;pic16f886.h: 175: unsigned RA4 :1;
[; ;pic16f886.h: 176: unsigned RA5 :1;
[; ;pic16f886.h: 177: unsigned RA6 :1;
[; ;pic16f886.h: 178: unsigned RA7 :1;
[; ;pic16f886.h: 179: };
[; ;pic16f886.h: 180: } PORTAbits_t;
[; ;pic16f886.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f886.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f886.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f886.h: 231: typedef union {
[; ;pic16f886.h: 232: struct {
[; ;pic16f886.h: 233: unsigned RB0 :1;
[; ;pic16f886.h: 234: unsigned RB1 :1;
[; ;pic16f886.h: 235: unsigned RB2 :1;
[; ;pic16f886.h: 236: unsigned RB3 :1;
[; ;pic16f886.h: 237: unsigned RB4 :1;
[; ;pic16f886.h: 238: unsigned RB5 :1;
[; ;pic16f886.h: 239: unsigned RB6 :1;
[; ;pic16f886.h: 240: unsigned RB7 :1;
[; ;pic16f886.h: 241: };
[; ;pic16f886.h: 242: } PORTBbits_t;
[; ;pic16f886.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f886.h: 288: extern volatile unsigned char PORTC @ 0x007;
"290
[; ;pic16f886.h: 290: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f886.h: 293: typedef union {
[; ;pic16f886.h: 294: struct {
[; ;pic16f886.h: 295: unsigned RC0 :1;
[; ;pic16f886.h: 296: unsigned RC1 :1;
[; ;pic16f886.h: 297: unsigned RC2 :1;
[; ;pic16f886.h: 298: unsigned RC3 :1;
[; ;pic16f886.h: 299: unsigned RC4 :1;
[; ;pic16f886.h: 300: unsigned RC5 :1;
[; ;pic16f886.h: 301: unsigned RC6 :1;
[; ;pic16f886.h: 302: unsigned RC7 :1;
[; ;pic16f886.h: 303: };
[; ;pic16f886.h: 304: } PORTCbits_t;
[; ;pic16f886.h: 305: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f886.h: 350: extern volatile unsigned char PORTE @ 0x009;
"352
[; ;pic16f886.h: 352: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f886.h: 355: typedef union {
[; ;pic16f886.h: 356: struct {
[; ;pic16f886.h: 357: unsigned :3;
[; ;pic16f886.h: 358: unsigned RE3 :1;
[; ;pic16f886.h: 359: };
[; ;pic16f886.h: 360: } PORTEbits_t;
[; ;pic16f886.h: 361: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f886.h: 371: extern volatile unsigned char PCLATH @ 0x00A;
"373
[; ;pic16f886.h: 373: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f886.h: 378: extern volatile unsigned char INTCON @ 0x00B;
"380
[; ;pic16f886.h: 380: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f886.h: 383: typedef union {
[; ;pic16f886.h: 384: struct {
[; ;pic16f886.h: 385: unsigned RBIF :1;
[; ;pic16f886.h: 386: unsigned INTF :1;
[; ;pic16f886.h: 387: unsigned T0IF :1;
[; ;pic16f886.h: 388: unsigned RBIE :1;
[; ;pic16f886.h: 389: unsigned INTE :1;
[; ;pic16f886.h: 390: unsigned T0IE :1;
[; ;pic16f886.h: 391: unsigned PEIE :1;
[; ;pic16f886.h: 392: unsigned GIE :1;
[; ;pic16f886.h: 393: };
[; ;pic16f886.h: 394: struct {
[; ;pic16f886.h: 395: unsigned :2;
[; ;pic16f886.h: 396: unsigned TMR0IF :1;
[; ;pic16f886.h: 397: unsigned :2;
[; ;pic16f886.h: 398: unsigned TMR0IE :1;
[; ;pic16f886.h: 399: };
[; ;pic16f886.h: 400: } INTCONbits_t;
[; ;pic16f886.h: 401: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f886.h: 456: extern volatile unsigned char PIR1 @ 0x00C;
"458
[; ;pic16f886.h: 458: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f886.h: 461: typedef union {
[; ;pic16f886.h: 462: struct {
[; ;pic16f886.h: 463: unsigned TMR1IF :1;
[; ;pic16f886.h: 464: unsigned TMR2IF :1;
[; ;pic16f886.h: 465: unsigned CCP1IF :1;
[; ;pic16f886.h: 466: unsigned SSPIF :1;
[; ;pic16f886.h: 467: unsigned TXIF :1;
[; ;pic16f886.h: 468: unsigned RCIF :1;
[; ;pic16f886.h: 469: unsigned ADIF :1;
[; ;pic16f886.h: 470: };
[; ;pic16f886.h: 471: } PIR1bits_t;
[; ;pic16f886.h: 472: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f886.h: 512: extern volatile unsigned char PIR2 @ 0x00D;
"514
[; ;pic16f886.h: 514: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f886.h: 517: typedef union {
[; ;pic16f886.h: 518: struct {
[; ;pic16f886.h: 519: unsigned CCP2IF :1;
[; ;pic16f886.h: 520: unsigned :1;
[; ;pic16f886.h: 521: unsigned ULPWUIF :1;
[; ;pic16f886.h: 522: unsigned BCLIF :1;
[; ;pic16f886.h: 523: unsigned EEIF :1;
[; ;pic16f886.h: 524: unsigned C1IF :1;
[; ;pic16f886.h: 525: unsigned C2IF :1;
[; ;pic16f886.h: 526: unsigned OSFIF :1;
[; ;pic16f886.h: 527: };
[; ;pic16f886.h: 528: } PIR2bits_t;
[; ;pic16f886.h: 529: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f886.h: 569: extern volatile unsigned short TMR1 @ 0x00E;
"571
[; ;pic16f886.h: 571: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f886.h: 576: extern volatile unsigned char TMR1L @ 0x00E;
"578
[; ;pic16f886.h: 578: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f886.h: 583: extern volatile unsigned char TMR1H @ 0x00F;
"585
[; ;pic16f886.h: 585: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f886.h: 590: extern volatile unsigned char T1CON @ 0x010;
"592
[; ;pic16f886.h: 592: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f886.h: 595: typedef union {
[; ;pic16f886.h: 596: struct {
[; ;pic16f886.h: 597: unsigned TMR1ON :1;
[; ;pic16f886.h: 598: unsigned TMR1CS :1;
[; ;pic16f886.h: 599: unsigned nT1SYNC :1;
[; ;pic16f886.h: 600: unsigned T1OSCEN :1;
[; ;pic16f886.h: 601: unsigned T1CKPS :2;
[; ;pic16f886.h: 602: unsigned TMR1GE :1;
[; ;pic16f886.h: 603: unsigned T1GINV :1;
[; ;pic16f886.h: 604: };
[; ;pic16f886.h: 605: struct {
[; ;pic16f886.h: 606: unsigned :2;
[; ;pic16f886.h: 607: unsigned T1INSYNC :1;
[; ;pic16f886.h: 608: unsigned :1;
[; ;pic16f886.h: 609: unsigned T1CKPS0 :1;
[; ;pic16f886.h: 610: unsigned T1CKPS1 :1;
[; ;pic16f886.h: 611: unsigned :1;
[; ;pic16f886.h: 612: unsigned T1GIV :1;
[; ;pic16f886.h: 613: };
[; ;pic16f886.h: 614: struct {
[; ;pic16f886.h: 615: unsigned :2;
[; ;pic16f886.h: 616: unsigned T1SYNC :1;
[; ;pic16f886.h: 617: };
[; ;pic16f886.h: 618: } T1CONbits_t;
[; ;pic16f886.h: 619: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f886.h: 684: extern volatile unsigned char TMR2 @ 0x011;
"686
[; ;pic16f886.h: 686: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f886.h: 691: extern volatile unsigned char T2CON @ 0x012;
"693
[; ;pic16f886.h: 693: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f886.h: 696: typedef union {
[; ;pic16f886.h: 697: struct {
[; ;pic16f886.h: 698: unsigned T2CKPS :2;
[; ;pic16f886.h: 699: unsigned TMR2ON :1;
[; ;pic16f886.h: 700: unsigned TOUTPS :4;
[; ;pic16f886.h: 701: };
[; ;pic16f886.h: 702: struct {
[; ;pic16f886.h: 703: unsigned T2CKPS0 :1;
[; ;pic16f886.h: 704: unsigned T2CKPS1 :1;
[; ;pic16f886.h: 705: unsigned :1;
[; ;pic16f886.h: 706: unsigned TOUTPS0 :1;
[; ;pic16f886.h: 707: unsigned TOUTPS1 :1;
[; ;pic16f886.h: 708: unsigned TOUTPS2 :1;
[; ;pic16f886.h: 709: unsigned TOUTPS3 :1;
[; ;pic16f886.h: 710: };
[; ;pic16f886.h: 711: } T2CONbits_t;
[; ;pic16f886.h: 712: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f886.h: 762: extern volatile unsigned char SSPBUF @ 0x013;
"764
[; ;pic16f886.h: 764: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f886.h: 769: extern volatile unsigned char SSPCON @ 0x014;
"771
[; ;pic16f886.h: 771: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f886.h: 774: typedef union {
[; ;pic16f886.h: 775: struct {
[; ;pic16f886.h: 776: unsigned SSPM :4;
[; ;pic16f886.h: 777: unsigned CKP :1;
[; ;pic16f886.h: 778: unsigned SSPEN :1;
[; ;pic16f886.h: 779: unsigned SSPOV :1;
[; ;pic16f886.h: 780: unsigned WCOL :1;
[; ;pic16f886.h: 781: };
[; ;pic16f886.h: 782: struct {
[; ;pic16f886.h: 783: unsigned SSPM0 :1;
[; ;pic16f886.h: 784: unsigned SSPM1 :1;
[; ;pic16f886.h: 785: unsigned SSPM2 :1;
[; ;pic16f886.h: 786: unsigned SSPM3 :1;
[; ;pic16f886.h: 787: };
[; ;pic16f886.h: 788: } SSPCONbits_t;
[; ;pic16f886.h: 789: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f886.h: 839: extern volatile unsigned short CCPR1 @ 0x015;
"841
[; ;pic16f886.h: 841: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f886.h: 846: extern volatile unsigned char CCPR1L @ 0x015;
"848
[; ;pic16f886.h: 848: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f886.h: 853: extern volatile unsigned char CCPR1H @ 0x016;
"855
[; ;pic16f886.h: 855: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f886.h: 860: extern volatile unsigned char CCP1CON @ 0x017;
"862
[; ;pic16f886.h: 862: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f886.h: 865: typedef union {
[; ;pic16f886.h: 866: struct {
[; ;pic16f886.h: 867: unsigned CCP1M :4;
[; ;pic16f886.h: 868: unsigned DC1B :2;
[; ;pic16f886.h: 869: unsigned P1M :2;
[; ;pic16f886.h: 870: };
[; ;pic16f886.h: 871: struct {
[; ;pic16f886.h: 872: unsigned CCP1M0 :1;
[; ;pic16f886.h: 873: unsigned CCP1M1 :1;
[; ;pic16f886.h: 874: unsigned CCP1M2 :1;
[; ;pic16f886.h: 875: unsigned CCP1M3 :1;
[; ;pic16f886.h: 876: unsigned DC1B0 :1;
[; ;pic16f886.h: 877: unsigned DC1B1 :1;
[; ;pic16f886.h: 878: unsigned P1M0 :1;
[; ;pic16f886.h: 879: unsigned P1M1 :1;
[; ;pic16f886.h: 880: };
[; ;pic16f886.h: 881: struct {
[; ;pic16f886.h: 882: unsigned :4;
[; ;pic16f886.h: 883: unsigned CCP1Y :1;
[; ;pic16f886.h: 884: unsigned CCP1X :1;
[; ;pic16f886.h: 885: };
[; ;pic16f886.h: 886: } CCP1CONbits_t;
[; ;pic16f886.h: 887: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f886.h: 957: extern volatile unsigned char RCSTA @ 0x018;
"959
[; ;pic16f886.h: 959: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f886.h: 962: typedef union {
[; ;pic16f886.h: 963: struct {
[; ;pic16f886.h: 964: unsigned RX9D :1;
[; ;pic16f886.h: 965: unsigned OERR :1;
[; ;pic16f886.h: 966: unsigned FERR :1;
[; ;pic16f886.h: 967: unsigned ADDEN :1;
[; ;pic16f886.h: 968: unsigned CREN :1;
[; ;pic16f886.h: 969: unsigned SREN :1;
[; ;pic16f886.h: 970: unsigned RX9 :1;
[; ;pic16f886.h: 971: unsigned SPEN :1;
[; ;pic16f886.h: 972: };
[; ;pic16f886.h: 973: struct {
[; ;pic16f886.h: 974: unsigned RCD8 :1;
[; ;pic16f886.h: 975: unsigned :5;
[; ;pic16f886.h: 976: unsigned RC9 :1;
[; ;pic16f886.h: 977: };
[; ;pic16f886.h: 978: struct {
[; ;pic16f886.h: 979: unsigned :6;
[; ;pic16f886.h: 980: unsigned nRC8 :1;
[; ;pic16f886.h: 981: };
[; ;pic16f886.h: 982: struct {
[; ;pic16f886.h: 983: unsigned :6;
[; ;pic16f886.h: 984: unsigned RC8_9 :1;
[; ;pic16f886.h: 985: };
[; ;pic16f886.h: 986: } RCSTAbits_t;
[; ;pic16f886.h: 987: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f886.h: 1052: extern volatile unsigned char TXREG @ 0x019;
"1054
[; ;pic16f886.h: 1054: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f886.h: 1059: extern volatile unsigned char RCREG @ 0x01A;
"1061
[; ;pic16f886.h: 1061: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f886.h: 1066: extern volatile unsigned short CCPR2 @ 0x01B;
"1068
[; ;pic16f886.h: 1068: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f886.h: 1073: extern volatile unsigned char CCPR2L @ 0x01B;
"1075
[; ;pic16f886.h: 1075: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f886.h: 1080: extern volatile unsigned char CCPR2H @ 0x01C;
"1082
[; ;pic16f886.h: 1082: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f886.h: 1087: extern volatile unsigned char CCP2CON @ 0x01D;
"1089
[; ;pic16f886.h: 1089: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f886.h: 1092: typedef union {
[; ;pic16f886.h: 1093: struct {
[; ;pic16f886.h: 1094: unsigned CCP2M :4;
[; ;pic16f886.h: 1095: unsigned DC2B0 :1;
[; ;pic16f886.h: 1096: unsigned DC2B1 :1;
[; ;pic16f886.h: 1097: };
[; ;pic16f886.h: 1098: struct {
[; ;pic16f886.h: 1099: unsigned CCP2M0 :1;
[; ;pic16f886.h: 1100: unsigned CCP2M1 :1;
[; ;pic16f886.h: 1101: unsigned CCP2M2 :1;
[; ;pic16f886.h: 1102: unsigned CCP2M3 :1;
[; ;pic16f886.h: 1103: unsigned CCP2Y :1;
[; ;pic16f886.h: 1104: unsigned CCP2X :1;
[; ;pic16f886.h: 1105: };
[; ;pic16f886.h: 1106: } CCP2CONbits_t;
[; ;pic16f886.h: 1107: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f886.h: 1157: extern volatile unsigned char ADRESH @ 0x01E;
"1159
[; ;pic16f886.h: 1159: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f886.h: 1164: extern volatile unsigned char ADCON0 @ 0x01F;
"1166
[; ;pic16f886.h: 1166: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f886.h: 1169: typedef union {
[; ;pic16f886.h: 1170: struct {
[; ;pic16f886.h: 1171: unsigned ADON :1;
[; ;pic16f886.h: 1172: unsigned GO_nDONE :1;
[; ;pic16f886.h: 1173: unsigned CHS :4;
[; ;pic16f886.h: 1174: unsigned ADCS :2;
[; ;pic16f886.h: 1175: };
[; ;pic16f886.h: 1176: struct {
[; ;pic16f886.h: 1177: unsigned :1;
[; ;pic16f886.h: 1178: unsigned GO :1;
[; ;pic16f886.h: 1179: unsigned CHS0 :1;
[; ;pic16f886.h: 1180: unsigned CHS1 :1;
[; ;pic16f886.h: 1181: unsigned CHS2 :1;
[; ;pic16f886.h: 1182: unsigned CHS3 :1;
[; ;pic16f886.h: 1183: unsigned ADCS0 :1;
[; ;pic16f886.h: 1184: unsigned ADCS1 :1;
[; ;pic16f886.h: 1185: };
[; ;pic16f886.h: 1186: struct {
[; ;pic16f886.h: 1187: unsigned :1;
[; ;pic16f886.h: 1188: unsigned nDONE :1;
[; ;pic16f886.h: 1189: };
[; ;pic16f886.h: 1190: struct {
[; ;pic16f886.h: 1191: unsigned :1;
[; ;pic16f886.h: 1192: unsigned GO_DONE :1;
[; ;pic16f886.h: 1193: };
[; ;pic16f886.h: 1194: } ADCON0bits_t;
[; ;pic16f886.h: 1195: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f886.h: 1265: extern volatile unsigned char OPTION_REG @ 0x081;
"1267
[; ;pic16f886.h: 1267: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f886.h: 1270: typedef union {
[; ;pic16f886.h: 1271: struct {
[; ;pic16f886.h: 1272: unsigned PS :3;
[; ;pic16f886.h: 1273: unsigned PSA :1;
[; ;pic16f886.h: 1274: unsigned T0SE :1;
[; ;pic16f886.h: 1275: unsigned T0CS :1;
[; ;pic16f886.h: 1276: unsigned INTEDG :1;
[; ;pic16f886.h: 1277: unsigned nRBPU :1;
[; ;pic16f886.h: 1278: };
[; ;pic16f886.h: 1279: struct {
[; ;pic16f886.h: 1280: unsigned PS0 :1;
[; ;pic16f886.h: 1281: unsigned PS1 :1;
[; ;pic16f886.h: 1282: unsigned PS2 :1;
[; ;pic16f886.h: 1283: };
[; ;pic16f886.h: 1284: } OPTION_REGbits_t;
[; ;pic16f886.h: 1285: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f886.h: 1335: extern volatile unsigned char TRISA @ 0x085;
"1337
[; ;pic16f886.h: 1337: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f886.h: 1340: typedef union {
[; ;pic16f886.h: 1341: struct {
[; ;pic16f886.h: 1342: unsigned TRISA0 :1;
[; ;pic16f886.h: 1343: unsigned TRISA1 :1;
[; ;pic16f886.h: 1344: unsigned TRISA2 :1;
[; ;pic16f886.h: 1345: unsigned TRISA3 :1;
[; ;pic16f886.h: 1346: unsigned TRISA4 :1;
[; ;pic16f886.h: 1347: unsigned TRISA5 :1;
[; ;pic16f886.h: 1348: unsigned TRISA6 :1;
[; ;pic16f886.h: 1349: unsigned TRISA7 :1;
[; ;pic16f886.h: 1350: };
[; ;pic16f886.h: 1351: } TRISAbits_t;
[; ;pic16f886.h: 1352: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f886.h: 1397: extern volatile unsigned char TRISB @ 0x086;
"1399
[; ;pic16f886.h: 1399: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f886.h: 1402: typedef union {
[; ;pic16f886.h: 1403: struct {
[; ;pic16f886.h: 1404: unsigned TRISB0 :1;
[; ;pic16f886.h: 1405: unsigned TRISB1 :1;
[; ;pic16f886.h: 1406: unsigned TRISB2 :1;
[; ;pic16f886.h: 1407: unsigned TRISB3 :1;
[; ;pic16f886.h: 1408: unsigned TRISB4 :1;
[; ;pic16f886.h: 1409: unsigned TRISB5 :1;
[; ;pic16f886.h: 1410: unsigned TRISB6 :1;
[; ;pic16f886.h: 1411: unsigned TRISB7 :1;
[; ;pic16f886.h: 1412: };
[; ;pic16f886.h: 1413: } TRISBbits_t;
[; ;pic16f886.h: 1414: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f886.h: 1459: extern volatile unsigned char TRISC @ 0x087;
"1461
[; ;pic16f886.h: 1461: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f886.h: 1464: typedef union {
[; ;pic16f886.h: 1465: struct {
[; ;pic16f886.h: 1466: unsigned TRISC0 :1;
[; ;pic16f886.h: 1467: unsigned TRISC1 :1;
[; ;pic16f886.h: 1468: unsigned TRISC2 :1;
[; ;pic16f886.h: 1469: unsigned TRISC3 :1;
[; ;pic16f886.h: 1470: unsigned TRISC4 :1;
[; ;pic16f886.h: 1471: unsigned TRISC5 :1;
[; ;pic16f886.h: 1472: unsigned TRISC6 :1;
[; ;pic16f886.h: 1473: unsigned TRISC7 :1;
[; ;pic16f886.h: 1474: };
[; ;pic16f886.h: 1475: } TRISCbits_t;
[; ;pic16f886.h: 1476: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f886.h: 1521: extern volatile unsigned char TRISE @ 0x089;
"1523
[; ;pic16f886.h: 1523: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f886.h: 1526: typedef union {
[; ;pic16f886.h: 1527: struct {
[; ;pic16f886.h: 1528: unsigned :3;
[; ;pic16f886.h: 1529: unsigned TRISE3 :1;
[; ;pic16f886.h: 1530: };
[; ;pic16f886.h: 1531: } TRISEbits_t;
[; ;pic16f886.h: 1532: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f886.h: 1542: extern volatile unsigned char PIE1 @ 0x08C;
"1544
[; ;pic16f886.h: 1544: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f886.h: 1547: typedef union {
[; ;pic16f886.h: 1548: struct {
[; ;pic16f886.h: 1549: unsigned TMR1IE :1;
[; ;pic16f886.h: 1550: unsigned TMR2IE :1;
[; ;pic16f886.h: 1551: unsigned CCP1IE :1;
[; ;pic16f886.h: 1552: unsigned SSPIE :1;
[; ;pic16f886.h: 1553: unsigned TXIE :1;
[; ;pic16f886.h: 1554: unsigned RCIE :1;
[; ;pic16f886.h: 1555: unsigned ADIE :1;
[; ;pic16f886.h: 1556: };
[; ;pic16f886.h: 1557: } PIE1bits_t;
[; ;pic16f886.h: 1558: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f886.h: 1598: extern volatile unsigned char PIE2 @ 0x08D;
"1600
[; ;pic16f886.h: 1600: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f886.h: 1603: typedef union {
[; ;pic16f886.h: 1604: struct {
[; ;pic16f886.h: 1605: unsigned CCP2IE :1;
[; ;pic16f886.h: 1606: unsigned :1;
[; ;pic16f886.h: 1607: unsigned ULPWUIE :1;
[; ;pic16f886.h: 1608: unsigned BCLIE :1;
[; ;pic16f886.h: 1609: unsigned EEIE :1;
[; ;pic16f886.h: 1610: unsigned C1IE :1;
[; ;pic16f886.h: 1611: unsigned C2IE :1;
[; ;pic16f886.h: 1612: unsigned OSFIE :1;
[; ;pic16f886.h: 1613: };
[; ;pic16f886.h: 1614: } PIE2bits_t;
[; ;pic16f886.h: 1615: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f886.h: 1655: extern volatile unsigned char PCON @ 0x08E;
"1657
[; ;pic16f886.h: 1657: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f886.h: 1660: typedef union {
[; ;pic16f886.h: 1661: struct {
[; ;pic16f886.h: 1662: unsigned nBOR :1;
[; ;pic16f886.h: 1663: unsigned nPOR :1;
[; ;pic16f886.h: 1664: unsigned :2;
[; ;pic16f886.h: 1665: unsigned SBOREN :1;
[; ;pic16f886.h: 1666: unsigned ULPWUE :1;
[; ;pic16f886.h: 1667: };
[; ;pic16f886.h: 1668: struct {
[; ;pic16f886.h: 1669: unsigned nBO :1;
[; ;pic16f886.h: 1670: };
[; ;pic16f886.h: 1671: } PCONbits_t;
[; ;pic16f886.h: 1672: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f886.h: 1702: extern volatile unsigned char OSCCON @ 0x08F;
"1704
[; ;pic16f886.h: 1704: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f886.h: 1707: typedef union {
[; ;pic16f886.h: 1708: struct {
[; ;pic16f886.h: 1709: unsigned SCS :1;
[; ;pic16f886.h: 1710: unsigned LTS :1;
[; ;pic16f886.h: 1711: unsigned HTS :1;
[; ;pic16f886.h: 1712: unsigned OSTS :1;
[; ;pic16f886.h: 1713: unsigned IRCF :3;
[; ;pic16f886.h: 1714: };
[; ;pic16f886.h: 1715: struct {
[; ;pic16f886.h: 1716: unsigned :4;
[; ;pic16f886.h: 1717: unsigned IRCF0 :1;
[; ;pic16f886.h: 1718: unsigned IRCF1 :1;
[; ;pic16f886.h: 1719: unsigned IRCF2 :1;
[; ;pic16f886.h: 1720: };
[; ;pic16f886.h: 1721: } OSCCONbits_t;
[; ;pic16f886.h: 1722: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f886.h: 1767: extern volatile unsigned char OSCTUNE @ 0x090;
"1769
[; ;pic16f886.h: 1769: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f886.h: 1772: typedef union {
[; ;pic16f886.h: 1773: struct {
[; ;pic16f886.h: 1774: unsigned TUN :5;
[; ;pic16f886.h: 1775: };
[; ;pic16f886.h: 1776: struct {
[; ;pic16f886.h: 1777: unsigned TUN0 :1;
[; ;pic16f886.h: 1778: unsigned TUN1 :1;
[; ;pic16f886.h: 1779: unsigned TUN2 :1;
[; ;pic16f886.h: 1780: unsigned TUN3 :1;
[; ;pic16f886.h: 1781: unsigned TUN4 :1;
[; ;pic16f886.h: 1782: };
[; ;pic16f886.h: 1783: } OSCTUNEbits_t;
[; ;pic16f886.h: 1784: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f886.h: 1819: extern volatile unsigned char SSPCON2 @ 0x091;
"1821
[; ;pic16f886.h: 1821: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f886.h: 1824: typedef union {
[; ;pic16f886.h: 1825: struct {
[; ;pic16f886.h: 1826: unsigned SEN :1;
[; ;pic16f886.h: 1827: unsigned RSEN :1;
[; ;pic16f886.h: 1828: unsigned PEN :1;
[; ;pic16f886.h: 1829: unsigned RCEN :1;
[; ;pic16f886.h: 1830: unsigned ACKEN :1;
[; ;pic16f886.h: 1831: unsigned ACKDT :1;
[; ;pic16f886.h: 1832: unsigned ACKSTAT :1;
[; ;pic16f886.h: 1833: unsigned GCEN :1;
[; ;pic16f886.h: 1834: };
[; ;pic16f886.h: 1835: } SSPCON2bits_t;
[; ;pic16f886.h: 1836: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f886.h: 1881: extern volatile unsigned char PR2 @ 0x092;
"1883
[; ;pic16f886.h: 1883: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f886.h: 1888: extern volatile unsigned char SSPADD @ 0x093;
"1890
[; ;pic16f886.h: 1890: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f886.h: 1895: extern volatile unsigned char SSPMSK @ 0x093;
"1897
[; ;pic16f886.h: 1897: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f886.h: 1900: extern volatile unsigned char MSK @ 0x093;
"1902
[; ;pic16f886.h: 1902: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f886.h: 1905: typedef union {
[; ;pic16f886.h: 1906: struct {
[; ;pic16f886.h: 1907: unsigned MSK0 :1;
[; ;pic16f886.h: 1908: unsigned MSK1 :1;
[; ;pic16f886.h: 1909: unsigned MSK2 :1;
[; ;pic16f886.h: 1910: unsigned MSK3 :1;
[; ;pic16f886.h: 1911: unsigned MSK4 :1;
[; ;pic16f886.h: 1912: unsigned MSK5 :1;
[; ;pic16f886.h: 1913: unsigned MSK6 :1;
[; ;pic16f886.h: 1914: unsigned MSK7 :1;
[; ;pic16f886.h: 1915: };
[; ;pic16f886.h: 1916: } SSPMSKbits_t;
[; ;pic16f886.h: 1917: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f886.h: 1960: typedef union {
[; ;pic16f886.h: 1961: struct {
[; ;pic16f886.h: 1962: unsigned MSK0 :1;
[; ;pic16f886.h: 1963: unsigned MSK1 :1;
[; ;pic16f886.h: 1964: unsigned MSK2 :1;
[; ;pic16f886.h: 1965: unsigned MSK3 :1;
[; ;pic16f886.h: 1966: unsigned MSK4 :1;
[; ;pic16f886.h: 1967: unsigned MSK5 :1;
[; ;pic16f886.h: 1968: unsigned MSK6 :1;
[; ;pic16f886.h: 1969: unsigned MSK7 :1;
[; ;pic16f886.h: 1970: };
[; ;pic16f886.h: 1971: } MSKbits_t;
[; ;pic16f886.h: 1972: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f886.h: 2017: extern volatile unsigned char SSPSTAT @ 0x094;
"2019
[; ;pic16f886.h: 2019: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f886.h: 2022: typedef union {
[; ;pic16f886.h: 2023: struct {
[; ;pic16f886.h: 2024: unsigned BF :1;
[; ;pic16f886.h: 2025: unsigned UA :1;
[; ;pic16f886.h: 2026: unsigned R_nW :1;
[; ;pic16f886.h: 2027: unsigned S :1;
[; ;pic16f886.h: 2028: unsigned P :1;
[; ;pic16f886.h: 2029: unsigned D_nA :1;
[; ;pic16f886.h: 2030: unsigned CKE :1;
[; ;pic16f886.h: 2031: unsigned SMP :1;
[; ;pic16f886.h: 2032: };
[; ;pic16f886.h: 2033: struct {
[; ;pic16f886.h: 2034: unsigned :2;
[; ;pic16f886.h: 2035: unsigned R :1;
[; ;pic16f886.h: 2036: unsigned :2;
[; ;pic16f886.h: 2037: unsigned D :1;
[; ;pic16f886.h: 2038: };
[; ;pic16f886.h: 2039: struct {
[; ;pic16f886.h: 2040: unsigned :2;
[; ;pic16f886.h: 2041: unsigned I2C_READ :1;
[; ;pic16f886.h: 2042: unsigned I2C_START :1;
[; ;pic16f886.h: 2043: unsigned I2C_STOP :1;
[; ;pic16f886.h: 2044: unsigned I2C_DATA :1;
[; ;pic16f886.h: 2045: };
[; ;pic16f886.h: 2046: struct {
[; ;pic16f886.h: 2047: unsigned :2;
[; ;pic16f886.h: 2048: unsigned nW :1;
[; ;pic16f886.h: 2049: unsigned :2;
[; ;pic16f886.h: 2050: unsigned nA :1;
[; ;pic16f886.h: 2051: };
[; ;pic16f886.h: 2052: struct {
[; ;pic16f886.h: 2053: unsigned :2;
[; ;pic16f886.h: 2054: unsigned nWRITE :1;
[; ;pic16f886.h: 2055: unsigned :2;
[; ;pic16f886.h: 2056: unsigned nADDRESS :1;
[; ;pic16f886.h: 2057: };
[; ;pic16f886.h: 2058: struct {
[; ;pic16f886.h: 2059: unsigned :2;
[; ;pic16f886.h: 2060: unsigned R_W :1;
[; ;pic16f886.h: 2061: unsigned :2;
[; ;pic16f886.h: 2062: unsigned D_A :1;
[; ;pic16f886.h: 2063: };
[; ;pic16f886.h: 2064: struct {
[; ;pic16f886.h: 2065: unsigned :2;
[; ;pic16f886.h: 2066: unsigned READ_WRITE :1;
[; ;pic16f886.h: 2067: unsigned :2;
[; ;pic16f886.h: 2068: unsigned DATA_ADDRESS :1;
[; ;pic16f886.h: 2069: };
[; ;pic16f886.h: 2070: } SSPSTATbits_t;
[; ;pic16f886.h: 2071: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f886.h: 2186: extern volatile unsigned char WPUB @ 0x095;
"2188
[; ;pic16f886.h: 2188: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f886.h: 2191: typedef union {
[; ;pic16f886.h: 2192: struct {
[; ;pic16f886.h: 2193: unsigned WPUB :8;
[; ;pic16f886.h: 2194: };
[; ;pic16f886.h: 2195: struct {
[; ;pic16f886.h: 2196: unsigned WPUB0 :1;
[; ;pic16f886.h: 2197: unsigned WPUB1 :1;
[; ;pic16f886.h: 2198: unsigned WPUB2 :1;
[; ;pic16f886.h: 2199: unsigned WPUB3 :1;
[; ;pic16f886.h: 2200: unsigned WPUB4 :1;
[; ;pic16f886.h: 2201: unsigned WPUB5 :1;
[; ;pic16f886.h: 2202: unsigned WPUB6 :1;
[; ;pic16f886.h: 2203: unsigned WPUB7 :1;
[; ;pic16f886.h: 2204: };
[; ;pic16f886.h: 2205: } WPUBbits_t;
[; ;pic16f886.h: 2206: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f886.h: 2256: extern volatile unsigned char IOCB @ 0x096;
"2258
[; ;pic16f886.h: 2258: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f886.h: 2261: typedef union {
[; ;pic16f886.h: 2262: struct {
[; ;pic16f886.h: 2263: unsigned IOCB :8;
[; ;pic16f886.h: 2264: };
[; ;pic16f886.h: 2265: struct {
[; ;pic16f886.h: 2266: unsigned IOCB0 :1;
[; ;pic16f886.h: 2267: unsigned IOCB1 :1;
[; ;pic16f886.h: 2268: unsigned IOCB2 :1;
[; ;pic16f886.h: 2269: unsigned IOCB3 :1;
[; ;pic16f886.h: 2270: unsigned IOCB4 :1;
[; ;pic16f886.h: 2271: unsigned IOCB5 :1;
[; ;pic16f886.h: 2272: unsigned IOCB6 :1;
[; ;pic16f886.h: 2273: unsigned IOCB7 :1;
[; ;pic16f886.h: 2274: };
[; ;pic16f886.h: 2275: } IOCBbits_t;
[; ;pic16f886.h: 2276: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f886.h: 2326: extern volatile unsigned char VRCON @ 0x097;
"2328
[; ;pic16f886.h: 2328: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f886.h: 2331: typedef union {
[; ;pic16f886.h: 2332: struct {
[; ;pic16f886.h: 2333: unsigned VR :4;
[; ;pic16f886.h: 2334: unsigned VRSS :1;
[; ;pic16f886.h: 2335: unsigned VRR :1;
[; ;pic16f886.h: 2336: unsigned VROE :1;
[; ;pic16f886.h: 2337: unsigned VREN :1;
[; ;pic16f886.h: 2338: };
[; ;pic16f886.h: 2339: struct {
[; ;pic16f886.h: 2340: unsigned VR0 :1;
[; ;pic16f886.h: 2341: unsigned VR1 :1;
[; ;pic16f886.h: 2342: unsigned VR2 :1;
[; ;pic16f886.h: 2343: unsigned VR3 :1;
[; ;pic16f886.h: 2344: };
[; ;pic16f886.h: 2345: } VRCONbits_t;
[; ;pic16f886.h: 2346: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f886.h: 2396: extern volatile unsigned char TXSTA @ 0x098;
"2398
[; ;pic16f886.h: 2398: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f886.h: 2401: typedef union {
[; ;pic16f886.h: 2402: struct {
[; ;pic16f886.h: 2403: unsigned TX9D :1;
[; ;pic16f886.h: 2404: unsigned TRMT :1;
[; ;pic16f886.h: 2405: unsigned BRGH :1;
[; ;pic16f886.h: 2406: unsigned SENDB :1;
[; ;pic16f886.h: 2407: unsigned SYNC :1;
[; ;pic16f886.h: 2408: unsigned TXEN :1;
[; ;pic16f886.h: 2409: unsigned TX9 :1;
[; ;pic16f886.h: 2410: unsigned CSRC :1;
[; ;pic16f886.h: 2411: };
[; ;pic16f886.h: 2412: struct {
[; ;pic16f886.h: 2413: unsigned TXD8 :1;
[; ;pic16f886.h: 2414: unsigned :5;
[; ;pic16f886.h: 2415: unsigned nTX8 :1;
[; ;pic16f886.h: 2416: };
[; ;pic16f886.h: 2417: struct {
[; ;pic16f886.h: 2418: unsigned :6;
[; ;pic16f886.h: 2419: unsigned TX8_9 :1;
[; ;pic16f886.h: 2420: };
[; ;pic16f886.h: 2421: } TXSTAbits_t;
[; ;pic16f886.h: 2422: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f886.h: 2482: extern volatile unsigned char SPBRG @ 0x099;
"2484
[; ;pic16f886.h: 2484: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f886.h: 2487: typedef union {
[; ;pic16f886.h: 2488: struct {
[; ;pic16f886.h: 2489: unsigned BRG0 :1;
[; ;pic16f886.h: 2490: unsigned BRG1 :1;
[; ;pic16f886.h: 2491: unsigned BRG2 :1;
[; ;pic16f886.h: 2492: unsigned BRG3 :1;
[; ;pic16f886.h: 2493: unsigned BRG4 :1;
[; ;pic16f886.h: 2494: unsigned BRG5 :1;
[; ;pic16f886.h: 2495: unsigned BRG6 :1;
[; ;pic16f886.h: 2496: unsigned BRG7 :1;
[; ;pic16f886.h: 2497: };
[; ;pic16f886.h: 2498: } SPBRGbits_t;
[; ;pic16f886.h: 2499: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f886.h: 2544: extern volatile unsigned char SPBRGH @ 0x09A;
"2546
[; ;pic16f886.h: 2546: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f886.h: 2549: typedef union {
[; ;pic16f886.h: 2550: struct {
[; ;pic16f886.h: 2551: unsigned SPBRGH :8;
[; ;pic16f886.h: 2552: };
[; ;pic16f886.h: 2553: struct {
[; ;pic16f886.h: 2554: unsigned BRG8 :1;
[; ;pic16f886.h: 2555: unsigned BRG9 :1;
[; ;pic16f886.h: 2556: unsigned BRG10 :1;
[; ;pic16f886.h: 2557: unsigned BRG11 :1;
[; ;pic16f886.h: 2558: unsigned BRG12 :1;
[; ;pic16f886.h: 2559: unsigned BRG13 :1;
[; ;pic16f886.h: 2560: unsigned BRG14 :1;
[; ;pic16f886.h: 2561: unsigned BRG15 :1;
[; ;pic16f886.h: 2562: };
[; ;pic16f886.h: 2563: } SPBRGHbits_t;
[; ;pic16f886.h: 2564: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f886.h: 2614: extern volatile unsigned char PWM1CON @ 0x09B;
"2616
[; ;pic16f886.h: 2616: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f886.h: 2619: typedef union {
[; ;pic16f886.h: 2620: struct {
[; ;pic16f886.h: 2621: unsigned PDC :7;
[; ;pic16f886.h: 2622: unsigned PRSEN :1;
[; ;pic16f886.h: 2623: };
[; ;pic16f886.h: 2624: struct {
[; ;pic16f886.h: 2625: unsigned PDC0 :1;
[; ;pic16f886.h: 2626: unsigned PDC1 :1;
[; ;pic16f886.h: 2627: unsigned PDC2 :1;
[; ;pic16f886.h: 2628: unsigned PDC3 :1;
[; ;pic16f886.h: 2629: unsigned PDC4 :1;
[; ;pic16f886.h: 2630: unsigned PDC5 :1;
[; ;pic16f886.h: 2631: unsigned PDC6 :1;
[; ;pic16f886.h: 2632: };
[; ;pic16f886.h: 2633: } PWM1CONbits_t;
[; ;pic16f886.h: 2634: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f886.h: 2684: extern volatile unsigned char ECCPAS @ 0x09C;
"2686
[; ;pic16f886.h: 2686: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f886.h: 2689: typedef union {
[; ;pic16f886.h: 2690: struct {
[; ;pic16f886.h: 2691: unsigned PSSBD :2;
[; ;pic16f886.h: 2692: unsigned PSSAC :2;
[; ;pic16f886.h: 2693: unsigned ECCPAS :3;
[; ;pic16f886.h: 2694: unsigned ECCPASE :1;
[; ;pic16f886.h: 2695: };
[; ;pic16f886.h: 2696: struct {
[; ;pic16f886.h: 2697: unsigned PSSBD0 :1;
[; ;pic16f886.h: 2698: unsigned PSSBD1 :1;
[; ;pic16f886.h: 2699: unsigned PSSAC0 :1;
[; ;pic16f886.h: 2700: unsigned PSSAC1 :1;
[; ;pic16f886.h: 2701: unsigned ECCPAS0 :1;
[; ;pic16f886.h: 2702: unsigned ECCPAS1 :1;
[; ;pic16f886.h: 2703: unsigned ECCPAS2 :1;
[; ;pic16f886.h: 2704: };
[; ;pic16f886.h: 2705: } ECCPASbits_t;
[; ;pic16f886.h: 2706: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f886.h: 2766: extern volatile unsigned char PSTRCON @ 0x09D;
"2768
[; ;pic16f886.h: 2768: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f886.h: 2771: typedef union {
[; ;pic16f886.h: 2772: struct {
[; ;pic16f886.h: 2773: unsigned STRA :1;
[; ;pic16f886.h: 2774: unsigned STRB :1;
[; ;pic16f886.h: 2775: unsigned STRC :1;
[; ;pic16f886.h: 2776: unsigned STRD :1;
[; ;pic16f886.h: 2777: unsigned STRSYNC :1;
[; ;pic16f886.h: 2778: };
[; ;pic16f886.h: 2779: } PSTRCONbits_t;
[; ;pic16f886.h: 2780: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f886.h: 2810: extern volatile unsigned char ADRESL @ 0x09E;
"2812
[; ;pic16f886.h: 2812: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f886.h: 2817: extern volatile unsigned char ADCON1 @ 0x09F;
"2819
[; ;pic16f886.h: 2819: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f886.h: 2822: typedef union {
[; ;pic16f886.h: 2823: struct {
[; ;pic16f886.h: 2824: unsigned :4;
[; ;pic16f886.h: 2825: unsigned VCFG0 :1;
[; ;pic16f886.h: 2826: unsigned VCFG1 :1;
[; ;pic16f886.h: 2827: unsigned :1;
[; ;pic16f886.h: 2828: unsigned ADFM :1;
[; ;pic16f886.h: 2829: };
[; ;pic16f886.h: 2830: } ADCON1bits_t;
[; ;pic16f886.h: 2831: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f886.h: 2851: extern volatile unsigned char WDTCON @ 0x105;
"2853
[; ;pic16f886.h: 2853: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f886.h: 2856: typedef union {
[; ;pic16f886.h: 2857: struct {
[; ;pic16f886.h: 2858: unsigned SWDTEN :1;
[; ;pic16f886.h: 2859: unsigned WDTPS :4;
[; ;pic16f886.h: 2860: };
[; ;pic16f886.h: 2861: struct {
[; ;pic16f886.h: 2862: unsigned :1;
[; ;pic16f886.h: 2863: unsigned WDTPS0 :1;
[; ;pic16f886.h: 2864: unsigned WDTPS1 :1;
[; ;pic16f886.h: 2865: unsigned WDTPS2 :1;
[; ;pic16f886.h: 2866: unsigned WDTPS3 :1;
[; ;pic16f886.h: 2867: };
[; ;pic16f886.h: 2868: } WDTCONbits_t;
[; ;pic16f886.h: 2869: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f886.h: 2904: extern volatile unsigned char CM1CON0 @ 0x107;
"2906
[; ;pic16f886.h: 2906: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f886.h: 2909: typedef union {
[; ;pic16f886.h: 2910: struct {
[; ;pic16f886.h: 2911: unsigned C1CH :2;
[; ;pic16f886.h: 2912: unsigned C1R :1;
[; ;pic16f886.h: 2913: unsigned :1;
[; ;pic16f886.h: 2914: unsigned C1POL :1;
[; ;pic16f886.h: 2915: unsigned C1OE :1;
[; ;pic16f886.h: 2916: unsigned C1OUT :1;
[; ;pic16f886.h: 2917: unsigned C1ON :1;
[; ;pic16f886.h: 2918: };
[; ;pic16f886.h: 2919: struct {
[; ;pic16f886.h: 2920: unsigned C1CH0 :1;
[; ;pic16f886.h: 2921: unsigned C1CH1 :1;
[; ;pic16f886.h: 2922: };
[; ;pic16f886.h: 2923: } CM1CON0bits_t;
[; ;pic16f886.h: 2924: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f886.h: 2969: extern volatile unsigned char CM2CON0 @ 0x108;
"2971
[; ;pic16f886.h: 2971: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f886.h: 2974: typedef union {
[; ;pic16f886.h: 2975: struct {
[; ;pic16f886.h: 2976: unsigned C2CH :2;
[; ;pic16f886.h: 2977: unsigned C2R :1;
[; ;pic16f886.h: 2978: unsigned :1;
[; ;pic16f886.h: 2979: unsigned C2POL :1;
[; ;pic16f886.h: 2980: unsigned C2OE :1;
[; ;pic16f886.h: 2981: unsigned C2OUT :1;
[; ;pic16f886.h: 2982: unsigned C2ON :1;
[; ;pic16f886.h: 2983: };
[; ;pic16f886.h: 2984: struct {
[; ;pic16f886.h: 2985: unsigned C2CH0 :1;
[; ;pic16f886.h: 2986: unsigned C2CH1 :1;
[; ;pic16f886.h: 2987: };
[; ;pic16f886.h: 2988: } CM2CON0bits_t;
[; ;pic16f886.h: 2989: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f886.h: 3034: extern volatile unsigned char CM2CON1 @ 0x109;
"3036
[; ;pic16f886.h: 3036: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f886.h: 3039: typedef union {
[; ;pic16f886.h: 3040: struct {
[; ;pic16f886.h: 3041: unsigned C2SYNC :1;
[; ;pic16f886.h: 3042: unsigned T1GSS :1;
[; ;pic16f886.h: 3043: unsigned :2;
[; ;pic16f886.h: 3044: unsigned C2RSEL :1;
[; ;pic16f886.h: 3045: unsigned C1RSEL :1;
[; ;pic16f886.h: 3046: unsigned MC2OUT :1;
[; ;pic16f886.h: 3047: unsigned MC1OUT :1;
[; ;pic16f886.h: 3048: };
[; ;pic16f886.h: 3049: } CM2CON1bits_t;
[; ;pic16f886.h: 3050: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f886.h: 3085: extern volatile unsigned char EEDATA @ 0x10C;
"3087
[; ;pic16f886.h: 3087: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f886.h: 3090: extern volatile unsigned char EEDAT @ 0x10C;
"3092
[; ;pic16f886.h: 3092: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f886.h: 3097: extern volatile unsigned char EEADR @ 0x10D;
"3099
[; ;pic16f886.h: 3099: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f886.h: 3104: extern volatile unsigned char EEDATH @ 0x10E;
"3106
[; ;pic16f886.h: 3106: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f886.h: 3111: extern volatile unsigned char EEADRH @ 0x10F;
"3113
[; ;pic16f886.h: 3113: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f886.h: 3118: extern volatile unsigned char SRCON @ 0x185;
"3120
[; ;pic16f886.h: 3120: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f886.h: 3123: typedef union {
[; ;pic16f886.h: 3124: struct {
[; ;pic16f886.h: 3125: unsigned FVREN :1;
[; ;pic16f886.h: 3126: unsigned :1;
[; ;pic16f886.h: 3127: unsigned PULSR :1;
[; ;pic16f886.h: 3128: unsigned PULSS :1;
[; ;pic16f886.h: 3129: unsigned C2REN :1;
[; ;pic16f886.h: 3130: unsigned C1SEN :1;
[; ;pic16f886.h: 3131: unsigned SR0 :1;
[; ;pic16f886.h: 3132: unsigned SR1 :1;
[; ;pic16f886.h: 3133: };
[; ;pic16f886.h: 3134: } SRCONbits_t;
[; ;pic16f886.h: 3135: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f886.h: 3175: extern volatile unsigned char BAUDCTL @ 0x187;
"3177
[; ;pic16f886.h: 3177: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f886.h: 3180: typedef union {
[; ;pic16f886.h: 3181: struct {
[; ;pic16f886.h: 3182: unsigned ABDEN :1;
[; ;pic16f886.h: 3183: unsigned WUE :1;
[; ;pic16f886.h: 3184: unsigned :1;
[; ;pic16f886.h: 3185: unsigned BRG16 :1;
[; ;pic16f886.h: 3186: unsigned SCKP :1;
[; ;pic16f886.h: 3187: unsigned :1;
[; ;pic16f886.h: 3188: unsigned RCIDL :1;
[; ;pic16f886.h: 3189: unsigned ABDOVF :1;
[; ;pic16f886.h: 3190: };
[; ;pic16f886.h: 3191: } BAUDCTLbits_t;
[; ;pic16f886.h: 3192: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f886.h: 3227: extern volatile unsigned char ANSEL @ 0x188;
"3229
[; ;pic16f886.h: 3229: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f886.h: 3232: typedef union {
[; ;pic16f886.h: 3233: struct {
[; ;pic16f886.h: 3234: unsigned ANS0 :1;
[; ;pic16f886.h: 3235: unsigned ANS1 :1;
[; ;pic16f886.h: 3236: unsigned ANS2 :1;
[; ;pic16f886.h: 3237: unsigned ANS3 :1;
[; ;pic16f886.h: 3238: unsigned ANS4 :1;
[; ;pic16f886.h: 3239: };
[; ;pic16f886.h: 3240: } ANSELbits_t;
[; ;pic16f886.h: 3241: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f886.h: 3271: extern volatile unsigned char ANSELH @ 0x189;
"3273
[; ;pic16f886.h: 3273: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f886.h: 3276: typedef union {
[; ;pic16f886.h: 3277: struct {
[; ;pic16f886.h: 3278: unsigned ANS8 :1;
[; ;pic16f886.h: 3279: unsigned ANS9 :1;
[; ;pic16f886.h: 3280: unsigned ANS10 :1;
[; ;pic16f886.h: 3281: unsigned ANS11 :1;
[; ;pic16f886.h: 3282: unsigned ANS12 :1;
[; ;pic16f886.h: 3283: unsigned ANS13 :1;
[; ;pic16f886.h: 3284: };
[; ;pic16f886.h: 3285: } ANSELHbits_t;
[; ;pic16f886.h: 3286: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f886.h: 3321: extern volatile unsigned char EECON1 @ 0x18C;
"3323
[; ;pic16f886.h: 3323: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f886.h: 3326: typedef union {
[; ;pic16f886.h: 3327: struct {
[; ;pic16f886.h: 3328: unsigned RD :1;
[; ;pic16f886.h: 3329: unsigned WR :1;
[; ;pic16f886.h: 3330: unsigned WREN :1;
[; ;pic16f886.h: 3331: unsigned WRERR :1;
[; ;pic16f886.h: 3332: unsigned :3;
[; ;pic16f886.h: 3333: unsigned EEPGD :1;
[; ;pic16f886.h: 3334: };
[; ;pic16f886.h: 3335: } EECON1bits_t;
[; ;pic16f886.h: 3336: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f886.h: 3366: extern volatile unsigned char EECON2 @ 0x18D;
"3368
[; ;pic16f886.h: 3368: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f886.h: 3378: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f886.h: 3380: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f886.h: 3382: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f886.h: 3384: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f886.h: 3386: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f886.h: 3388: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f886.h: 3390: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f886.h: 3392: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f886.h: 3394: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f886.h: 3396: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f886.h: 3398: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f886.h: 3400: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f886.h: 3402: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f886.h: 3404: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f886.h: 3406: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f886.h: 3408: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f886.h: 3410: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f886.h: 3412: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f886.h: 3414: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f886.h: 3416: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f886.h: 3418: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f886.h: 3420: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f886.h: 3422: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f886.h: 3424: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f886.h: 3426: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f886.h: 3428: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f886.h: 3430: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f886.h: 3432: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f886.h: 3434: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f886.h: 3436: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f886.h: 3438: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f886.h: 3440: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f886.h: 3442: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f886.h: 3444: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f886.h: 3446: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f886.h: 3448: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f886.h: 3450: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f886.h: 3452: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f886.h: 3454: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f886.h: 3456: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f886.h: 3458: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f886.h: 3460: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f886.h: 3462: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f886.h: 3464: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f886.h: 3466: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f886.h: 3468: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f886.h: 3470: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f886.h: 3472: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f886.h: 3474: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f886.h: 3476: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f886.h: 3478: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f886.h: 3480: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f886.h: 3482: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f886.h: 3484: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f886.h: 3486: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f886.h: 3488: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f886.h: 3490: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f886.h: 3492: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f886.h: 3494: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f886.h: 3496: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f886.h: 3498: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f886.h: 3500: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f886.h: 3502: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f886.h: 3504: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f886.h: 3506: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f886.h: 3508: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f886.h: 3510: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f886.h: 3512: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f886.h: 3514: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f886.h: 3516: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f886.h: 3518: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f886.h: 3520: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f886.h: 3522: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f886.h: 3524: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f886.h: 3526: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f886.h: 3528: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f886.h: 3530: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f886.h: 3532: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f886.h: 3534: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f886.h: 3536: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f886.h: 3538: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f886.h: 3540: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f886.h: 3542: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f886.h: 3544: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f886.h: 3546: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f886.h: 3548: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f886.h: 3550: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f886.h: 3552: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f886.h: 3554: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f886.h: 3556: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f886.h: 3558: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f886.h: 3560: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f886.h: 3562: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3564: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f886.h: 3566: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f886.h: 3568: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f886.h: 3570: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f886.h: 3572: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f886.h: 3574: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3576: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3578: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f886.h: 3580: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f886.h: 3582: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f886.h: 3584: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f886.h: 3586: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f886.h: 3588: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f886.h: 3590: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f886.h: 3592: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f886.h: 3594: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f886.h: 3596: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f886.h: 3598: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f886.h: 3600: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3602: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3604: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3606: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f886.h: 3608: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3610: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3612: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f886.h: 3614: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f886.h: 3616: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f886.h: 3618: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f886.h: 3620: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f886.h: 3622: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f886.h: 3624: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f886.h: 3626: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f886.h: 3628: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f886.h: 3630: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f886.h: 3632: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f886.h: 3634: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f886.h: 3636: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f886.h: 3638: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f886.h: 3640: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f886.h: 3642: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f886.h: 3644: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f886.h: 3646: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f886.h: 3648: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f886.h: 3650: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f886.h: 3652: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f886.h: 3654: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f886.h: 3656: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f886.h: 3658: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f886.h: 3660: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f886.h: 3662: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f886.h: 3664: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f886.h: 3666: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f886.h: 3668: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f886.h: 3670: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f886.h: 3672: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f886.h: 3674: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f886.h: 3676: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f886.h: 3678: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f886.h: 3680: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f886.h: 3682: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f886.h: 3684: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f886.h: 3686: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f886.h: 3688: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f886.h: 3690: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f886.h: 3692: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f886.h: 3694: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f886.h: 3696: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f886.h: 3698: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f886.h: 3700: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f886.h: 3702: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f886.h: 3704: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f886.h: 3706: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f886.h: 3708: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f886.h: 3710: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f886.h: 3712: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f886.h: 3714: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f886.h: 3716: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f886.h: 3718: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f886.h: 3720: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f886.h: 3722: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f886.h: 3724: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f886.h: 3726: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f886.h: 3728: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f886.h: 3730: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f886.h: 3732: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f886.h: 3734: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f886.h: 3736: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f886.h: 3738: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f886.h: 3740: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f886.h: 3742: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f886.h: 3744: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f886.h: 3746: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f886.h: 3748: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f886.h: 3750: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f886.h: 3752: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f886.h: 3754: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f886.h: 3756: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f886.h: 3758: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f886.h: 3760: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f886.h: 3762: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f886.h: 3764: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f886.h: 3766: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f886.h: 3768: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f886.h: 3770: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f886.h: 3772: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3774: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3776: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f886.h: 3778: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f886.h: 3780: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f886.h: 3782: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f886.h: 3784: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f886.h: 3786: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f886.h: 3788: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f886.h: 3790: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3792: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f886.h: 3794: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f886.h: 3796: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f886.h: 3798: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3800: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f886.h: 3802: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3804: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3806: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f886.h: 3808: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f886.h: 3810: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f886.h: 3812: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f886.h: 3814: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f886.h: 3816: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f886.h: 3818: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f886.h: 3820: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f886.h: 3822: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f886.h: 3824: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f886.h: 3826: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f886.h: 3828: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f886.h: 3830: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f886.h: 3832: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f886.h: 3834: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f886.h: 3836: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f886.h: 3838: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f886.h: 3840: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f886.h: 3842: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f886.h: 3844: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f886.h: 3846: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f886.h: 3848: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f886.h: 3850: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f886.h: 3852: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f886.h: 3854: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f886.h: 3856: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f886.h: 3858: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f886.h: 3860: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f886.h: 3862: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f886.h: 3864: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f886.h: 3866: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f886.h: 3868: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f886.h: 3870: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f886.h: 3872: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f886.h: 3874: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 3876: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f886.h: 3878: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 3880: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f886.h: 3882: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f886.h: 3884: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f886.h: 3886: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f886.h: 3888: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f886.h: 3890: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f886.h: 3892: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f886.h: 3894: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f886.h: 3896: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f886.h: 3898: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f886.h: 3900: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f886.h: 3902: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f886.h: 3904: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f886.h: 3906: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f886.h: 3908: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f886.h: 3910: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f886.h: 3912: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f886.h: 3914: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f886.h: 3916: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f886.h: 3918: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f886.h: 3920: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f886.h: 3922: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f886.h: 3924: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f886.h: 3926: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f886.h: 3928: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f886.h: 3930: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f886.h: 3932: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f886.h: 3934: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f886.h: 3936: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f886.h: 3938: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f886.h: 3940: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f886.h: 3942: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f886.h: 3944: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f886.h: 3946: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f886.h: 3948: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f886.h: 3950: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f886.h: 3952: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f886.h: 3954: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f886.h: 3956: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f886.h: 3958: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f886.h: 3960: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f886.h: 3962: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f886.h: 3964: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f886.h: 3966: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f886.h: 3968: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f886.h: 3970: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f886.h: 3972: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f886.h: 3974: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 3976: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 3978: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f886.h: 3980: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f886.h: 3982: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f886.h: 3984: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f886.h: 3986: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f886.h: 3988: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f886.h: 3990: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f886.h: 3992: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f886.h: 3994: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f886.h: 3996: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f886.h: 3998: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f886.h: 4000: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f886.h: 4002: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f886.h: 4004: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f886.h: 4006: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f886.h: 4008: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f886.h: 4010: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f886.h: 4012: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f886.h: 4014: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f886.h: 4016: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f886.h: 4018: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f886.h: 4020: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f886.h: 4022: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f886.h: 4024: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f886.h: 4026: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f886.h: 4028: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f886.h: 4030: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f886.h: 4032: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f886.h: 4034: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f886.h: 4036: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f886.h: 4038: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f886.h: 4040: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f886.h: 4042: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f886.h: 4044: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f886.h: 4046: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f886.h: 4048: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f886.h: 4050: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f886.h: 4052: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 4054: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 4056: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f886.h: 4058: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f886.h: 4060: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 4062: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f886.h: 4064: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f886.h: 4066: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f886.h: 4068: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 4070: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 4072: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f886.h: 4074: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 4076: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 4078: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
"6 config.h
[p x FOSC=INTRC_NOCLKOUT ]
"7
[p x WDTE=OFF ]
"8
[p x PWRTE=OFF ]
"9
[p x MCLRE=ON ]
"10
[p x CP=OFF ]
"11
[p x CPD=OFF ]
"12
[p x BOREN=OFF ]
"13
[p x IESO=ON ]
"14
[p x FCMEN=ON ]
"15
[p x LVP=OFF ]
"18
[p x BOR4V=BOR40V ]
"19
[p x WRT=OFF ]
[; ;main.c: 16: struct Link {
[; ;main.c: 17: char MAC_d[6];
[; ;main.c: 18: char MAC_s[6];
[; ;main.c: 19: char eth_type[2];
[; ;main.c: 20: };
[; ;main.c: 21: struct IP {
[; ;main.c: 22: char ver_ihl;
[; ;main.c: 23: char dscp_ecn;
[; ;main.c: 24: char total_length[2];
[; ;main.c: 25: char id[2];
[; ;main.c: 26: char flags_n_offset[2];
[; ;main.c: 27: char ttl;
[; ;main.c: 28: char protocol;
[; ;main.c: 29: char chksum[2];
[; ;main.c: 30: char IP_s[4];
[; ;main.c: 31: char IP_d[4];
[; ;main.c: 32: };
[; ;main.c: 33: struct TCP {
[; ;main.c: 34: char PORT_s[2];
[; ;main.c: 35: char PORT_d[2];
[; ;main.c: 36: char seq_num[4];
[; ;main.c: 37: char ack_num[4];
[; ;main.c: 38: char offset_n_flags[2];
[; ;main.c: 39: char window[2];
[; ;main.c: 40: char chksum[2];
[; ;main.c: 41: char urg_pointer[2];
[; ;main.c: 42: char status;
[; ;main.c: 43: };
[; ;main.c: 44: struct UDP {
[; ;main.c: 45: char PORT_s[2];
[; ;main.c: 46: char PORT_d[2];
[; ;main.c: 47: char length[2];
[; ;main.c: 48: char flag;
[; ;main.c: 49: };
[; ;main.c: 50: struct PING {
[; ;main.c: 51: unsigned int checksum;
[; ;main.c: 52: char id[2];
[; ;main.c: 53: char seq_num[2];
[; ;main.c: 54: char payload;
[; ;main.c: 55: };
"57 main.c
[v _next `b ~T0 @X0 1 s ]
[v _rxen `b ~T0 @X0 1 s ]
[v _arp `b ~T0 @X0 1 s ]
[v _ping `b ~T0 @X0 1 s ]
[v _init `b ~T0 @X0 1 s ]
[; ;main.c: 57: static bit next, rxen, arp, ping, init;
"58
[v _out `uc ~T0 @X0 1 e ]
[i _out
-> -> 0 `i `uc
]
[v _arp_type `uc ~T0 @X0 1 e ]
[v _k `uc ~T0 @X0 1 e ]
[i _k
-> -> 0 `i `uc
]
[v _opcode `uc ~T0 @X0 -> 25 `i e ]
[; ;main.c: 58: char out = 0, arp_type, k=0, opcode[25];
"59
[v _repeat `ui ~T0 @X0 1 e ]
[i _repeat
-> -> 0 `i `ui
]
[v _timeout `ui ~T0 @X0 1 e ]
[i _timeout
-> -> 0 `i `ui
]
[; ;main.c: 59: unsigned int repeat = 0, timeout = 0;
"60
[v _ack `ul ~T0 @X0 1 e ]
[; ;main.c: 60: unsigned long ack;
"61
[v _payload `uc ~T0 @X0 -> 50 `i e ]
[; ;main.c: 61: char payload[50];
"62
[v _ping_echo `S143 ~T0 @X0 1 e ]
[; ;main.c: 62: struct PING ping_echo;
"63
[v _link_tx `S139 ~T0 @X0 1 e ]
[v _link_rx `S139 ~T0 @X0 1 e ]
[; ;main.c: 63: struct Link link_tx,link_rx;
"64
[v _ip_tx `S140 ~T0 @X0 1 e ]
[v _ip_rx `S140 ~T0 @X0 1 e ]
[; ;main.c: 64: struct IP ip_tx,ip_rx;
"65
[v _udp_tx `S142 ~T0 @X0 1 e ]
[; ;main.c: 65: struct UDP udp_tx;
"66
[v _tcp_tx `S141 ~T0 @X0 1 e ]
[v _tcp_rx `S141 ~T0 @X0 1 e ]
[; ;main.c: 66: struct TCP tcp_tx,tcp_rx;
"67
[v _ppcontrol `uc ~T0 @X0 1 e ]
[i _ppcontrol
-> -> 0 `i `uc
]
[; ;main.c: 67: char ppcontrol = 0;
"69
[v _init_stack `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 69: void init_stack () {
[e :U _init_stack ]
[f ]
[; ;main.c: 73: link_tx.MAC_s[0] = 0x00; link_tx.MAC_s[1] = 0x1E; link_tx.MAC_s[2] = 0xE3;
"73
[e = *U + &U . _link_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _link_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 30 `i `uc ]
[e = *U + &U . _link_tx 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 227 `i `uc ]
[; ;main.c: 74: link_tx.MAC_s[3] = 0x80; link_tx.MAC_s[4] = 0x0A; link_tx.MAC_s[5] = 0xA4;
"74
[e = *U + &U . _link_tx 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 128 `i `uc ]
[e = *U + &U . _link_tx 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 10 `i `uc ]
[e = *U + &U . _link_tx 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 164 `i `uc ]
[; ;main.c: 77: ip_tx.ver_ihl = 0x45;
"77
[e = . _ip_tx 0 -> -> 69 `i `uc ]
[; ;main.c: 78: ip_tx.dscp_ecn = 0x00;
"78
[e = . _ip_tx 1 -> -> 0 `i `uc ]
[; ;main.c: 79: ip_tx.total_length[0] = 0 ; ip_tx.total_length[1] = 0;
"79
[e = *U + &U . _ip_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 80: ip_tx.id[0] = 0; ip_tx.id[1] = 0;
"80
[e = *U + &U . _ip_tx 3 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _ip_tx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 81: ip_tx.flags_n_offset[0] = 0x40; ip_tx.flags_n_offset[1] = 0x00;
"81
[e = *U + &U . _ip_tx 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 4 `ui `ux -> -> 64 `i `uc ]
[e = *U + &U . _ip_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 4 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 82: ip_tx.ttl = 0x80;
"82
[e = . _ip_tx 5 -> -> 128 `i `uc ]
[; ;main.c: 83: ip_tx.protocol = 0x06;
"83
[e = . _ip_tx 6 -> -> 6 `i `uc ]
[; ;main.c: 84: ip_tx.IP_s[0] = 10; ip_tx.IP_s[1] = 1; ip_tx.IP_s[2] = 109; ip_tx.IP_s[3] = 28;
"84
[e = *U + &U . _ip_tx 8 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux -> -> 10 `i `uc ]
[e = *U + &U . _ip_tx 8 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux -> -> 1 `i `uc ]
[e = *U + &U . _ip_tx 8 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux -> -> 109 `i `uc ]
[e = *U + &U . _ip_tx 8 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux -> -> 28 `i `uc ]
[; ;main.c: 87: udp_tx.PORT_d[0] = 24; udp_tx.PORT_d[1] = 24;
"87
[e = *U + &U . _udp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux -> -> 24 `i `uc ]
[e = *U + &U . _udp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux -> -> 24 `i `uc ]
[; ;main.c: 88: udp_tx.PORT_s[0] = 24; udp_tx.PORT_s[1] = 24;
"88
[e = *U + &U . _udp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux -> -> 24 `i `uc ]
[e = *U + &U . _udp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux -> -> 24 `i `uc ]
[; ;main.c: 89: udp_tx.flag = 0;
"89
[e = . _udp_tx 3 -> -> 0 `i `uc ]
[; ;main.c: 92: ping_echo.checksum = 0x0000;
"92
[e = . _ping_echo 0 -> -> 0 `i `ui ]
[; ;main.c: 93: tcp_tx.PORT_s[0] = 0x09;
"93
[e = *U + &U . _tcp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux -> -> 9 `i `uc ]
[; ;main.c: 94: tcp_tx.PORT_s[1] = 0x78;
"94
[e = *U + &U . _tcp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux -> -> 120 `i `uc ]
[; ;main.c: 95: tcp_tx.seq_num[0] = 0; tcp_tx.seq_num[1] = 0; tcp_tx.seq_num[2] = 0; tcp_tx.seq_num[3] = 0;
"95
[e = *U + &U . _tcp_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _tcp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _tcp_tx 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _tcp_tx 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 97: tcp_tx.offset_n_flags[0] = 0x50;
"97
[e = *U + &U . _tcp_tx 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 80 `i `uc ]
[; ;main.c: 98: tcp_tx.window[0] = 0x00; tcp_tx.window[1] = 25;
"98
[e = *U + &U . _tcp_tx 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 5 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _tcp_tx 5 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 5 `ui `ux -> -> 25 `i `uc ]
[; ;main.c: 99: tcp_tx.urg_pointer[0] = 0x00; tcp_tx.urg_pointer[1] = 0x00;
"99
[e = *U + &U . _tcp_tx 7 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 7 `ui `ux -> -> 0 `i `uc ]
[e = *U + &U . _tcp_tx 7 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 7 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 100: tcp_tx.status = 0;
"100
[e = . _tcp_tx 8 -> -> 0 `i `uc ]
[; ;main.c: 101: }
"101
[e :UE 144 ]
}
"103
[v _uart_init `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 103: void uart_init () {
[e :U _uart_init ]
[f ]
[; ;main.c: 104: PIE1bits.RCIE = 1;
"104
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 105: PIE1bits.TXIE = 0;
"105
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 106: TXSTAbits.BRGH = 1;
"106
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 107: BAUDCTLbits.BRG16 = 0;
"107
[e = . . _BAUDCTLbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 110: SPBRGH = 0x00;
"110
[e = _SPBRGH -> -> 0 `i `uc ]
[; ;main.c: 112: SPBRG = 0x33;
"112
[e = _SPBRG -> -> 51 `i `uc ]
[; ;main.c: 114: TXSTAbits.SYNC = 0;
"114
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 115: RCSTAbits.SPEN = 1;
"115
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 116: TXSTAbits.TXEN = 1;
"116
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 117: RCSTAbits.CREN = 1;
"117
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 118: }
"118
[e :UE 145 ]
}
"120
[v _putch `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 120: void putch (char data) {
[e :U _putch ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 121: while(!PIR1bits.TXIF)
"121
[e $U 147  ]
[e :U 148 ]
[; ;main.c: 122: continue;
"122
[e $U 147  ]
[e :U 147 ]
"121
[e $ ! != -> . . _PIR1bits 0 4 `i -> -> -> 0 `i `Vuc `i 148  ]
[e :U 149 ]
[; ;main.c: 123: TXREG = data;
"123
[e = _TXREG _data ]
[; ;main.c: 124: }
"124
[e :UE 146 ]
}
"126
[v _init_timer2 `(v ~T0 @X0 1 ef3`uc`uc`uc ]
{
[; ;main.c: 126: void init_timer2 (unsigned char pre, unsigned char post, unsigned char eoc) {
[e :U _init_timer2 ]
[v _pre `uc ~T0 @X0 1 r1 ]
[v _post `uc ~T0 @X0 1 r2 ]
[v _eoc `uc ~T0 @X0 1 r3 ]
[f ]
"127
[v _sfr `uc ~T0 @X0 1 a ]
[; ;main.c: 127: unsigned char sfr = 0x00;
[e = _sfr -> -> 0 `i `uc ]
[; ;main.c: 128: PIR1bits.TMR2IF = 0;
"128
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 129: PR2 = eoc;
"129
[e = _PR2 _eoc ]
[; ;main.c: 130: sfr = ((post-1) << 3) & 0x78;
"130
[e = _sfr -> & << - -> _post `i -> 1 `i -> 3 `i -> 120 `i `uc ]
[; ;main.c: 131: sfr += 4;
"131
[e =+ _sfr -> -> 4 `i `uc ]
[; ;main.c: 132: sfr += pre;
"132
[e =+ _sfr _pre ]
[; ;main.c: 133: T2CON = sfr;
"133
[e = _T2CON _sfr ]
[; ;main.c: 134: PIE1bits.TMR2IE = 1;
"134
[e = . . _PIE1bits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 135: }
"135
[e :UE 150 ]
}
"137
[v _rw_eeprom `(uc ~T0 @X0 1 ef3`uc`uc`uc ]
{
[; ;main.c: 137: unsigned char rw_eeprom(unsigned char addr, unsigned char data, unsigned char rw){
[e :U _rw_eeprom ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[v _rw `uc ~T0 @X0 1 r3 ]
[f ]
[; ;main.c: 139: if (rw) {
"139
[e $ ! != -> _rw `i -> -> -> 0 `i `uc `i 152  ]
{
[; ;main.c: 140: EEADR = addr;
"140
[e = _EEADR _addr ]
[; ;main.c: 141: EEDAT = data;
"141
[e = _EEDAT _data ]
[; ;main.c: 142: EECON1bits.EEPGD = 0;
"142
[e = . . _EECON1bits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 143: EECON1bits.WREN = 1;
"143
[e = . . _EECON1bits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 144: EECON2 = 0x55;
"144
[e = _EECON2 -> -> 85 `i `uc ]
[; ;main.c: 145: EECON2 = 0xAA;
"145
[e = _EECON2 -> -> 170 `i `uc ]
[; ;main.c: 146: EECON1bits.WR = 1;
"146
[e = . . _EECON1bits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 147: while (!PIR2bits.EEIF);
"147
[e $U 153  ]
[e :U 154 ]
[e :U 153 ]
[e $ ! != -> . . _PIR2bits 0 4 `i -> -> -> 0 `i `Vuc `i 154  ]
[e :U 155 ]
[; ;main.c: 148: PIR2bits.EEIF = 0;
"148
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 149: return 0;
"149
[e ) -> -> 0 `i `uc ]
[e $UE 151  ]
"150
}
[; ;main.c: 150: }
[e $U 156  ]
"151
[e :U 152 ]
[; ;main.c: 151: else {
{
[; ;main.c: 152: EEADR = addr;
"152
[e = _EEADR _addr ]
[; ;main.c: 153: EECON1bits.EEPGD = 0;
"153
[e = . . _EECON1bits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 154: EECON1bits.RD = 1;
"154
[e = . . _EECON1bits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 155: return EEDAT;
"155
[e ) _EEDAT ]
[e $UE 151  ]
"156
}
[e :U 156 ]
[; ;main.c: 156: }
[; ;main.c: 157: }
"157
[e :UE 151 ]
}
"159
[v _init_spi `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 159: void init_spi() {
[e :U _init_spi ]
[f ]
[; ;main.c: 160: SSPSTATbits.SMP = 0;
"160
[e = . . _SSPSTATbits 0 7 -> -> 0 `i `uc ]
[; ;main.c: 162: SSPSTATbits.CKE = 1;
"162
[e = . . _SSPSTATbits 0 6 -> -> 1 `i `uc ]
[; ;main.c: 163: SSPCONbits.CKP = 0;
"163
[e = . . _SSPCONbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 164: TRISBbits.TRISB2 = 0;
"164
[e = . . _TRISBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 165: TRISCbits.TRISC3 = 0;
"165
[e = . . _TRISCbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 166: TRISCbits.TRISC4 = 1;
"166
[e = . . _TRISCbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 167: TRISCbits.TRISC5 = 0;
"167
[e = . . _TRISCbits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 168: PORTBbits.RB2 = 1;
"168
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 171: PIE1bits.SSPIE = 0;
"171
[e = . . _PIE1bits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 172: SSPCONbits.SSPEN = 1;
"172
[e = . . _SSPCONbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 173: }
"173
[e :UE 157 ]
}
"175
[v _spi `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[; ;main.c: 175: char spi (unsigned char data, char rw) {
[e :U _spi ]
[v _data `uc ~T0 @X0 1 r1 ]
[v _rw `uc ~T0 @X0 1 r2 ]
[f ]
"176
[v _dummy `uc ~T0 @X0 1 a ]
[v _drop `uc ~T0 @X0 1 a ]
[; ;main.c: 176: char dummy, drop;
[; ;main.c: 178: switch (rw) {
"178
[e $U 160  ]
{
[; ;main.c: 179: case 0:
"179
[e :U 161 ]
[; ;main.c: 180: if (SSPCONbits.WCOL) {
"180
[e $ ! != -> . . _SSPCONbits 0 4 `i -> -> -> 0 `i `Vuc `i 162  ]
{
[; ;main.c: 181: SSPCONbits.WCOL = 0;
"181
[e = . . _SSPCONbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 182: SSPCONbits.SSPEN = 0;
"182
[e = . . _SSPCONbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 183: _delay((unsigned long)((1)*(8000000/4000.0)));
"183
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 184: SSPCONbits.SSPEN = 1;
"184
[e = . . _SSPCONbits 0 2 -> -> 1 `i `uc ]
"185
}
[e :U 162 ]
[; ;main.c: 185: }
[; ;main.c: 186: SSPBUF = data;
"186
[e = _SSPBUF _data ]
[; ;main.c: 187: while (!SSPSTATbits.BF);
"187
[e $U 163  ]
[e :U 164 ]
[e :U 163 ]
[e $ ! != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 164  ]
[e :U 165 ]
[; ;main.c: 188: dummy = SSPBUF;
"188
[e = _dummy _SSPBUF ]
[; ;main.c: 189: break;
"189
[e $U 159  ]
[; ;main.c: 190: case 1:
"190
[e :U 166 ]
[; ;main.c: 191: if (SSPCONbits.WCOL) {
"191
[e $ ! != -> . . _SSPCONbits 0 4 `i -> -> -> 0 `i `Vuc `i 167  ]
{
[; ;main.c: 192: SSPCONbits.WCOL = 0;
"192
[e = . . _SSPCONbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 193: SSPCONbits.SSPEN = 0;
"193
[e = . . _SSPCONbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 194: _delay((unsigned long)((1)*(8000000/4000.0)));
"194
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 195: SSPCONbits.SSPEN = 1;
"195
[e = . . _SSPCONbits 0 2 -> -> 1 `i `uc ]
"196
}
[e :U 167 ]
[; ;main.c: 196: }
[; ;main.c: 197: SSPBUF = data;
"197
[e = _SSPBUF _data ]
[; ;main.c: 198: while (!SSPSTATbits.BF);
"198
[e $U 168  ]
[e :U 169 ]
[e :U 168 ]
[e $ ! != -> . . _SSPSTATbits 0 0 `i -> -> -> 0 `i `Vuc `i 169  ]
[e :U 170 ]
[; ;main.c: 199: drop = SSPBUF;
"199
[e = _drop _SSPBUF ]
[; ;main.c: 200: break;
"200
[e $U 159  ]
"201
}
[; ;main.c: 201: }
[e $U 159  ]
"178
[e :U 160 ]
[e [\ _rw , $ -> -> 0 `i `uc 161
 , $ -> -> 1 `i `uc 166
 159 ]
"201
[e :U 159 ]
[; ;main.c: 202: return dummy;
"202
[e ) _dummy ]
[e $UE 158  ]
[; ;main.c: 203: }
"203
[e :UE 158 ]
}
"205
[v _join `(ui ~T0 @X0 1 ef2`*uc`*uc ]
{
[; ;main.c: 205: unsigned int join (char *upper, char *lower) {
[e :U _join ]
[v _upper `*uc ~T0 @X0 1 r1 ]
[v _lower `*uc ~T0 @X0 1 r2 ]
[f ]
"206
[v _aux `ui ~T0 @X0 1 a ]
[; ;main.c: 206: unsigned int aux;
[; ;main.c: 208: aux = *upper;
"208
[e = _aux -> *U _upper `ui ]
[; ;main.c: 209: aux = aux << 8;
"209
[e = _aux << _aux -> 8 `i ]
[; ;main.c: 210: aux += *lower;
"210
[e =+ _aux -> *U _lower `ui ]
[; ;main.c: 212: return aux;
"212
[e ) _aux ]
[e $UE 171  ]
[; ;main.c: 213: }
"213
[e :UE 171 ]
}
"215
[v _config_eth `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 215: void config_eth() {
[e :U _config_eth ]
[f ]
"216
[v _ready `uc ~T0 @X0 1 a ]
[; ;main.c: 216: char ready = 0;
[e = _ready -> -> 0 `i `uc ]
[; ;main.c: 218: _delay((unsigned long)((100)*(8000000/4000.0)));
"218
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 219: PORTBbits.RB0 = 1;
"219
[e = . . _PORTBbits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 220: _delay((unsigned long)((100)*(8000000/4000.0)));
"220
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 221: do {
"221
[e :U 175 ]
{
[; ;main.c: 222: PORTBbits.RB2 = 0;
"222
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 223: spi(0x1D | 0x00,1);
"223
[e ( _spi (2 , -> | -> 29 `i -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 224: ready = spi(0,0) & 0x01;
"224
[e = _ready -> & -> ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc `i -> 1 `i `uc ]
[; ;main.c: 225: PORTBbits.RB2 = 1;
"225
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 226: _delay((unsigned long)((100)*(8000000/4000000.0)));
"226
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"227
}
[; ;main.c: 227: } while (ready == 0);
[e $ == -> _ready `i -> 0 `i 175  ]
[e :U 174 ]
[; ;main.c: 229: PORTBbits.RB2 = 0;
"229
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 230: spi(0x1F | 0x40,1);
"230
[e ( _spi (2 , -> | -> 31 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 231: spi(0b00000000,1);
"231
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 232: PORTBbits.RB2 = 1;
"232
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 233: _delay((unsigned long)((10)*(8000000/4000000.0)));
"233
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 234: PORTBbits.RB2 = 0;
"234
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 235: spi(0x1E | 0x40,1);
"235
[e ( _spi (2 , -> | -> 30 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 236: spi(0b10000000,1);
"236
[e ( _spi (2 , -> -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 237: PORTBbits.RB2 = 1;
"237
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 238: _delay((unsigned long)((10)*(8000000/4000000.0)));
"238
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 239: PORTBbits.RB2 = 0;
"239
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 240: spi(0x1B | 0x40,1);
"240
[e ( _spi (2 , -> | -> 27 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 241: spi(0b11001011,1);
"241
[e ( _spi (2 , -> -> 203 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 242: PORTBbits.RB2 = 1;
"242
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 243: _delay((unsigned long)((10)*(8000000/4000000.0)));
"243
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 244: PORTBbits.RB2 = 0;
"244
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 245: spi(0x08 | 0x40,1);
"245
[e ( _spi (2 , -> | -> 8 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 246: spi(0x00,1);
"246
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 247: PORTBbits.RB2 = 1;
"247
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 248: _delay((unsigned long)((10)*(8000000/4000000.0)));
"248
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 249: PORTBbits.RB2 = 0;
"249
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 250: spi(0x09 | 0x40,1);
"250
[e ( _spi (2 , -> | -> 9 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 251: spi(0x00,1);
"251
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 252: PORTBbits.RB2 = 1;
"252
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 253: _delay((unsigned long)((10)*(8000000/4000000.0)));
"253
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 254: PORTBbits.RB2 = 0;
"254
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 255: spi(0x0A | 0x40,1);
"255
[e ( _spi (2 , -> | -> 10 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 256: spi(0xFF,1);
"256
[e ( _spi (2 , -> -> 255 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 257: PORTBbits.RB2 = 1;
"257
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 258: _delay((unsigned long)((10)*(8000000/4000000.0)));
"258
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 259: PORTBbits.RB2 = 0;
"259
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 260: spi(0x0B | 0x40,1);
"260
[e ( _spi (2 , -> | -> 11 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 261: spi(0x1E,1);
"261
[e ( _spi (2 , -> -> 30 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 262: PORTBbits.RB2 = 1;
"262
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 263: _delay((unsigned long)((10)*(8000000/4000000.0)));
"263
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 264: PORTBbits.RB2 = 0;
"264
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 265: spi(0x00 | 0x40,1);
"265
[e ( _spi (2 , -> | -> 0 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 266: spi(0x00,1);
"266
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 267: PORTBbits.RB2 = 1;
"267
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 268: _delay((unsigned long)((10)*(8000000/4000000.0)));
"268
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 269: PORTBbits.RB2 = 0;
"269
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 270: spi(0x01 | 0x40,1);
"270
[e ( _spi (2 , -> | -> 1 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 271: spi(0x00,1);
"271
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 272: PORTBbits.RB2 = 1;
"272
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 273: _delay((unsigned long)((10)*(8000000/4000000.0)));
"273
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 274: PORTBbits.RB2 = 0;
"274
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 275: spi(0x04 | 0x40,1);
"275
[e ( _spi (2 , -> | -> 4 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 276: spi(0x00,1);
"276
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 277: PORTBbits.RB2 = 1;
"277
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 278: _delay((unsigned long)((10)*(8000000/4000000.0)));
"278
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 279: PORTBbits.RB2 = 0;
"279
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 280: spi(0x05 | 0x40,1);
"280
[e ( _spi (2 , -> | -> 5 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 281: spi(0x1F,1);
"281
[e ( _spi (2 , -> -> 31 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 282: PORTBbits.RB2 = 1;
"282
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 284: _delay((unsigned long)((10)*(8000000/4000000.0)));
"284
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 285: PORTBbits.RB2 = 0;
"285
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 286: spi(0x1F | 0x80,1);
"286
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 287: spi(0x01,1);
"287
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 288: PORTBbits.RB2 = 1;
"288
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 290: _delay((unsigned long)((10)*(8000000/4000000.0)));
"290
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 291: PORTBbits.RB2 = 0;
"291
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 292: spi(0x18 | 0x40,1);
"292
[e ( _spi (2 , -> | -> 24 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 293: spi(0b10100000,1);
"293
[e ( _spi (2 , -> -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 294: PORTBbits.RB2 = 1;
"294
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 296: _delay((unsigned long)((10)*(8000000/4000000.0)));
"296
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 297: PORTBbits.RB2 = 0;
"297
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 298: spi(0x1F | 0x80,1);
"298
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 299: spi(0x02,1);
"299
[e ( _spi (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 300: PORTBbits.RB2 = 1;
"300
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 302: _delay((unsigned long)((10)*(8000000/4000000.0)));
"302
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 303: PORTBbits.RB2 = 0;
"303
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 304: spi(0x01 | 0x40,1);
"304
[e ( _spi (2 , -> | -> 1 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 305: spi(link_tx.MAC_s[5],1);
"305
[e ( _spi (2 , *U + &U . _link_tx 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 306: PORTBbits.RB2 = 1;
"306
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 307: _delay((unsigned long)((10)*(8000000/4000000.0)));
"307
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 308: PORTBbits.RB2 = 0;
"308
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 309: spi(0x00 | 0x40,1);
"309
[e ( _spi (2 , -> | -> 0 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 310: spi(link_tx.MAC_s[4],1);
"310
[e ( _spi (2 , *U + &U . _link_tx 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 311: PORTBbits.RB2 = 1;
"311
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 312: _delay((unsigned long)((10)*(8000000/4000000.0)));
"312
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 313: PORTBbits.RB2 = 0;
"313
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 314: spi(0x03 | 0x40,1);
"314
[e ( _spi (2 , -> | -> 3 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 315: spi(link_tx.MAC_s[3],1);
"315
[e ( _spi (2 , *U + &U . _link_tx 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 316: PORTBbits.RB2 = 1;
"316
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 317: _delay((unsigned long)((10)*(8000000/4000000.0)));
"317
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 318: PORTBbits.RB2 = 0;
"318
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 319: spi(0x02 | 0x40,1);
"319
[e ( _spi (2 , -> | -> 2 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 320: spi(link_tx.MAC_s[2],1);
"320
[e ( _spi (2 , *U + &U . _link_tx 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 321: PORTBbits.RB2 = 1;
"321
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 322: _delay((unsigned long)((10)*(8000000/4000000.0)));
"322
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 323: PORTBbits.RB2 = 0;
"323
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 324: spi(0x05 | 0x40,1);
"324
[e ( _spi (2 , -> | -> 5 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 325: spi(link_tx.MAC_s[1],1);
"325
[e ( _spi (2 , *U + &U . _link_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 326: PORTBbits.RB2 = 1;
"326
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 327: _delay((unsigned long)((10)*(8000000/4000000.0)));
"327
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 328: PORTBbits.RB2 = 0;
"328
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 329: spi(0x04 | 0x40,1);
"329
[e ( _spi (2 , -> | -> 4 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 330: spi(link_tx.MAC_s[0],1);
"330
[e ( _spi (2 , *U + &U . _link_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 331: PORTBbits.RB2 = 1;
"331
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 333: _delay((unsigned long)((10)*(8000000/4000000.0)));
"333
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 334: PORTBbits.RB2 = 0;
"334
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 335: spi(0x1F | 0xA0,1);
"335
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 336: spi(0x01,1);
"336
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 337: PORTBbits.RB2 = 1;
"337
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 339: _delay((unsigned long)((10)*(8000000/4000000.0)));
"339
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 340: PORTBbits.RB2 = 0;
"340
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 341: spi(0x00 | 0x80,1);
"341
[e ( _spi (2 , -> | -> 0 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 342: spi(0b00001101,1);
"342
[e ( _spi (2 , -> -> 13 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 343: PORTBbits.RB2 = 1;
"343
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 344: _delay((unsigned long)((10)*(8000000/4000000.0)));
"344
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 345: PORTBbits.RB2 = 0;
"345
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 346: spi(0x02 | 0x40,1);
"346
[e ( _spi (2 , -> | -> 2 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 347: spi(0b10110001,1);
"347
[e ( _spi (2 , -> -> 177 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 348: PORTBbits.RB2 = 1;
"348
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 349: _delay((unsigned long)((10)*(8000000/4000000.0)));
"349
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 350: PORTBbits.RB2 = 0;
"350
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 351: spi(0x03 | 0x40,1);
"351
[e ( _spi (2 , -> | -> 3 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 352: spi(0b01000000,1);
"352
[e ( _spi (2 , -> -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 353: PORTBbits.RB2 = 1;
"353
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 354: _delay((unsigned long)((10)*(8000000/4000000.0)));
"354
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 355: PORTBbits.RB2 = 0;
"355
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 356: spi(0x0A | 0x40,1);
"356
[e ( _spi (2 , -> | -> 10 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 357: spi(0xDC,1);
"357
[e ( _spi (2 , -> -> 220 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 358: PORTBbits.RB2 = 1;
"358
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 359: _delay((unsigned long)((10)*(8000000/4000000.0)));
"359
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 360: PORTBbits.RB2 = 0;
"360
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 361: spi(0x0B | 0x40,1);
"361
[e ( _spi (2 , -> | -> 11 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 362: spi(0x05,1);
"362
[e ( _spi (2 , -> -> 5 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 363: PORTBbits.RB2 = 1;
"363
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 364: _delay((unsigned long)((10)*(8000000/4000000.0)));
"364
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 365: PORTBbits.RB2 = 0;
"365
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 366: spi(0x06 | 0x40,1);
"366
[e ( _spi (2 , -> | -> 6 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 367: spi(0x12,1);
"367
[e ( _spi (2 , -> -> 18 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 368: PORTBbits.RB2 = 1;
"368
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 369: _delay((unsigned long)((10)*(8000000/4000000.0)));
"369
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 370: PORTBbits.RB2 = 0;
"370
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 371: spi(0x07 | 0x40,1);
"371
[e ( _spi (2 , -> | -> 7 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 372: spi(0x0C,1);
"372
[e ( _spi (2 , -> -> 12 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 373: PORTBbits.RB2 = 1;
"373
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 374: _delay((unsigned long)((10)*(8000000/4000000.0)));
"374
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 375: PORTBbits.RB2 = 0;
"375
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 376: spi(0x14 | 0x40,1);
"376
[e ( _spi (2 , -> | -> 20 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 377: spi(0x00,1);
"377
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 378: PORTBbits.RB2 = 1;
"378
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 379: _delay((unsigned long)((10)*(8000000/4000000.0)));
"379
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 380: PORTBbits.RB2 = 0;
"380
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 381: spi(0x16 | 0x40,1);
"381
[e ( _spi (2 , -> | -> 22 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 382: spi(0x00,1);
"382
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 383: PORTBbits.RB2 = 1;
"383
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 384: _delay((unsigned long)((10)*(8000000/4000000.0)));
"384
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 385: PORTBbits.RB2 = 0;
"385
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 386: spi(0x17 | 0x40,1);
"386
[e ( _spi (2 , -> | -> 23 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 387: spi(0x01,1);
"387
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 388: PORTBbits.RB2 = 1;
"388
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 390: _delay((unsigned long)((10)*(8000000/4000000.0)));
"390
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 391: PORTBbits.RB2 = 0;
"391
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 392: spi(0x1F | 0xA0,1);
"392
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 393: spi(0x02,1);
"393
[e ( _spi (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 394: PORTBbits.RB2 = 1;
"394
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 395: _delay((unsigned long)((10)*(8000000/4000000.0)));
"395
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 396: PORTBbits.RB2 = 0;
"396
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 397: spi(0x1F | 0x80,1);
"397
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 398: spi(0x01,1);
"398
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 399: PORTBbits.RB2 = 1;
"399
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 403: _delay((unsigned long)((10)*(8000000/4000000.0)));
"403
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 404: PORTBbits.RB2 = 0;
"404
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 405: spi(0x1F | 0x80,1);
"405
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 406: spi(0b00000100,1);
"406
[e ( _spi (2 , -> -> 4 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 407: PORTBbits.RB2 = 1;
"407
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 408: _delay((unsigned long)((100)*(8000000/4000000.0)));
"408
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 409: }
"409
[e :UE 172 ]
}
"411
[v _IP_chksum `(ui ~T0 @X0 1 ef ]
{
[; ;main.c: 411: unsigned int IP_chksum () {
[e :U _IP_chksum ]
[f ]
"412
[v _sum `ul ~T0 @X0 1 a ]
[; ;main.c: 412: unsigned long sum = 0;
[e = _sum -> -> -> 0 `i `l `ul ]
"413
[v _aux3 `ui ~T0 @X0 1 a ]
[; ;main.c: 413: unsigned int aux3;
[; ;main.c: 414: sum += join(&ip_tx.ver_ihl,&ip_tx.dscp_ecn);
"414
[e =+ _sum -> ( _join (2 , &U . _ip_tx 0 &U . _ip_tx 1 `ul ]
[; ;main.c: 415: sum += join(&ip_tx.total_length[0],&ip_tx.total_length[1]);
"415
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux &U *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux `ul ]
[; ;main.c: 416: sum += join(&ip_tx.id[0],&ip_tx.id[1]);
"416
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 3 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux &U *U + &U . _ip_tx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux `ul ]
[; ;main.c: 417: sum += join(&ip_tx.ttl,&ip_tx.protocol);
"417
[e =+ _sum -> ( _join (2 , &U . _ip_tx 5 &U . _ip_tx 6 `ul ]
[; ;main.c: 418: sum += join(&ip_tx.IP_s[0],&ip_tx.IP_s[1]);
"418
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 8 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux &U *U + &U . _ip_tx 8 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux `ul ]
[; ;main.c: 419: sum += join(&ip_tx.IP_s[2],&ip_tx.IP_s[3]);
"419
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 8 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux &U *U + &U . _ip_tx 8 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux `ul ]
[; ;main.c: 420: sum += join(&ip_tx.IP_d[0],&ip_tx.IP_d[1]);
"420
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 9 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux &U *U + &U . _ip_tx 9 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux `ul ]
[; ;main.c: 421: sum += join(&ip_tx.IP_d[2],&ip_tx.IP_d[3]);
"421
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 9 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux &U *U + &U . _ip_tx 9 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux `ul ]
[; ;main.c: 422: while (sum > 0x0000FFFF) {
"422
[e $U 177  ]
[e :U 178 ]
{
[; ;main.c: 423: aux3 = sum >> 16;
"423
[e = _aux3 -> >> _sum -> 16 `i `ui ]
[; ;main.c: 424: sum = (sum & 0x0000FFFF) + aux3;
"424
[e = _sum + & _sum -> -> 65535 `ui `ul -> _aux3 `ul ]
"425
}
[e :U 177 ]
"422
[e $ > _sum -> -> 65535 `ui `ul 178  ]
[e :U 179 ]
[; ;main.c: 425: }
[; ;main.c: 426: aux3 = sum;
"426
[e = _aux3 -> _sum `ui ]
[; ;main.c: 427: aux3 = ~aux3;
"427
[e = _aux3 ~ _aux3 ]
[; ;main.c: 429: return aux3;
"429
[e ) _aux3 ]
[e $UE 176  ]
[; ;main.c: 430: }
"430
[e :UE 176 ]
}
"432
[v _TCP_chksum `(ui ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 432: unsigned int TCP_chksum (char cant) {
[e :U _TCP_chksum ]
[v _cant `uc ~T0 @X0 1 r1 ]
[f ]
"433
[v _sum `ul ~T0 @X0 1 a ]
[; ;main.c: 433: unsigned long sum = 0;
[e = _sum -> -> -> 0 `i `l `ul ]
"434
[v _aux `ui ~T0 @X0 1 a ]
[; ;main.c: 434: unsigned int aux;
[; ;main.c: 437: sum += join(&ip_tx.IP_s[0],&ip_tx.IP_s[1]);
"437
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 8 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux &U *U + &U . _ip_tx 8 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux `ul ]
[; ;main.c: 438: sum += join(&ip_tx.IP_s[2],&ip_tx.IP_s[3]);
"438
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 8 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux &U *U + &U . _ip_tx 8 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _ip_tx 8 `ui `ux `ul ]
[; ;main.c: 439: sum += join(&ip_tx.IP_d[0],&ip_tx.IP_d[1]);
"439
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 9 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux &U *U + &U . _ip_tx 9 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux `ul ]
[; ;main.c: 440: sum += join(&ip_tx.IP_d[2],&ip_tx.IP_d[3]);
"440
[e =+ _sum -> ( _join (2 , &U *U + &U . _ip_tx 9 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux &U *U + &U . _ip_tx 9 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _ip_tx 9 `ui `ux `ul ]
[; ;main.c: 441: sum += ip_tx.protocol;
"441
[e =+ _sum -> . _ip_tx 6 `ul ]
[; ;main.c: 442: sum += cant;
"442
[e =+ _sum -> _cant `ul ]
[; ;main.c: 443: sum += join(&tcp_tx.PORT_s[0],&tcp_tx.PORT_s[1]);
"443
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux &U *U + &U . _tcp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux `ul ]
[; ;main.c: 444: sum += join(&tcp_tx.PORT_d[0],&tcp_tx.PORT_d[1]);
"444
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 1 `ui `ux &U *U + &U . _tcp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 1 `ui `ux `ul ]
[; ;main.c: 445: sum += join(&tcp_tx.seq_num[0],&tcp_tx.seq_num[1]);
"445
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux &U *U + &U . _tcp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux `ul ]
[; ;main.c: 446: sum += join(&tcp_tx.seq_num[2],&tcp_tx.seq_num[3]);
"446
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux &U *U + &U . _tcp_tx 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _tcp_tx 2 `ui `ux `ul ]
[; ;main.c: 447: sum += join(&tcp_tx.ack_num[0],&tcp_tx.ack_num[1]);
"447
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 3 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 3 `ui `ux &U *U + &U . _tcp_tx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 3 `ui `ux `ul ]
[; ;main.c: 448: sum += join(&tcp_tx.ack_num[2],&tcp_tx.ack_num[3]);
"448
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 3 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _tcp_tx 3 `ui `ux &U *U + &U . _tcp_tx 3 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _tcp_tx 3 `ui `ux `ul ]
[; ;main.c: 449: sum += join(&tcp_tx.offset_n_flags[0],&tcp_tx.offset_n_flags[1]);
"449
[e =+ _sum -> ( _join (2 , &U *U + &U . _tcp_tx 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux &U *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux `ul ]
[; ;main.c: 450: sum += tcp_tx.window[1];
"450
[e =+ _sum -> *U + &U . _tcp_tx 5 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 5 `ui `ux `ul ]
[; ;main.c: 451: cant -= 20;
"451
[e =- _cant -> -> 20 `i `uc ]
[; ;main.c: 452: if (cant & 0x01) {
"452
[e $ ! != & -> _cant `i -> 1 `i -> 0 `i 181  ]
{
[; ;main.c: 453: payload[cant] = 0;
"453
[e = *U + &U _payload * -> _cant `ux -> -> # *U &U _payload `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 454: cant++;
"454
[e ++ _cant -> -> 1 `i `uc ]
"455
}
[e :U 181 ]
[; ;main.c: 455: }
[; ;main.c: 456: cant /= 2;
"456
[e =/ _cant -> 2 `uc ]
[; ;main.c: 457: for (char i=0;i<cant;i++) {
"457
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 185  ]
[e :U 182 ]
{
[; ;main.c: 458: aux = payload[2*i];
"458
[e = _aux -> *U + &U _payload * -> -> * -> 2 `i -> _i `i `ui `ux -> -> # *U &U _payload `ui `ux `ui ]
[; ;main.c: 459: aux = aux << 8;
"459
[e = _aux << _aux -> 8 `i ]
[; ;main.c: 460: aux += payload[2*i + 1];
"460
[e =+ _aux -> *U + &U _payload * -> -> + * -> 2 `i -> _i `i -> 1 `i `ui `ux -> -> # *U &U _payload `ui `ux `ui ]
[; ;main.c: 461: sum += aux;
"461
[e =+ _sum -> _aux `ul ]
"462
}
"457
[e ++ _i -> -> 1 `i `uc ]
[e :U 185 ]
[e $ < -> _i `i -> _cant `i 182  ]
[e :U 183 ]
"462
}
[; ;main.c: 462: }
[; ;main.c: 463: while (sum > 0x0000FFFF) {
"463
[e $U 186  ]
[e :U 187 ]
{
[; ;main.c: 464: aux = sum >> 16;
"464
[e = _aux -> >> _sum -> 16 `i `ui ]
[; ;main.c: 465: sum = (sum & 0x0000FFFF) + aux;
"465
[e = _sum + & _sum -> -> 65535 `ui `ul -> _aux `ul ]
"466
}
[e :U 186 ]
"463
[e $ > _sum -> -> 65535 `ui `ul 187  ]
[e :U 188 ]
[; ;main.c: 466: }
[; ;main.c: 467: aux = sum;
"467
[e = _aux -> _sum `ui ]
[; ;main.c: 468: aux = ~aux;
"468
[e = _aux ~ _aux ]
[; ;main.c: 470: return aux;
"470
[e ) _aux ]
[e $UE 180  ]
[; ;main.c: 471: }
"471
[e :UE 180 ]
}
"473
[v _read_buff `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 473: void read_buff () {
[e :U _read_buff ]
[f ]
"474
[v _inL `uc ~T0 @X0 1 a ]
[v _inH `uc ~T0 @X0 1 a ]
[v _ptrL `uc ~T0 @X0 1 a ]
[v _ptrH `uc ~T0 @X0 1 a ]
"475
[v _aux `ui ~T0 @X0 1 a ]
"476
[v F1958 `b ~T0 @X0 1 s match ]
[; ;main.c: 474: char inL, inH, ptrL, ptrH;
[; ;main.c: 475: unsigned int aux;
[; ;main.c: 476: static bit match;
[; ;main.c: 478: PORTBbits.RB2 = 0;
"478
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 479: spi(0x3A,1);
"479
[e ( _spi (2 , -> -> 58 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 480: ptrL = spi(0x00,0);
"480
[e = _ptrL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 481: ptrH = spi(0x00,0);
"481
[e = _ptrH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 482: inL = spi(0x00,0);
"482
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 483: inH = spi(0x00,0);
"483
[e = _inH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 484: inL = spi(0x00,0);
"484
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 485: inH = spi(0x00,0);
"485
[e = _inH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 486: for (char i=0;i<6;i++) {
"486
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 190  ]
[e $U 191  ]
[e :U 190 ]
{
[; ;main.c: 487: link_rx.MAC_d[i] = spi(0,0);
"487
[e = *U + &U . _link_rx 0 * -> _i `ux -> -> # *U &U . _link_rx 0 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"488
}
"486
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 190  ]
[e :U 191 ]
"488
}
[; ;main.c: 488: }
[; ;main.c: 489: for (char i=0;i<6;i++) {
"489
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 193  ]
[e $U 194  ]
[e :U 193 ]
{
[; ;main.c: 490: link_rx.MAC_s[i] = spi(0,0);
"490
[e = *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"491
}
"489
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 193  ]
[e :U 194 ]
"491
}
[; ;main.c: 491: }
[; ;main.c: 492: inH = spi(0x00,0);
"492
[e = _inH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 493: inL = spi(0x00,0);
"493
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 494: aux = inH;
"494
[e = _aux -> _inH `ui ]
[; ;main.c: 495: aux = (aux << 8) + inL;
"495
[e = _aux + << _aux -> 8 `i -> _inL `ui ]
[; ;main.c: 496: switch (aux) {
"496
[e $U 197  ]
{
[; ;main.c: 497: case 0x0800:
"497
[e :U 198 ]
[; ;main.c: 498: spi(0,0);
"498
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 499: spi(0,0);
"499
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 500: ip_rx.total_length[0] = spi(0,0);
"500
[e = *U + &U . _ip_rx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 501: ip_rx.total_length[1] = spi(0,0);
"501
[e = *U + &U . _ip_rx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 502: ip_rx.id[0] = spi(0,0);
"502
[e = *U + &U . _ip_rx 3 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_rx 3 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 503: ip_rx.id[1] = spi(0,0);
"503
[e = *U + &U . _ip_rx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 3 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 504: for (unsigned int i=0;i<3;i++) {
"504
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 3 `i `ui 199  ]
[e $U 200  ]
[e :U 199 ]
{
[; ;main.c: 505: spi(0,0);
"505
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"506
}
"504
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 3 `i `ui 199  ]
[e :U 200 ]
"506
}
[; ;main.c: 506: }
[; ;main.c: 507: ip_rx.protocol = spi(0,0);
"507
[e = . _ip_rx 6 ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 508: for (unsigned int i=0;i<2;i++) {
"508
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 2 `i `ui 202  ]
[e $U 203  ]
[e :U 202 ]
{
[; ;main.c: 509: spi(0,0);
"509
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"510
}
"508
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 2 `i `ui 202  ]
[e :U 203 ]
"510
}
[; ;main.c: 510: }
[; ;main.c: 511: for (char i=0;i<4;i++) {
"511
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 205  ]
[e $U 206  ]
[e :U 205 ]
{
[; ;main.c: 512: ip_rx.IP_s[i] = spi(0,0);
"512
[e = *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"513
}
"511
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 205  ]
[e :U 206 ]
"513
}
[; ;main.c: 513: }
[; ;main.c: 514: for (char i=0;i<4;i++) {
"514
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 208  ]
[e $U 209  ]
[e :U 208 ]
{
[; ;main.c: 515: ip_rx.IP_d[i] = spi(0,0);
"515
[e = *U + &U . _ip_rx 9 * -> _i `ux -> -> # *U &U . _ip_rx 9 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"516
}
"514
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 208  ]
[e :U 209 ]
"516
}
[; ;main.c: 516: }
[; ;main.c: 517: for (char i=0;i<4;i++) {
"517
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 211  ]
[e $U 212  ]
[e :U 211 ]
{
[; ;main.c: 518: if (ip_rx.IP_d[i] != ip_tx.IP_s[i]) {
"518
[e $ ! != -> *U + &U . _ip_rx 9 * -> _i `ux -> -> # *U &U . _ip_rx 9 `ui `ux `i -> *U + &U . _ip_tx 8 * -> _i `ux -> -> # *U &U . _ip_tx 8 `ui `ux `i 214  ]
{
[; ;main.c: 519: ip_rx.protocol = 143;
"519
[e = . _ip_rx 6 -> -> 143 `i `uc ]
"520
}
[e :U 214 ]
"521
}
"517
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 211  ]
[e :U 212 ]
"521
}
[; ;main.c: 520: }
[; ;main.c: 521: }
[; ;main.c: 522: switch (ip_rx.protocol) {
"522
[e $U 216  ]
{
[; ;main.c: 523: case 1:
"523
[e :U 217 ]
[; ;main.c: 524: if (spi(0,0) == 8) {
"524
[e $ ! == -> ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc `i -> 8 `i 218  ]
{
[; ;main.c: 525: ping = 1;
"525
[e = _ping -> -> 1 `i `b ]
[; ;main.c: 526: ip_tx.protocol = ip_rx.protocol;
"526
[e = . _ip_tx 6 . _ip_rx 6 ]
[; ;main.c: 527: spi(0,0);
"527
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 528: spi(0,0);
"528
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 529: spi(0,0);
"529
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 530: ping_echo.id[0] = spi(0,0);
"530
[e = *U + &U . _ping_echo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ping_echo 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 531: ping_echo.id[1] = spi(0,0);
"531
[e = *U + &U . _ping_echo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ping_echo 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 532: ping_echo.seq_num[0] = spi(0,0);
"532
[e = *U + &U . _ping_echo 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ping_echo 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 533: ping_echo.seq_num[1] = spi(0,0);
"533
[e = *U + &U . _ping_echo 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ping_echo 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 534: ping_echo.payload = spi(0,0);
"534
[e = . _ping_echo 3 ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"535
}
[e :U 218 ]
[; ;main.c: 535: }
[; ;main.c: 536: break;
"536
[e $U 215  ]
[; ;main.c: 537: case 6:
"537
[e :U 219 ]
[; ;main.c: 538: timeout = 0;
"538
[e = _timeout -> -> 0 `i `ui ]
[; ;main.c: 539: ack = 0;
"539
[e = _ack -> -> -> 0 `i `l `ul ]
[; ;main.c: 540: tcp_tx.PORT_d[0] = spi(0,0);
"540
[e = *U + &U . _tcp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 541: tcp_tx.PORT_d[1] = spi(0,0);
"541
[e = *U + &U . _tcp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 542: inH = spi(0,0);
"542
[e = _inH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 543: inL = spi(0,0);
"543
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 544: if (inH == tcp_tx.PORT_s[0] && inL == tcp_tx.PORT_s[1]) {
"544
[e $ ! && == -> _inH `i -> *U + &U . _tcp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux `i == -> _inL `i -> *U + &U . _tcp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux `i 220  ]
{
[; ;main.c: 545: for (char i=0;i<4;i++) {
"545
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 221  ]
[e $U 222  ]
[e :U 221 ]
{
[; ;main.c: 546: tcp_rx.seq_num[i] = spi(0,0);
"546
[e = *U + &U . _tcp_rx 2 * -> _i `ux -> -> # *U &U . _tcp_rx 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 547: ack = ack << 8;
"547
[e = _ack << _ack -> 8 `i ]
[; ;main.c: 548: ack += tcp_rx.seq_num[i];
"548
[e =+ _ack -> *U + &U . _tcp_rx 2 * -> _i `ux -> -> # *U &U . _tcp_rx 2 `ui `ux `ul ]
"549
}
"545
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 221  ]
[e :U 222 ]
"549
}
[; ;main.c: 549: }
[; ;main.c: 550: for (char i=0;i<4;i++) {
"550
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 224  ]
[e $U 225  ]
[e :U 224 ]
{
[; ;main.c: 552: tcp_tx.seq_num[i] = spi(0,0);
"552
[e = *U + &U . _tcp_tx 2 * -> _i `ux -> -> # *U &U . _tcp_tx 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"553
}
"550
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 224  ]
[e :U 225 ]
"553
}
[; ;main.c: 553: }
[; ;main.c: 554: tcp_rx.offset_n_flags[0] = spi(0,0);
"554
[e = *U + &U . _tcp_rx 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_rx 4 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 555: tcp_rx.offset_n_flags[1] = spi(0,0);
"555
[e = *U + &U . _tcp_rx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_rx 4 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 556: for (char i=0;i<6;i++) {
"556
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 227  ]
[e $U 228  ]
[e :U 227 ]
{
[; ;main.c: 557: spi(0,0);
"557
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"558
}
"556
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 227  ]
[e :U 228 ]
"558
}
[; ;main.c: 558: }
[; ;main.c: 559: ip_rx.total_length[1] -= 20;
"559
[e =- *U + &U . _ip_rx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux -> -> 20 `i `uc ]
[; ;main.c: 560: inL = tcp_rx.offset_n_flags[0] >> 4;
"560
[e = _inL -> >> -> *U + &U . _tcp_rx 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_rx 4 `ui `ux `i -> 4 `i `uc ]
[; ;main.c: 561: inL *= 4;
"561
[e =* _inL -> -> 4 `i `uc ]
[; ;main.c: 562: ip_rx.total_length[1] -= inL;
"562
[e =- *U + &U . _ip_rx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux _inL ]
[; ;main.c: 563: inL -= 20;
"563
[e =- _inL -> -> 20 `i `uc ]
[; ;main.c: 564: for (char i=0;i<inL;i++) {
"564
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 233  ]
[e :U 230 ]
{
[; ;main.c: 565: spi(0,0);
"565
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"566
}
"564
[e ++ _i -> -> 1 `i `uc ]
[e :U 233 ]
[e $ < -> _i `i -> _inL `i 230  ]
[e :U 231 ]
"566
}
[; ;main.c: 566: }
[; ;main.c: 567: for (char i=0;i<ip_rx.total_length[1];i++) {
"567
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 237  ]
[e :U 234 ]
{
[; ;main.c: 568: payload[i] = spi(0,0);
"568
[e = *U + &U _payload * -> _i `ux -> -> # *U &U _payload `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"569
}
"567
[e ++ _i -> -> 1 `i `uc ]
[e :U 237 ]
[e $ < -> _i `i -> *U + &U . _ip_rx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux `i 234  ]
[e :U 235 ]
"569
}
[; ;main.c: 569: }
[; ;main.c: 570: switch (tcp_tx.status) {
"570
[e $U 239  ]
{
[; ;main.c: 571: case 0:
"571
[e :U 240 ]
[; ;main.c: 572: if (tcp_rx.offset_n_flags[1] & 0x02) {
"572
[e $ ! != & -> *U + &U . _tcp_rx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_rx 4 `ui `ux `i -> 2 `i -> 0 `i 241  ]
{
[; ;main.c: 573: tcp_tx.status = 1;
"573
[e = . _tcp_tx 8 -> -> 1 `i `uc ]
"574
}
[e :U 241 ]
[; ;main.c: 574: }
[; ;main.c: 575: break;
"575
[e $U 238  ]
[; ;main.c: 576: case 11:
"576
[e :U 242 ]
[; ;main.c: 577: match = 1;
"577
[e = F1958 -> -> 1 `i `b ]
[; ;main.c: 578: for (char i=0;i<4;i++) {
"578
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 243  ]
[e $U 244  ]
[e :U 243 ]
{
[; ;main.c: 579: if (tcp_rx.seq_num[i] != tcp_tx.ack_num[i]) {
"579
[e $ ! != -> *U + &U . _tcp_rx 2 * -> _i `ux -> -> # *U &U . _tcp_rx 2 `ui `ux `i -> *U + &U . _tcp_tx 3 * -> _i `ux -> -> # *U &U . _tcp_tx 3 `ui `ux `i 246  ]
{
[; ;main.c: 580: match = 0;
"580
[e = F1958 -> -> 0 `i `b ]
[; ;main.c: 581: tcp_tx.status = 0;
"581
[e = . _tcp_tx 8 -> -> 0 `i `uc ]
"582
}
[e :U 246 ]
[; ;main.c: 582: }
[; ;main.c: 583: if (match) {
"583
[e $ ! F1958 247  ]
{
[; ;main.c: 584: tcp_tx.status = 2;
"584
[e = . _tcp_tx 8 -> -> 2 `i `uc ]
"585
}
[e :U 247 ]
"586
}
"578
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 243  ]
[e :U 244 ]
"586
}
[; ;main.c: 585: }
[; ;main.c: 586: }
[; ;main.c: 587: break;
"587
[e $U 238  ]
[; ;main.c: 588: case 33:
"588
[e :U 248 ]
[; ;main.c: 589: if (tcp_rx.offset_n_flags[1] & 0x01) {
"589
[e $ ! != & -> *U + &U . _tcp_rx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_rx 4 `ui `ux `i -> 1 `i -> 0 `i 249  ]
{
[; ;main.c: 590: tcp_tx.status = 5;
"590
[e = . _tcp_tx 8 -> -> 5 `i `uc ]
"591
}
[; ;main.c: 591: } else {
[e $U 250  ]
[e :U 249 ]
{
[; ;main.c: 592: tcp_tx.status = 3;
"592
[e = . _tcp_tx 8 -> -> 3 `i `uc ]
"593
}
[e :U 250 ]
[; ;main.c: 593: }
[; ;main.c: 594: break;
"594
[e $U 238  ]
[; ;main.c: 595: case 44:
"595
[e :U 251 ]
[; ;main.c: 596: tcp_tx.status = 4;
"596
[e = . _tcp_tx 8 -> -> 4 `i `uc ]
[; ;main.c: 597: break;
"597
[e $U 238  ]
[; ;main.c: 598: case 55:
"598
[e :U 252 ]
[; ;main.c: 599: tcp_tx.status = 0;
"599
[e = . _tcp_tx 8 -> -> 0 `i `uc ]
[; ;main.c: 600: break;
"600
[e $U 238  ]
[; ;main.c: 601: case 66:
"601
[e :U 253 ]
[; ;main.c: 602: if (tcp_rx.offset_n_flags[1] & 0x01) {
"602
[e $ ! != & -> *U + &U . _tcp_rx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_rx 4 `ui `ux `i -> 1 `i -> 0 `i 254  ]
{
[; ;main.c: 603: tcp_tx.status = 6;
"603
[e = . _tcp_tx 8 -> -> 6 `i `uc ]
"604
}
[e :U 254 ]
[; ;main.c: 604: }
[; ;main.c: 605: break;
"605
[e $U 238  ]
"606
}
[; ;main.c: 606: }
[e $U 238  ]
"570
[e :U 239 ]
[e [\ . _tcp_tx 8 , $ -> -> 0 `i `uc 240
 , $ -> -> 11 `i `uc 242
 , $ -> -> 33 `i `uc 248
 , $ -> -> 44 `i `uc 251
 , $ -> -> 55 `i `uc 252
 , $ -> -> 66 `i `uc 253
 238 ]
"606
[e :U 238 ]
[; ;main.c: 607: for (char i=0;i<6;i++) {
"607
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 255  ]
[e $U 256  ]
[e :U 255 ]
{
[; ;main.c: 608: link_tx.MAC_d[i] = link_rx.MAC_s[i];
"608
[e = *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux ]
"609
}
"607
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 255  ]
[e :U 256 ]
"609
}
[; ;main.c: 609: }
[; ;main.c: 610: for (char i=0;i<4;i++) {
"610
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 258  ]
[e $U 259  ]
[e :U 258 ]
{
[; ;main.c: 611: ip_tx.IP_d[i] = ip_rx.IP_s[i];
"611
[e = *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux ]
"612
}
"610
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 258  ]
[e :U 259 ]
"612
}
"613
}
[e :U 220 ]
[; ;main.c: 612: }
[; ;main.c: 613: }
[; ;main.c: 614: break;
"614
[e $U 215  ]
[; ;main.c: 615: case 17:
"615
[e :U 261 ]
[; ;main.c: 616: udp_tx.PORT_d[0] = spi(0,0);
"616
[e = *U + &U . _udp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 617: udp_tx.PORT_d[1] = spi(0,0);
"617
[e = *U + &U . _udp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 618: udp_tx.PORT_s[0] = spi(0,0);
"618
[e = *U + &U . _udp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 619: udp_tx.PORT_s[1] = spi(0,0);
"619
[e = *U + &U . _udp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 620: udp_tx.length[0] = spi(0,0);
"620
[e = *U + &U . _udp_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 621: udp_tx.length[1] = spi(0,0) - 8;
"621
[e = *U + &U . _udp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux -> - -> ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc `i -> 8 `i `uc ]
[; ;main.c: 622: spi(0,0);
"622
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 623: spi(0,0);
"623
[e ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 624: for (char i=0;i<udp_tx.length[1];i++) {
"624
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 265  ]
[e :U 262 ]
{
[; ;main.c: 625: payload[i] = spi(0,0);
"625
[e = *U + &U _payload * -> _i `ux -> -> # *U &U _payload `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"626
}
"624
[e ++ _i -> -> 1 `i `uc ]
[e :U 265 ]
[e $ < -> _i `i -> *U + &U . _udp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux `i 262  ]
[e :U 263 ]
"626
}
[; ;main.c: 626: }
[; ;main.c: 627: udp_tx.flag = 1;
"627
[e = . _udp_tx 3 -> -> 1 `i `uc ]
[; ;main.c: 628: break;
"628
[e $U 215  ]
"629
}
[; ;main.c: 629: }
[e $U 215  ]
"522
[e :U 216 ]
[e [\ . _ip_rx 6 , $ -> -> 1 `i `uc 217
 , $ -> -> 6 `i `uc 219
 , $ -> -> 17 `i `uc 261
 215 ]
"629
[e :U 215 ]
[; ;main.c: 630: break;
"630
[e $U 196  ]
[; ;main.c: 631: case 0x0806:
"631
[e :U 266 ]
[; ;main.c: 632: inH = spi(0,0);
"632
[e = _inH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 633: inL = spi(0,0);
"633
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 634: if (inH == 0 && inL == 1) {
"634
[e $ ! && == -> _inH `i -> 0 `i == -> _inL `i -> 1 `i 267  ]
{
[; ;main.c: 635: inH = spi(0,0);
"635
[e = _inH ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 636: inL = spi(0,0);
"636
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 637: if (inH == 0x08 && inL == 0x00) {
"637
[e $ ! && == -> _inH `i -> 8 `i == -> _inL `i -> 0 `i 268  ]
{
[; ;main.c: 638: inL = spi(0,0);
"638
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 639: inL = spi(0,0);
"639
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 640: inL = spi(0,0);
"640
[e = _inL ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 641: arp_type = spi(0,0);
"641
[e = _arp_type ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 642: if (arp_type > 0) {
"642
[e $ ! > -> _arp_type `i -> 0 `i 269  ]
{
[; ;main.c: 643: for (char i=0;i<6;i++) {
"643
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 270  ]
[e $U 271  ]
[e :U 270 ]
{
[; ;main.c: 644: link_rx.MAC_s[i] = spi(0,0);
"644
[e = *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"645
}
"643
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 270  ]
[e :U 271 ]
"645
}
[; ;main.c: 645: }
[; ;main.c: 646: for (char i=0;i<4;i++) {
"646
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 273  ]
[e $U 274  ]
[e :U 273 ]
{
[; ;main.c: 647: ip_rx.IP_s[i] = spi(0,0);
"647
[e = *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"648
}
"646
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 273  ]
[e :U 274 ]
"648
}
[; ;main.c: 648: }
[; ;main.c: 649: for (char i=0;i<6;i++) {
"649
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 276  ]
[e $U 277  ]
[e :U 276 ]
{
[; ;main.c: 650: link_rx.MAC_d[i] = spi(0,0);
"650
[e = *U + &U . _link_rx 0 * -> _i `ux -> -> # *U &U . _link_rx 0 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"651
}
"649
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 276  ]
[e :U 277 ]
"651
}
[; ;main.c: 651: }
[; ;main.c: 652: for (char i=0;i<4;i++) {
"652
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 279  ]
[e $U 280  ]
[e :U 279 ]
{
[; ;main.c: 653: ip_rx.IP_d[i] = spi(0,0);
"653
[e = *U + &U . _ip_rx 9 * -> _i `ux -> -> # *U &U . _ip_rx 9 `ui `ux ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
"654
}
"652
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 279  ]
[e :U 280 ]
"654
}
"655
}
[e :U 269 ]
"656
}
[e :U 268 ]
"657
}
[e :U 267 ]
[; ;main.c: 654: }
[; ;main.c: 655: }
[; ;main.c: 656: }
[; ;main.c: 657: }
[; ;main.c: 658: break;
"658
[e $U 196  ]
"659
}
[; ;main.c: 659: }
[e $U 196  ]
"496
[e :U 197 ]
[e [\ _aux , $ -> -> 2048 `i `ui 198
 , $ -> -> 2054 `i `ui 266
 196 ]
"659
[e :U 196 ]
[; ;main.c: 660: PORTBbits.RB2 = 1;
"660
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 661: _delay((unsigned long)((10)*(8000000/4000000.0)));
"661
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 662: PORTBbits.RB2 = 0;
"662
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 663: spi(0x1F | 0xA0,1);
"663
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 664: spi(0x03,1);
"664
[e ( _spi (2 , -> -> 3 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 665: PORTBbits.RB2 = 1;
"665
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 666: _delay((unsigned long)((10)*(8000000/4000000.0)));
"666
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 667: PORTBbits.RB2 = 0;
"667
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 668: spi(0x00 | 0x40,1);
"668
[e ( _spi (2 , -> | -> 0 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 669: spi(ptrL,1);
"669
[e ( _spi (2 , _ptrL -> -> 1 `i `uc ]
[; ;main.c: 670: PORTBbits.RB2 = 1;
"670
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 671: _delay((unsigned long)((10)*(8000000/4000000.0)));
"671
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 672: PORTBbits.RB2 = 0;
"672
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 673: spi(0x01 | 0x40,1);
"673
[e ( _spi (2 , -> | -> 1 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 674: spi(ptrH,1);
"674
[e ( _spi (2 , _ptrH -> -> 1 `i `uc ]
[; ;main.c: 675: PORTBbits.RB2 = 1;
"675
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 676: _delay((unsigned long)((10)*(8000000/4000000.0)));
"676
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 677: PORTBbits.RB2 = 0;
"677
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 678: spi(0x0C | 0x40,1);
"678
[e ( _spi (2 , -> | -> 12 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 679: spi(ptrL,1);
"679
[e ( _spi (2 , _ptrL -> -> 1 `i `uc ]
[; ;main.c: 680: PORTBbits.RB2 = 1;
"680
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 681: _delay((unsigned long)((10)*(8000000/4000000.0)));
"681
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 682: PORTBbits.RB2 = 0;
"682
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 683: spi(0x0D | 0x40,1);
"683
[e ( _spi (2 , -> | -> 13 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 684: spi(ptrH,1);
"684
[e ( _spi (2 , _ptrH -> -> 1 `i `uc ]
[; ;main.c: 685: PORTBbits.RB2 = 1;
"685
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 686: _delay((unsigned long)((10)*(8000000/4000000.0)));
"686
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 687: PORTBbits.RB2 = 0;
"687
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 688: spi(0x1E | 0x80,1);
"688
[e ( _spi (2 , -> | -> 30 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 689: spi(0b01000000,1);
"689
[e ( _spi (2 , -> -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 690: PORTBbits.RB2 = 1;
"690
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 691: }
"691
[e :UE 189 ]
}
"693
[v _start_tx `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 693: void start_tx () {
[e :U _start_tx ]
[f ]
[; ;main.c: 694: ppcontrol = 0b00000111;
"694
[e = _ppcontrol -> -> 7 `i `uc ]
[; ;main.c: 695: PORTBbits.RB2 = 0;
"695
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 696: spi(0x1F | 0xA0,1);
"696
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 697: spi(0x03,1);
"697
[e ( _spi (2 , -> -> 3 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 698: PORTBbits.RB2 = 1;
"698
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 699: _delay((unsigned long)((10)*(8000000/4000000.0)));
"699
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 700: PORTBbits.RB2 = 0;
"700
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 701: spi(0x02 | 0x40,1);
"701
[e ( _spi (2 , -> | -> 2 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 702: spi(0x00,1);
"702
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 703: PORTBbits.RB2 = 1;
"703
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 704: _delay((unsigned long)((10)*(8000000/4000000.0)));
"704
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 705: PORTBbits.RB2 = 0;
"705
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 706: spi(0x03 | 0x40,1);
"706
[e ( _spi (2 , -> | -> 3 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 707: spi(0x1F,1);
"707
[e ( _spi (2 , -> -> 31 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 708: PORTBbits.RB2 = 1;
"708
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 709: _delay((unsigned long)((10)*(8000000/4000000.0)));
"709
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 710: PORTBbits.RB2 = 0;
"710
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 711: spi(0x7A,1);
"711
[e ( _spi (2 , -> -> 122 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 712: spi(ppcontrol,1);
"712
[e ( _spi (2 , _ppcontrol -> -> 1 `i `uc ]
[; ;main.c: 713: }
"713
[e :UE 282 ]
}
"715
[v _close_tx `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 715: void close_tx (char aux) {
[e :U _close_tx ]
[v _aux `uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 716: PORTBbits.RB2 = 1;
"716
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 717: _delay((unsigned long)((10)*(8000000/4000000.0)));
"717
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 718: PORTBbits.RB2 = 0;
"718
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 719: spi(0x06 | 0x40,1);
"719
[e ( _spi (2 , -> | -> 6 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 720: spi(aux,1);
"720
[e ( _spi (2 , _aux -> -> 1 `i `uc ]
[; ;main.c: 721: PORTBbits.RB2 = 1;
"721
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 722: _delay((unsigned long)((10)*(8000000/4000000.0)));
"722
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 723: PORTBbits.RB2 = 0;
"723
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 724: spi(0x07 | 0x40,1);
"724
[e ( _spi (2 , -> | -> 7 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 725: spi(0x1F,1);
"725
[e ( _spi (2 , -> -> 31 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 726: PORTBbits.RB2 = 1;
"726
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 727: _delay((unsigned long)((10)*(8000000/4000000.0)));
"727
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 728: PORTBbits.RB2 = 0;
"728
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 729: spi(0x1C | 0xA0,1);
"729
[e ( _spi (2 , -> | -> 28 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 730: spi(0x08,1);
"730
[e ( _spi (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 731: PORTBbits.RB2 = 1;
"731
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 732: _delay((unsigned long)((10)*(8000000/4000000.0)));
"732
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 733: PORTBbits.RB2 = 0;
"733
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 734: spi(0x1F | 0x80,1);
"734
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 735: spi(0x08,1);
"735
[e ( _spi (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 736: PORTBbits.RB2 = 1;
"736
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 737: }
"737
[e :UE 283 ]
}
"739
[v _set_MAC `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 739: void set_MAC () {
[e :U _set_MAC ]
[f ]
[; ;main.c: 740: for (char i=0;i<6;i++) {
"740
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 285  ]
[e $U 286  ]
[e :U 285 ]
{
[; ;main.c: 741: spi(link_tx.MAC_d[i],1);
"741
[e ( _spi (2 , *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux -> -> 1 `i `uc ]
"742
}
"740
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 285  ]
[e :U 286 ]
"742
}
[; ;main.c: 742: }
[; ;main.c: 743: for (char i=0;i<6;i++) {
"743
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 288  ]
[e $U 289  ]
[e :U 288 ]
{
[; ;main.c: 744: spi(link_tx.MAC_s[i],1);
"744
[e ( _spi (2 , *U + &U . _link_tx 1 * -> _i `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
"745
}
"743
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 288  ]
[e :U 289 ]
"745
}
[; ;main.c: 745: }
[; ;main.c: 746: for (char i=0;i<2;i++) {
"746
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 291  ]
[e $U 292  ]
[e :U 291 ]
{
[; ;main.c: 747: spi(link_tx.eth_type[i],1);
"747
[e ( _spi (2 , *U + &U . _link_tx 2 * -> _i `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 1 `i `uc ]
"748
}
"746
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 291  ]
[e :U 292 ]
"748
}
[; ;main.c: 748: }
[; ;main.c: 749: }
"749
[e :UE 284 ]
}
"751
[v _set_IP `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 751: void set_IP () {
[e :U _set_IP ]
[f ]
[; ;main.c: 752: spi(ip_tx.ver_ihl,1);
"752
[e ( _spi (2 , . _ip_tx 0 -> -> 1 `i `uc ]
[; ;main.c: 753: spi(ip_tx.dscp_ecn,1);
"753
[e ( _spi (2 , . _ip_tx 1 -> -> 1 `i `uc ]
[; ;main.c: 754: spi(ip_tx.total_length[0],1);
"754
[e ( _spi (2 , *U + &U . _ip_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 755: spi(ip_tx.total_length[1],1);
"755
[e ( _spi (2 , *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 756: spi(ip_tx.id[0],1);
"756
[e ( _spi (2 , *U + &U . _ip_tx 3 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 757: spi(ip_tx.id[1],1);
"757
[e ( _spi (2 , *U + &U . _ip_tx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 758: spi(0,1);
"758
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 759: spi(0,1);
"759
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 760: spi(ip_tx.ttl,1);
"760
[e ( _spi (2 , . _ip_tx 5 -> -> 1 `i `uc ]
[; ;main.c: 761: spi(ip_tx.protocol,1);
"761
[e ( _spi (2 , . _ip_tx 6 -> -> 1 `i `uc ]
[; ;main.c: 762: spi(ip_tx.chksum[0],1);
"762
[e ( _spi (2 , *U + &U . _ip_tx 7 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 763: spi(ip_tx.chksum[1],1);
"763
[e ( _spi (2 , *U + &U . _ip_tx 7 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 764: for (char i=0;i<4;i++) {
"764
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 295  ]
[e $U 296  ]
[e :U 295 ]
{
[; ;main.c: 765: spi(ip_tx.IP_s[i],1);
"765
[e ( _spi (2 , *U + &U . _ip_tx 8 * -> _i `ux -> -> # *U &U . _ip_tx 8 `ui `ux -> -> 1 `i `uc ]
"766
}
"764
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 295  ]
[e :U 296 ]
"766
}
[; ;main.c: 766: }
[; ;main.c: 767: for (char i=0;i<4;i++) {
"767
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 298  ]
[e $U 299  ]
[e :U 298 ]
{
[; ;main.c: 768: spi(ip_tx.IP_d[i],1);
"768
[e ( _spi (2 , *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux -> -> 1 `i `uc ]
"769
}
"767
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 298  ]
[e :U 299 ]
"769
}
[; ;main.c: 769: }
[; ;main.c: 770: }
"770
[e :UE 294 ]
}
"772
[v _arp_msg `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 772: void arp_msg (char direction) {
[e :U _arp_msg ]
[v _direction `uc ~T0 @X0 1 r1 ]
[f ]
"773
[v _endptr `ui ~T0 @X0 1 a ]
"774
[v _aux `uc ~T0 @X0 1 a ]
[; ;main.c: 773: unsigned int endptr;
[; ;main.c: 774: char aux;
[; ;main.c: 776: ppcontrol = 0b00000111;
"776
[e = _ppcontrol -> -> 7 `i `uc ]
[; ;main.c: 777: link_tx.eth_type[0] = 0x08;
"777
[e = *U + &U . _link_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 8 `i `uc ]
[; ;main.c: 778: link_tx.eth_type[1] = 0x06;
"778
[e = *U + &U . _link_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 6 `i `uc ]
[; ;main.c: 779: PORTBbits.RB2 = 0;
"779
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 780: spi(0x1F | 0xA0,1);
"780
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 781: spi(0x03,1);
"781
[e ( _spi (2 , -> -> 3 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 782: PORTBbits.RB2 = 1;
"782
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 783: _delay((unsigned long)((10)*(8000000/4000000.0)));
"783
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 784: PORTBbits.RB2 = 0;
"784
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 785: spi(0x02 | 0x40,1);
"785
[e ( _spi (2 , -> | -> 2 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 786: spi(0x00,1);
"786
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 787: PORTBbits.RB2 = 1;
"787
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 788: _delay((unsigned long)((10)*(8000000/4000000.0)));
"788
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 789: PORTBbits.RB2 = 0;
"789
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 790: spi(0x03 | 0x40,1);
"790
[e ( _spi (2 , -> | -> 3 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 791: spi(0x1F,1);
"791
[e ( _spi (2 , -> -> 31 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 792: PORTBbits.RB2 = 1;
"792
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 793: _delay((unsigned long)((10)*(8000000/4000000.0)));
"793
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 794: PORTBbits.RB2 = 0;
"794
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 795: spi(0x7A,1);
"795
[e ( _spi (2 , -> -> 122 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 796: spi(ppcontrol,1);
"796
[e ( _spi (2 , _ppcontrol -> -> 1 `i `uc ]
[; ;main.c: 797: if (direction == 1) {
"797
[e $ ! == -> _direction `i -> 1 `i 302  ]
{
[; ;main.c: 798: for (char i=0;i<6;i++) {
"798
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 303  ]
[e $U 304  ]
[e :U 303 ]
{
[; ;main.c: 799: spi(0xFF,1);
"799
[e ( _spi (2 , -> -> 255 `i `uc -> -> 1 `i `uc ]
"800
}
"798
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 303  ]
[e :U 304 ]
"800
}
"801
}
[; ;main.c: 800: }
[; ;main.c: 801: } else {
[e $U 306  ]
[e :U 302 ]
{
[; ;main.c: 802: for (char i=0;i<6;i++) {
"802
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 307  ]
[e $U 308  ]
[e :U 307 ]
{
[; ;main.c: 803: spi(link_tx.MAC_d[i],1);
"803
[e ( _spi (2 , *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux -> -> 1 `i `uc ]
"804
}
"802
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 307  ]
[e :U 308 ]
"804
}
"805
}
[e :U 306 ]
[; ;main.c: 804: }
[; ;main.c: 805: }
[; ;main.c: 806: for (char i=0;i<6;i++) {
"806
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 310  ]
[e $U 311  ]
[e :U 310 ]
{
[; ;main.c: 807: spi(link_tx.MAC_s[i],1);
"807
[e ( _spi (2 , *U + &U . _link_tx 1 * -> _i `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
"808
}
"806
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 310  ]
[e :U 311 ]
"808
}
[; ;main.c: 808: }
[; ;main.c: 809: for (char i=0;i<2;i++) {
"809
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 313  ]
[e $U 314  ]
[e :U 313 ]
{
[; ;main.c: 810: spi(link_tx.eth_type[i],1);
"810
[e ( _spi (2 , *U + &U . _link_tx 2 * -> _i `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 1 `i `uc ]
"811
}
"809
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 313  ]
[e :U 314 ]
"811
}
[; ;main.c: 811: }
[; ;main.c: 812: spi(0x00,1);
"812
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 813: spi(0x01,1);
"813
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 814: spi(0x08,1);
"814
[e ( _spi (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 815: spi(0x00,1);
"815
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 816: spi(0x06,1);
"816
[e ( _spi (2 , -> -> 6 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 817: spi(0x04,1);
"817
[e ( _spi (2 , -> -> 4 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 818: spi(0x00,1);
"818
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 819: spi(direction,1);
"819
[e ( _spi (2 , _direction -> -> 1 `i `uc ]
[; ;main.c: 820: for (char i=0;i<6;i++) {
"820
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 316  ]
[e $U 317  ]
[e :U 316 ]
{
[; ;main.c: 821: spi(link_tx.MAC_s[i],1);
"821
[e ( _spi (2 , *U + &U . _link_tx 1 * -> _i `ux -> -> # *U &U . _link_tx 1 `ui `ux -> -> 1 `i `uc ]
"822
}
"820
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 316  ]
[e :U 317 ]
"822
}
[; ;main.c: 822: }
[; ;main.c: 823: for (char i=0;i<4;i++) {
"823
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 319  ]
[e $U 320  ]
[e :U 319 ]
{
[; ;main.c: 824: spi(ip_tx.IP_s[i],1);
"824
[e ( _spi (2 , *U + &U . _ip_tx 8 * -> _i `ux -> -> # *U &U . _ip_tx 8 `ui `ux -> -> 1 `i `uc ]
"825
}
"823
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 319  ]
[e :U 320 ]
"825
}
[; ;main.c: 825: }
[; ;main.c: 826: for (char i=0;i<6;i++) {
"826
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 322  ]
[e $U 323  ]
[e :U 322 ]
{
[; ;main.c: 827: spi(link_tx.MAC_d[i],1);
"827
[e ( _spi (2 , *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux -> -> 1 `i `uc ]
"828
}
"826
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 322  ]
[e :U 323 ]
"828
}
[; ;main.c: 828: }
[; ;main.c: 829: for (char i=0;i<4;i++) {
"829
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 325  ]
[e $U 326  ]
[e :U 325 ]
{
[; ;main.c: 830: spi(ip_tx.IP_d[i],1);
"830
[e ( _spi (2 , *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux -> -> 1 `i `uc ]
"831
}
"829
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 325  ]
[e :U 326 ]
"831
}
[; ;main.c: 831: }
[; ;main.c: 832: PORTBbits.RB2 = 1;
"832
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 833: _delay((unsigned long)((10)*(8000000/4000000.0)));
"833
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 834: PORTBbits.RB2 = 0;
"834
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 835: spi(0x06 | 0x40,1);
"835
[e ( _spi (2 , -> | -> 6 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 836: spi(0x2A,1);
"836
[e ( _spi (2 , -> -> 42 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 837: PORTBbits.RB2 = 1;
"837
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 838: _delay((unsigned long)((10)*(8000000/4000000.0)));
"838
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 839: PORTBbits.RB2 = 0;
"839
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 840: spi(0x07 | 0x40,1);
"840
[e ( _spi (2 , -> | -> 7 `i -> 64 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 841: spi(0x1F,1);
"841
[e ( _spi (2 , -> -> 31 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 842: PORTBbits.RB2 = 1;
"842
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 843: _delay((unsigned long)((10)*(8000000/4000000.0)));
"843
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 844: PORTBbits.RB2 = 0;
"844
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 845: spi(0x1C | 0xA0,1);
"845
[e ( _spi (2 , -> | -> 28 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 846: spi(0x08,1);
"846
[e ( _spi (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 847: PORTBbits.RB2 = 1;
"847
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 848: _delay((unsigned long)((10)*(8000000/4000000.0)));
"848
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 849: PORTBbits.RB2 = 0;
"849
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 850: spi(0x1F | 0x80,1);
"850
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 851: spi(0x08,1);
"851
[e ( _spi (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 852: PORTBbits.RB2 = 1;
"852
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 853: }
"853
[e :UE 301 ]
}
"855
[v _echo_ping `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 855: void echo_ping () {
[e :U _echo_ping ]
[f ]
"856
[v _chk `ui ~T0 @X0 1 a ]
"857
[v _aux2 `uc ~T0 @X0 1 a ]
[v _endptr2 `uc ~T0 @X0 1 a ]
"858
[v _pchk `ul ~T0 @X0 1 a ]
[; ;main.c: 856: unsigned int chk;
[; ;main.c: 857: char aux2, endptr2;
[; ;main.c: 858: unsigned long pchk = 0;
[e = _pchk -> -> -> 0 `i `l `ul ]
[; ;main.c: 861: ping = 0;
"861
[e = _ping -> -> 0 `i `b ]
[; ;main.c: 863: ping_echo.checksum = 0;
"863
[e = . _ping_echo 0 -> -> 0 `i `ui ]
[; ;main.c: 864: pchk += join(&ping_echo.id[0],&ping_echo.id[1]);
"864
[e =+ _pchk -> ( _join (2 , &U *U + &U . _ping_echo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ping_echo 1 `ui `ux &U *U + &U . _ping_echo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ping_echo 1 `ui `ux `ul ]
[; ;main.c: 865: pchk += join(&ping_echo.seq_num[0],&ping_echo.seq_num[1]);
"865
[e =+ _pchk -> ( _join (2 , &U *U + &U . _ping_echo 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ping_echo 2 `ui `ux &U *U + &U . _ping_echo 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ping_echo 2 `ui `ux `ul ]
[; ;main.c: 866: pchk += join(&ping_echo.payload,0);
"866
[e =+ _pchk -> ( _join (2 , &U . _ping_echo 3 -> -> 0 `i `*uc `ul ]
[; ;main.c: 867: while (pchk > 0x0000FFFF) {
"867
[e $U 329  ]
[e :U 330 ]
{
[; ;main.c: 868: chk = pchk >> 16;
"868
[e = _chk -> >> _pchk -> 16 `i `ui ]
[; ;main.c: 869: pchk = (pchk & 0x0000FFFF) + chk;
"869
[e = _pchk + & _pchk -> -> 65535 `ui `ul -> _chk `ul ]
"870
}
[e :U 329 ]
"867
[e $ > _pchk -> -> 65535 `ui `ul 330  ]
[e :U 331 ]
[; ;main.c: 870: }
[; ;main.c: 871: ping_echo.checksum = pchk;
"871
[e = . _ping_echo 0 -> _pchk `ui ]
[; ;main.c: 872: ping_echo.checksum = ~ping_echo.checksum;
"872
[e = . _ping_echo 0 ~ . _ping_echo 0 ]
[; ;main.c: 873: ip_tx.total_length[1] = 29;
"873
[e = *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> -> 29 `i `uc ]
[; ;main.c: 874: if (ip_tx.id[1] == 255) {
"874
[e $ ! == -> *U + &U . _ip_tx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux `i -> 255 `i 332  ]
{
[; ;main.c: 875: ip_tx.id[0]++;
"875
[e ++ *U + &U . _ip_tx 3 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux -> -> 1 `i `uc ]
"876
}
[; ;main.c: 876: } else {
[e $U 333  ]
[e :U 332 ]
{
[; ;main.c: 877: ip_tx.id[1]++;
"877
[e ++ *U + &U . _ip_tx 3 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 3 `ui `ux -> -> 1 `i `uc ]
"878
}
[e :U 333 ]
[; ;main.c: 878: }
[; ;main.c: 879: ip_tx.protocol = 1;
"879
[e = . _ip_tx 6 -> -> 1 `i `uc ]
[; ;main.c: 880: chk = IP_chksum();
"880
[e = _chk ( _IP_chksum ..  ]
[; ;main.c: 881: ip_tx.chksum[1] = chk & 0x00FF;
"881
[e = *U + &U . _ip_tx 7 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> & _chk -> -> 255 `i `ui `uc ]
[; ;main.c: 882: ip_tx.chksum[0] = (chk >> 8) & 0x00FF;
"882
[e = *U + &U . _ip_tx 7 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> & >> _chk -> 8 `i -> -> 255 `i `ui `uc ]
[; ;main.c: 884: link_tx.eth_type[0] = 0x08;
"884
[e = *U + &U . _link_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 8 `i `uc ]
[; ;main.c: 885: link_tx.eth_type[1] = 0x00;
"885
[e = *U + &U . _link_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 887: start_tx();
"887
[e ( _start_tx ..  ]
[; ;main.c: 889: set_MAC();
"889
[e ( _set_MAC ..  ]
[; ;main.c: 891: set_IP();
"891
[e ( _set_IP ..  ]
[; ;main.c: 893: spi(0,1);
"893
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 894: spi(0,1);
"894
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 895: aux2 = (ping_echo.checksum >> 8) & 0x00FF;
"895
[e = _aux2 -> & >> . _ping_echo 0 -> 8 `i -> -> 255 `i `ui `uc ]
[; ;main.c: 896: spi(aux2,1);
"896
[e ( _spi (2 , _aux2 -> -> 1 `i `uc ]
[; ;main.c: 897: aux2 = ping_echo.checksum & 0x00FF;
"897
[e = _aux2 -> & . _ping_echo 0 -> -> 255 `i `ui `uc ]
[; ;main.c: 898: spi(aux2,1);
"898
[e ( _spi (2 , _aux2 -> -> 1 `i `uc ]
[; ;main.c: 899: spi(ping_echo.id[0],1);
"899
[e ( _spi (2 , *U + &U . _ping_echo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ping_echo 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 900: spi(ping_echo.id[1],1);
"900
[e ( _spi (2 , *U + &U . _ping_echo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ping_echo 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 901: spi(ping_echo.seq_num[0],1);
"901
[e ( _spi (2 , *U + &U . _ping_echo 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ping_echo 2 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 902: spi(ping_echo.seq_num[1],1);
"902
[e ( _spi (2 , *U + &U . _ping_echo 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ping_echo 2 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 903: spi(ping_echo.payload,1);
"903
[e ( _spi (2 , . _ping_echo 3 -> -> 1 `i `uc ]
[; ;main.c: 904: close_tx(43);
"904
[e ( _close_tx (1 -> -> 43 `i `uc ]
[; ;main.c: 905: }
"905
[e :UE 328 ]
}
"907
[v _rx_int `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 907: void rx_int (char typeOfRead) {
[e :U _rx_int ]
[v _typeOfRead `uc ~T0 @X0 1 r1 ]
[f ]
"908
[v _count `uc ~T0 @X0 1 a ]
[; ;main.c: 908: char count;
[; ;main.c: 909: if (typeOfRead) {
"909
[e $ ! != -> _typeOfRead `i -> -> -> 0 `i `uc `i 335  ]
{
[; ;main.c: 910: PORTBbits.RB2 = 0;
"910
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 911: spi(0x1F | 0xA0,1);
"911
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 912: spi(0b00000100,1);
"912
[e ( _spi (2 , -> -> 4 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 913: PORTBbits.RB2 = 1;
"913
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 914: _delay((unsigned long)((10)*(8000000/4000000.0)));
"914
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 915: PORTBbits.RB2 = 0;
"915
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 916: spi(0x1C | 0xA0,1);
"916
[e ( _spi (2 , -> | -> 28 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 917: spi(0b00000001,1);
"917
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 918: PORTBbits.RB2 = 1;
"918
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 919: _delay((unsigned long)((10)*(8000000/4000000.0)));
"919
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 920: PORTBbits.RB2 = 0;
"920
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 921: spi(0x1F | 0xA0,1);
"921
[e ( _spi (2 , -> | -> 31 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 922: spi(0x03,1);
"922
[e ( _spi (2 , -> -> 3 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 923: PORTBbits.RB2 = 1;
"923
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 924: _delay((unsigned long)((10)*(8000000/4000000.0)));
"924
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 925: PORTBbits.RB2 = 0;
"925
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 926: spi(0x1F | 0x80,1);
"926
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 927: spi(0x01,1);
"927
[e ( _spi (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 928: PORTBbits.RB2 = 1;
"928
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 929: _delay((unsigned long)((10)*(8000000/4000000.0)));
"929
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 930: PORTBbits.RB2 = 0;
"930
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 931: spi(0x19,1);
"931
[e ( _spi (2 , -> -> 25 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 932: count = spi(0,0);
"932
[e = _count ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 933: PORTBbits.RB2 = 1;
"933
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 934: while (count > 0) {
"934
[e $U 336  ]
[e :U 337 ]
{
[; ;main.c: 935: read_buff();
"935
[e ( _read_buff ..  ]
[; ;main.c: 936: _delay((unsigned long)((10)*(8000000/4000000.0)));
"936
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 937: PORTBbits.RB2 = 0;
"937
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 938: spi(0x19,1);
"938
[e ( _spi (2 , -> -> 25 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 939: count = spi(0,0);
"939
[e = _count ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 940: PORTBbits.RB2 = 1;
"940
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
"941
}
[e :U 336 ]
"934
[e $ > -> _count `i -> 0 `i 337  ]
[e :U 338 ]
[; ;main.c: 941: }
[; ;main.c: 942: _delay((unsigned long)((10)*(8000000/4000000.0)));
"942
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 943: PORTBbits.RB2 = 0;
"943
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 944: spi(0x1F | 0x80,1);
"944
[e ( _spi (2 , -> | -> 31 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 945: spi(0b00000100,1);
"945
[e ( _spi (2 , -> -> 4 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 946: PORTBbits.RB2 = 1;
"946
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
"947
}
[; ;main.c: 947: } else {
[e $U 339  ]
[e :U 335 ]
{
[; ;main.c: 948: PORTBbits.RB2 = 0;
"948
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 949: spi(0x1B | 0xA0, 1);
"949
[e ( _spi (2 , -> | -> 27 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 950: spi(0b10000000, 1);
"950
[e ( _spi (2 , -> -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 951: PORTBbits.RB2 = 1;
"951
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 952: _delay((unsigned long)((10)*(8000000/4000000.0)));
"952
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 953: read_buff();
"953
[e ( _read_buff ..  ]
[; ;main.c: 954: _delay((unsigned long)((10)*(8000000/4000000.0)));
"954
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 955: PORTBbits.RB2 = 0;
"955
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 956: spi(0x1B | 0x80, 1);
"956
[e ( _spi (2 , -> | -> 27 `i -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 957: spi(0b10000000, 1);
"957
[e ( _spi (2 , -> -> 128 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 958: PORTBbits.RB2 = 1;
"958
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
"959
}
[e :U 339 ]
[; ;main.c: 959: }
[; ;main.c: 960: }
"960
[e :UE 334 ]
}
"962
[v _tx_int `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 962: void tx_int () {
[e :U _tx_int ]
[f ]
[; ;main.c: 963: PORTBbits.RB2 = 0;
"963
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 964: spi(0x1C | 0xA0,1);
"964
[e ( _spi (2 , -> | -> 28 `i -> 160 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 965: spi(0x08,1);
"965
[e ( _spi (2 , -> -> 8 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 966: PORTBbits.RB2 = 1;
"966
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 967: _delay((unsigned long)((10)*(8000000/4000000.0)));
"967
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 968: PORTBbits.RB2 = 0;
"968
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 969: spi(0x1D, 1);
"969
[e ( _spi (2 , -> -> 29 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 970: if (spi(0,0) & 0x02) {
"970
[e $ ! != & -> ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc `i -> 2 `i -> 0 `i 341  ]
{
"973
}
[e :U 341 ]
[; ;main.c: 973: }
[; ;main.c: 974: PORTBbits.RB2 = 1;
"974
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 975: }
"975
[e :UE 340 ]
}
"977
[v _udp_msg `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 977: void udp_msg(char cant) {
[e :U _udp_msg ]
[v _cant `uc ~T0 @X0 1 r1 ]
[f ]
"978
[v _aux `ui ~T0 @X0 1 a ]
"979
[v _arg `uc ~T0 @X0 1 a ]
[; ;main.c: 978: unsigned int aux;
[; ;main.c: 979: char arg;
[; ;main.c: 981: udp_tx.length[1] = 8 + cant;
"981
[e = *U + &U . _udp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux -> + -> 8 `i -> _cant `i `uc ]
[; ;main.c: 982: ip_tx.total_length[1] = 20 + udp_tx.length[1];
"982
[e = *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> + -> 20 `i -> *U + &U . _udp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux `i `uc ]
[; ;main.c: 983: ip_tx.protocol = 17;
"983
[e = . _ip_tx 6 -> -> 17 `i `uc ]
[; ;main.c: 984: aux = IP_chksum();
"984
[e = _aux ( _IP_chksum ..  ]
[; ;main.c: 985: ip_tx.chksum[1] = aux & 0x00FF;
"985
[e = *U + &U . _ip_tx 7 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> & _aux -> -> 255 `i `ui `uc ]
[; ;main.c: 986: ip_tx.chksum[0] = (aux >> 8) & 0x00FF;
"986
[e = *U + &U . _ip_tx 7 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> & >> _aux -> 8 `i -> -> 255 `i `ui `uc ]
[; ;main.c: 988: link_tx.eth_type[0] = 0x08;
"988
[e = *U + &U . _link_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 8 `i `uc ]
[; ;main.c: 989: link_tx.eth_type[1] = 0x00;
"989
[e = *U + &U . _link_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 991: arg = 14 + ip_tx.total_length[1];
"991
[e = _arg -> + -> 14 `i -> *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux `i `uc ]
[; ;main.c: 993: start_tx();
"993
[e ( _start_tx ..  ]
[; ;main.c: 995: set_MAC();
"995
[e ( _set_MAC ..  ]
[; ;main.c: 997: set_IP();
"997
[e ( _set_IP ..  ]
[; ;main.c: 999: spi(udp_tx.PORT_s[0],1);
"999
[e ( _spi (2 , *U + &U . _udp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1000: spi(udp_tx.PORT_s[1],1);
"1000
[e ( _spi (2 , *U + &U . _udp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1001: spi(udp_tx.PORT_d[0],1);
"1001
[e ( _spi (2 , *U + &U . _udp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1002: spi(udp_tx.PORT_d[1],1);
"1002
[e ( _spi (2 , *U + &U . _udp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1003: spi(0,1);
"1003
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 1004: spi(udp_tx.length[1],1);
"1004
[e ( _spi (2 , *U + &U . _udp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1005: spi(0,1);
"1005
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 1006: spi(0,1);
"1006
[e ( _spi (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 1008: for (char i=0;i<cant;i++) {
"1008
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 346  ]
[e :U 343 ]
{
[; ;main.c: 1009: spi(payload[i],1);
"1009
[e ( _spi (2 , *U + &U _payload * -> _i `ux -> -> # *U &U _payload `ui `ux -> -> 1 `i `uc ]
"1010
}
"1008
[e ++ _i -> -> 1 `i `uc ]
[e :U 346 ]
[e $ < -> _i `i -> _cant `i 343  ]
[e :U 344 ]
"1010
}
[; ;main.c: 1010: }
[; ;main.c: 1012: close_tx(arg);
"1012
[e ( _close_tx (1 _arg ]
[; ;main.c: 1013: }
"1013
[e :UE 342 ]
}
"1015
[v _tcp_msg `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 1015: void tcp_msg(char cant) {
[e :U _tcp_msg ]
[v _cant `uc ~T0 @X0 1 r1 ]
[f ]
"1016
[v _ack_cpy `ul ~T0 @X0 1 a ]
"1017
[v _aux `ui ~T0 @X0 1 a ]
"1018
[v _arg `uc ~T0 @X0 1 a ]
[; ;main.c: 1016: unsigned long ack_cpy;
[; ;main.c: 1017: unsigned int aux;
[; ;main.c: 1018: char arg;
[; ;main.c: 1020: cant += 20;
"1020
[e =+ _cant -> -> 20 `i `uc ]
[; ;main.c: 1021: ip_tx.total_length[1] = 20 + cant;
"1021
[e = *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux -> + -> 20 `i -> _cant `i `uc ]
[; ;main.c: 1022: ip_tx.protocol = 6;
"1022
[e = . _ip_tx 6 -> -> 6 `i `uc ]
[; ;main.c: 1023: aux = IP_chksum();
"1023
[e = _aux ( _IP_chksum ..  ]
[; ;main.c: 1024: ip_tx.chksum[1] = aux & 0x00FF;
"1024
[e = *U + &U . _ip_tx 7 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> & _aux -> -> 255 `i `ui `uc ]
[; ;main.c: 1025: ip_tx.chksum[0] = (aux >> 8) & 0x00FF;
"1025
[e = *U + &U . _ip_tx 7 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ip_tx 7 `ui `ux -> & >> _aux -> 8 `i -> -> 255 `i `ui `uc ]
[; ;main.c: 1027: ack_cpy = ack;
"1027
[e = _ack_cpy _ack ]
[; ;main.c: 1028: for (char i=0;i<4;i++) {
"1028
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 348  ]
[e $U 349  ]
[e :U 348 ]
{
[; ;main.c: 1029: tcp_tx.ack_num[3 - i] = ack_cpy & 0x000000FF;
"1029
[e = *U + &U . _tcp_tx 3 * -> -> - -> 3 `i -> _i `i `ui `ux -> -> # *U &U . _tcp_tx 3 `ui `ux -> & _ack_cpy -> -> -> 255 `i `l `ul `uc ]
[; ;main.c: 1030: ack_cpy = ack_cpy >> 8;
"1030
[e = _ack_cpy >> _ack_cpy -> 8 `i ]
"1031
}
"1028
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 348  ]
[e :U 349 ]
"1031
}
[; ;main.c: 1031: }
[; ;main.c: 1032: aux = TCP_chksum(cant);
"1032
[e = _aux ( _TCP_chksum (1 _cant ]
[; ;main.c: 1033: tcp_tx.chksum[1] = aux & 0x00FF;
"1033
[e = *U + &U . _tcp_tx 6 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 6 `ui `ux -> & _aux -> -> 255 `i `ui `uc ]
[; ;main.c: 1034: tcp_tx.chksum[0] = (aux >> 8) & 0x00FF;
"1034
[e = *U + &U . _tcp_tx 6 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 6 `ui `ux -> & >> _aux -> 8 `i -> -> 255 `i `ui `uc ]
[; ;main.c: 1038: link_tx.eth_type[0] = 0x08;
"1038
[e = *U + &U . _link_tx 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 8 `i `uc ]
[; ;main.c: 1039: link_tx.eth_type[1] = 0x00;
"1039
[e = *U + &U . _link_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _link_tx 2 `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 1041: arg = 14 + ip_tx.total_length[1];
"1041
[e = _arg -> + -> 14 `i -> *U + &U . _ip_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_tx 2 `ui `ux `i `uc ]
[; ;main.c: 1043: start_tx();
"1043
[e ( _start_tx ..  ]
[; ;main.c: 1045: set_MAC();
"1045
[e ( _set_MAC ..  ]
[; ;main.c: 1047: set_IP();
"1047
[e ( _set_IP ..  ]
[; ;main.c: 1049: spi(tcp_tx.PORT_s[0],1);
"1049
[e ( _spi (2 , *U + &U . _tcp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1050: spi(tcp_tx.PORT_s[1],1);
"1050
[e ( _spi (2 , *U + &U . _tcp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 0 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1051: spi(tcp_tx.PORT_d[0],1);
"1051
[e ( _spi (2 , *U + &U . _tcp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1052: spi(tcp_tx.PORT_d[1],1);
"1052
[e ( _spi (2 , *U + &U . _tcp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 1 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1053: for (char i=0;i<4;i++) {
"1053
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 351  ]
[e $U 352  ]
[e :U 351 ]
{
[; ;main.c: 1054: spi(tcp_tx.seq_num[i],1);
"1054
[e ( _spi (2 , *U + &U . _tcp_tx 2 * -> _i `ux -> -> # *U &U . _tcp_tx 2 `ui `ux -> -> 1 `i `uc ]
"1055
}
"1053
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 351  ]
[e :U 352 ]
"1055
}
[; ;main.c: 1055: }
[; ;main.c: 1056: for (char i=0;i<4;i++) {
"1056
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 354  ]
[e $U 355  ]
[e :U 354 ]
{
[; ;main.c: 1057: spi(tcp_tx.ack_num[i],1);
"1057
[e ( _spi (2 , *U + &U . _tcp_tx 3 * -> _i `ux -> -> # *U &U . _tcp_tx 3 `ui `ux -> -> 1 `i `uc ]
"1058
}
"1056
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 354  ]
[e :U 355 ]
"1058
}
[; ;main.c: 1058: }
[; ;main.c: 1059: spi(tcp_tx.offset_n_flags[0],1);
"1059
[e ( _spi (2 , *U + &U . _tcp_tx 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1060: spi(tcp_tx.offset_n_flags[1],1);
"1060
[e ( _spi (2 , *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1061: spi(tcp_tx.window[0],1);
"1061
[e ( _spi (2 , *U + &U . _tcp_tx 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 5 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1062: spi(tcp_tx.window[1],1);
"1062
[e ( _spi (2 , *U + &U . _tcp_tx 5 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 5 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1063: spi(tcp_tx.chksum[0],1);
"1063
[e ( _spi (2 , *U + &U . _tcp_tx 6 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 6 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1064: spi(tcp_tx.chksum[1],1);
"1064
[e ( _spi (2 , *U + &U . _tcp_tx 6 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 6 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1065: spi(tcp_tx.urg_pointer[0],1);
"1065
[e ( _spi (2 , *U + &U . _tcp_tx 7 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _tcp_tx 7 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1066: spi(tcp_tx.urg_pointer[1],1);
"1066
[e ( _spi (2 , *U + &U . _tcp_tx 7 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 7 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1068: for (char i=0;i<cant;i++) {
"1068
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 360  ]
[e :U 357 ]
{
[; ;main.c: 1069: spi(payload[i],1);
"1069
[e ( _spi (2 , *U + &U _payload * -> _i `ux -> -> # *U &U _payload `ui `ux -> -> 1 `i `uc ]
"1070
}
"1068
[e ++ _i -> -> 1 `i `uc ]
[e :U 360 ]
[e $ < -> _i `i -> _cant `i 357  ]
[e :U 358 ]
"1070
}
[; ;main.c: 1070: }
[; ;main.c: 1072: close_tx(arg);
"1072
[e ( _close_tx (1 _arg ]
[; ;main.c: 1073: }
"1073
[e :UE 347 ]
}
[v $root$_isr `(v ~T0 @X0 0 e ]
[v F2054 `(v ~T0 @X0 1 tf ]
"1075
[v _isr `IF2054 ~T0 @X0 1 e ]
{
[; ;main.c: 1075: void interrupt isr() {
[e :U _isr ]
[f ]
[; ;main.c: 1077: if (PIR1bits.TMR2IF) {
"1077
[e $ ! != -> . . _PIR1bits 0 1 `i -> -> -> 0 `i `Vuc `i 362  ]
{
[; ;main.c: 1078: PIR1bits.TMR2IF = 0;
"1078
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
"1079
[v _int_vector `uc ~T0 @X0 1 a ]
[; ;main.c: 1079: char int_vector;
[; ;main.c: 1083: if (!PORTBbits.RB1) {
"1083
[e $ ! ! != -> . . _PORTBbits 0 1 `i -> -> -> 0 `i `Vuc `i 363  ]
{
[; ;main.c: 1084: PORTBbits.RB2 = 0;
"1084
[e = . . _PORTBbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 1085: spi(0x1C, 1);
"1085
[e ( _spi (2 , -> -> 28 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 1086: int_vector = spi(0, 0);
"1086
[e = _int_vector ( _spi (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 1087: PORTBbits.RB2 = 1;
"1087
[e = . . _PORTBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 1088: _delay((unsigned long)((10)*(8000000/4000000.0)));
"1088
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 1089: if (int_vector & 0x40) {
"1089
[e $ ! != & -> _int_vector `i -> 64 `i -> 0 `i 364  ]
{
[; ;main.c: 1090: rx_int(0);
"1090
[e ( _rx_int (1 -> -> 0 `i `uc ]
"1091
}
[e :U 364 ]
[; ;main.c: 1091: }
[; ;main.c: 1092: if (int_vector & 0x08) {
"1092
[e $ ! != & -> _int_vector `i -> 8 `i -> 0 `i 365  ]
{
[; ;main.c: 1093: tx_int();
"1093
[e ( _tx_int ..  ]
"1094
}
[e :U 365 ]
[; ;main.c: 1094: }
[; ;main.c: 1095: if (int_vector & 0x02) {
"1095
[e $ ! != & -> _int_vector `i -> 2 `i -> 0 `i 366  ]
{
"1097
}
[e :U 366 ]
[; ;main.c: 1097: }
[; ;main.c: 1098: if (int_vector & 0x01) {
"1098
[e $ ! != & -> _int_vector `i -> 1 `i -> 0 `i 367  ]
{
[; ;main.c: 1100: rx_int(1);
"1100
[e ( _rx_int (1 -> -> 1 `i `uc ]
"1101
}
[e :U 367 ]
[; ;main.c: 1101: }
[; ;main.c: 1103: if(arp_type == 1) {
"1103
[e $ ! == -> _arp_type `i -> 1 `i 368  ]
{
[; ;main.c: 1104: arp_type = 0;
"1104
[e = _arp_type -> -> 0 `i `uc ]
[; ;main.c: 1105: for (char i=0;i<6;i++) {
"1105
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 369  ]
[e $U 370  ]
[e :U 369 ]
{
[; ;main.c: 1106: link_tx.MAC_d[i] = link_rx.MAC_s[i];
"1106
[e = *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux ]
"1107
}
"1105
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 369  ]
[e :U 370 ]
"1107
}
[; ;main.c: 1107: }
[; ;main.c: 1108: for (char i=0;i<4;i++) {
"1108
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 372  ]
[e $U 373  ]
[e :U 372 ]
{
[; ;main.c: 1109: ip_tx.IP_d[i] = ip_rx.IP_s[i];
"1109
[e = *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux ]
"1110
}
"1108
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 372  ]
[e :U 373 ]
"1110
}
[; ;main.c: 1110: }
[; ;main.c: 1111: arp_msg(2);
"1111
[e ( _arp_msg (1 -> -> 2 `i `uc ]
"1112
}
[e :U 368 ]
[; ;main.c: 1112: }
[; ;main.c: 1114: if (ping) {
"1114
[e $ ! _ping 375  ]
{
[; ;main.c: 1115: for (char i=0;i<6;i++) {
"1115
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 376  ]
[e $U 377  ]
[e :U 376 ]
{
[; ;main.c: 1116: link_tx.MAC_d[i] = link_rx.MAC_s[i];
"1116
[e = *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux ]
"1117
}
"1115
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 376  ]
[e :U 377 ]
"1117
}
[; ;main.c: 1117: }
[; ;main.c: 1118: for (char i=0;i<4;i++) {
"1118
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 379  ]
[e $U 380  ]
[e :U 379 ]
{
[; ;main.c: 1119: ip_tx.IP_d[i] = ip_rx.IP_s[i];
"1119
[e = *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux ]
"1120
}
"1118
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 379  ]
[e :U 380 ]
"1120
}
[; ;main.c: 1120: }
[; ;main.c: 1121: echo_ping();
"1121
[e ( _echo_ping ..  ]
"1122
}
[e :U 375 ]
[; ;main.c: 1122: }
[; ;main.c: 1124: if (udp_tx.flag) {
"1124
[e $ ! != -> . _udp_tx 3 `i -> -> -> 0 `i `uc `i 382  ]
{
[; ;main.c: 1125: udp_tx.flag = 0;
"1125
[e = . _udp_tx 3 -> -> 0 `i `uc ]
[; ;main.c: 1126: putch('U');
"1126
[e ( _putch (1 -> -> 85 `ui `uc ]
[; ;main.c: 1127: for (char i=0;i<6;i++) {
"1127
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 383  ]
[e $U 384  ]
[e :U 383 ]
{
[; ;main.c: 1128: printf("%X:",link_rx.MAC_s[i]);
"1128
[e ( _printf , (. :s 1C -> *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux `i ]
"1129
}
"1127
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 383  ]
[e :U 384 ]
"1129
}
[; ;main.c: 1129: }
[; ;main.c: 1130: for (char i=0;i<4;i++) {
"1130
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 386  ]
[e $U 387  ]
[e :U 386 ]
{
[; ;main.c: 1131: printf("%X:",ip_rx.IP_s[i]);
"1131
[e ( _printf , (. :s 2C -> *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux `i ]
"1132
}
"1130
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 386  ]
[e :U 387 ]
"1132
}
[; ;main.c: 1132: }
[; ;main.c: 1133: for (char i=0;i<udp_tx.length[1];i++) {
"1133
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 392  ]
[e :U 389 ]
{
[; ;main.c: 1134: putch(payload[i]);
"1134
[e ( _putch (1 *U + &U _payload * -> _i `ux -> -> # *U &U _payload `ui `ux ]
"1135
}
"1133
[e ++ _i -> -> 1 `i `uc ]
[e :U 392 ]
[e $ < -> _i `i -> *U + &U . _udp_tx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 2 `ui `ux `i 389  ]
[e :U 390 ]
"1135
}
[; ;main.c: 1135: }
[; ;main.c: 1136: putch('\n');
"1136
[e ( _putch (1 -> -> 10 `ui `uc ]
"1137
}
[e :U 382 ]
[; ;main.c: 1137: }
[; ;main.c: 1139: switch (tcp_tx.status) {
"1139
[e $U 394  ]
{
[; ;main.c: 1140: case 1:
"1140
[e :U 395 ]
[; ;main.c: 1141: tcp_tx.offset_n_flags[1] = 0x12;
"1141
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 18 `i `uc ]
[; ;main.c: 1142: ack++;
"1142
[e ++ _ack -> -> -> 1 `i `l `ul ]
[; ;main.c: 1143: tcp_msg(0);
"1143
[e ( _tcp_msg (1 -> -> 0 `i `uc ]
[; ;main.c: 1144: tcp_tx.status = 11;
"1144
[e = . _tcp_tx 8 -> -> 11 `i `uc ]
[; ;main.c: 1145: break;
"1145
[e $U 393  ]
[; ;main.c: 1146: case 2:
"1146
[e :U 396 ]
[; ;main.c: 1147: tcp_tx.status = 33;
"1147
[e = . _tcp_tx 8 -> -> 33 `i `uc ]
[; ;main.c: 1148: break;
"1148
[e $U 393  ]
[; ;main.c: 1149: case 3:
"1149
[e :U 397 ]
[; ;main.c: 1150: tcp_tx.status = 33;
"1150
[e = . _tcp_tx 8 -> -> 33 `i `uc ]
[; ;main.c: 1151: tcp_tx.offset_n_flags[1] = 0x10;
"1151
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 16 `i `uc ]
[; ;main.c: 1152: ack += ip_rx.total_length[1];
"1152
[e =+ _ack -> *U + &U . _ip_rx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux `ul ]
[; ;main.c: 1153: tcp_msg(0);
"1153
[e ( _tcp_msg (1 -> -> 0 `i `uc ]
[; ;main.c: 1154: putch('T');
"1154
[e ( _putch (1 -> -> 84 `ui `uc ]
[; ;main.c: 1155: for (char i=0;i<6;i++) {
"1155
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 398  ]
[e $U 399  ]
[e :U 398 ]
{
[; ;main.c: 1156: printf("%X:",link_rx.MAC_s[i]);
"1156
[e ( _printf , (. :s 3C -> *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux `i ]
"1157
}
"1155
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 398  ]
[e :U 399 ]
"1157
}
[; ;main.c: 1157: }
[; ;main.c: 1158: for (char i=0;i<4;i++) {
"1158
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 401  ]
[e $U 402  ]
[e :U 401 ]
{
[; ;main.c: 1159: printf("%X:",ip_rx.IP_s[i]);
"1159
[e ( _printf , (. :s 4C -> *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux `i ]
"1160
}
"1158
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 401  ]
[e :U 402 ]
"1160
}
[; ;main.c: 1160: }
[; ;main.c: 1161: for (char i=0;i<ip_rx.total_length[1];i++) {
"1161
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 407  ]
[e :U 404 ]
{
[; ;main.c: 1162: putch(payload[i]);
"1162
[e ( _putch (1 *U + &U _payload * -> _i `ux -> -> # *U &U _payload `ui `ux ]
"1163
}
"1161
[e ++ _i -> -> 1 `i `uc ]
[e :U 407 ]
[e $ < -> _i `i -> *U + &U . _ip_rx 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ip_rx 2 `ui `ux `i 404  ]
[e :U 405 ]
"1163
}
[; ;main.c: 1163: }
[; ;main.c: 1164: putch('\n');
"1164
[e ( _putch (1 -> -> 10 `ui `uc ]
[; ;main.c: 1166: if (payload[0] == 'T') {
"1166
[e $ ! == -> *U + &U _payload * -> -> -> 0 `i `ui `ux -> -> # *U &U _payload `ui `ux `ui -> 84 `ui 408  ]
{
"1167
[v _adc `uc ~T0 @X0 1 a ]
[; ;main.c: 1167: char adc;
[; ;main.c: 1169: for (char i=0;i<6;i++) {
"1169
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 409  ]
[e $U 410  ]
[e :U 409 ]
{
[; ;main.c: 1170: link_tx.MAC_d[i] = link_rx.MAC_s[i];
"1170
[e = *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux *U + &U . _link_rx 1 * -> _i `ux -> -> # *U &U . _link_rx 1 `ui `ux ]
"1171
}
"1169
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 409  ]
[e :U 410 ]
"1171
}
[; ;main.c: 1171: }
[; ;main.c: 1172: for (char i=0;i<4;i++) {
"1172
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 412  ]
[e $U 413  ]
[e :U 412 ]
{
[; ;main.c: 1173: ip_tx.IP_d[i] = ip_rx.IP_s[i];
"1173
[e = *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux *U + &U . _ip_rx 8 * -> _i `ux -> -> # *U &U . _ip_rx 8 `ui `ux ]
"1174
}
"1172
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 412  ]
[e :U 413 ]
"1174
}
[; ;main.c: 1174: }
[; ;main.c: 1176: ADCON0bits.GO = 1;
"1176
[e = . . _ADCON0bits 1 1 -> -> 1 `i `uc ]
[; ;main.c: 1177: _delay((unsigned long)((100)*(8000000/4000000.0)));
"1177
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 1178: while(ADCON0bits.GO);
"1178
[e $U 415  ]
[e :U 416 ]
[e :U 415 ]
[e $ != -> . . _ADCON0bits 1 1 `i -> -> -> 0 `i `Vuc `i 416  ]
[e :U 417 ]
[; ;main.c: 1179: adc = ADRESL;
"1179
[e = _adc _ADRESL ]
[; ;main.c: 1180: adc /= 3;
"1180
[e =/ _adc -> 3 `uc ]
[; ;main.c: 1181: payload[0] = adc / 10;
"1181
[e = *U + &U _payload * -> -> -> 0 `i `ui `ux -> -> # *U &U _payload `ui `ux -> / -> _adc `i -> 10 `i `uc ]
[; ;main.c: 1182: adc -= (payload[0] * 10);
"1182
[e =- _adc -> * -> *U + &U _payload * -> -> -> 0 `i `ui `ux -> -> # *U &U _payload `ui `ux `i -> 10 `i `uc ]
[; ;main.c: 1183: payload[1] = adc;
"1183
[e = *U + &U _payload * -> -> -> 1 `i `ui `ux -> -> # *U &U _payload `ui `ux _adc ]
[; ;main.c: 1184: payload[0] += 48;
"1184
[e =+ *U + &U _payload * -> -> -> 0 `i `ui `ux -> -> # *U &U _payload `ui `ux -> -> 48 `i `uc ]
[; ;main.c: 1185: payload[1] += 48;
"1185
[e =+ *U + &U _payload * -> -> -> 1 `i `ui `ux -> -> # *U &U _payload `ui `ux -> -> 48 `i `uc ]
[; ;main.c: 1186: tcp_tx.offset_n_flags[1] = 0x10;
"1186
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 16 `i `uc ]
[; ;main.c: 1187: tcp_tx.status = 44;
"1187
[e = . _tcp_tx 8 -> -> 44 `i `uc ]
[; ;main.c: 1188: tcp_msg(2);
"1188
[e ( _tcp_msg (1 -> -> 2 `i `uc ]
"1189
}
[e :U 408 ]
[; ;main.c: 1189: }
[; ;main.c: 1191: break;
"1191
[e $U 393  ]
[; ;main.c: 1192: case 4:
"1192
[e :U 418 ]
[; ;main.c: 1194: tcp_tx.status = 33;
"1194
[e = . _tcp_tx 8 -> -> 33 `i `uc ]
[; ;main.c: 1195: break;
"1195
[e $U 393  ]
[; ;main.c: 1196: case 5:
"1196
[e :U 419 ]
[; ;main.c: 1197: tcp_tx.offset_n_flags[1] = 0x11;
"1197
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 17 `i `uc ]
[; ;main.c: 1198: ack++;
"1198
[e ++ _ack -> -> -> 1 `i `l `ul ]
[; ;main.c: 1199: tcp_msg(0);
"1199
[e ( _tcp_msg (1 -> -> 0 `i `uc ]
[; ;main.c: 1200: tcp_tx.status = 55;
"1200
[e = . _tcp_tx 8 -> -> 55 `i `uc ]
[; ;main.c: 1201: break;
"1201
[e $U 393  ]
[; ;main.c: 1202: case 6:
"1202
[e :U 420 ]
[; ;main.c: 1203: tcp_tx.offset_n_flags[1] = 0x10;
"1203
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 16 `i `uc ]
[; ;main.c: 1204: ack++;
"1204
[e ++ _ack -> -> -> 1 `i `l `ul ]
[; ;main.c: 1205: tcp_msg(0);
"1205
[e ( _tcp_msg (1 -> -> 0 `i `uc ]
[; ;main.c: 1206: tcp_tx.status = 0;
"1206
[e = . _tcp_tx 8 -> -> 0 `i `uc ]
[; ;main.c: 1207: break;
"1207
[e $U 393  ]
"1208
}
[; ;main.c: 1208: }
[e $U 393  ]
"1139
[e :U 394 ]
[e [\ . _tcp_tx 8 , $ -> -> 1 `i `uc 395
 , $ -> -> 2 `i `uc 396
 , $ -> -> 3 `i `uc 397
 , $ -> -> 4 `i `uc 418
 , $ -> -> 5 `i `uc 419
 , $ -> -> 6 `i `uc 420
 393 ]
"1208
[e :U 393 ]
"1209
}
[e :U 363 ]
[; ;main.c: 1209: }
[; ;main.c: 1213: if (repeat < 20000) {
"1213
[e $ ! < _repeat -> -> 20000 `i `ui 421  ]
{
[; ;main.c: 1214: repeat++;
"1214
[e ++ _repeat -> -> 1 `i `ui ]
"1215
}
[; ;main.c: 1215: } else {
[e $U 422  ]
[e :U 421 ]
{
[; ;main.c: 1216: repeat = 0;
"1216
[e = _repeat -> -> 0 `i `ui ]
[; ;main.c: 1217: if (PORTCbits.RC2) {
"1217
[e $ ! != -> . . _PORTCbits 0 2 `i -> -> -> 0 `i `Vuc `i 423  ]
{
[; ;main.c: 1218: PORTCbits.RC2 = 0;
"1218
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"1219
}
[; ;main.c: 1219: } else {
[e $U 424  ]
[e :U 423 ]
{
[; ;main.c: 1220: PORTCbits.RC2 = 1;
"1220
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
"1221
}
[e :U 424 ]
[; ;main.c: 1221: }
[; ;main.c: 1222: for (char i=0;i<6;i++) {
"1222
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 425  ]
[e $U 426  ]
[e :U 425 ]
{
[; ;main.c: 1223: link_tx.MAC_d[i] = 0;
"1223
[e = *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux -> -> 0 `i `uc ]
"1224
}
"1222
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 425  ]
[e :U 426 ]
"1224
}
[; ;main.c: 1224: }
[; ;main.c: 1225: for (char i=0;i<4;i++) {
"1225
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 428  ]
[e $U 429  ]
[e :U 428 ]
{
[; ;main.c: 1226: ip_tx.IP_d[i] = ip_tx.IP_s[i];
"1226
[e = *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux *U + &U . _ip_tx 8 * -> _i `ux -> -> # *U &U . _ip_tx 8 `ui `ux ]
"1227
}
"1225
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 428  ]
[e :U 429 ]
"1227
}
[; ;main.c: 1227: }
[; ;main.c: 1228: arp_msg(1);
"1228
[e ( _arp_msg (1 -> -> 1 `i `uc ]
"1230
}
[e :U 422 ]
[; ;main.c: 1230: }
[; ;main.c: 1231: if (timeout < 65000) {
"1231
[e $ ! < -> _timeout `l -> 65000 `l 431  ]
{
[; ;main.c: 1232: timeout++;
"1232
[e ++ _timeout -> -> 1 `i `ui ]
"1233
}
[; ;main.c: 1233: } else {
[e $U 432  ]
[e :U 431 ]
{
[; ;main.c: 1234: timeout = 0;
"1234
[e = _timeout -> -> 0 `i `ui ]
[; ;main.c: 1235: if (tcp_tx.status == 33) {
"1235
[e $ ! == -> . _tcp_tx 8 `i -> 33 `i 433  ]
{
[; ;main.c: 1236: tcp_tx.offset_n_flags[1] = 0x01;
"1236
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 1 `i `uc ]
[; ;main.c: 1237: tcp_msg(0);
"1237
[e ( _tcp_msg (1 -> -> 0 `i `uc ]
[; ;main.c: 1238: tcp_tx.status = 66;
"1238
[e = . _tcp_tx 8 -> -> 66 `i `uc ]
"1239
}
[e :U 433 ]
[; ;main.c: 1239: }
[; ;main.c: 1240: if (tcp_tx.status == 66) {
"1240
[e $ ! == -> . _tcp_tx 8 `i -> 66 `i 434  ]
{
[; ;main.c: 1241: tcp_tx.status = 0;
"1241
[e = . _tcp_tx 8 -> -> 0 `i `uc ]
"1242
}
[e :U 434 ]
"1243
}
[e :U 432 ]
[; ;main.c: 1242: }
[; ;main.c: 1243: }
[; ;main.c: 1245: if (init) {
"1245
[e $ ! _init 435  ]
{
[; ;main.c: 1246: if (rw_eeprom(0x00,0x00,0) == 0x0A) {
"1246
[e $ ! == -> ( _rw_eeprom (3 , , -> -> 0 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc `i -> 10 `i 436  ]
{
[; ;main.c: 1247: for (char i=0;i<4;i++) {
"1247
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 437  ]
[e $U 438  ]
[e :U 437 ]
{
[; ;main.c: 1248: ip_tx.IP_s[i] = rw_eeprom(i+1,0x00,0);
"1248
[e = *U + &U . _ip_tx 8 * -> _i `ux -> -> # *U &U . _ip_tx 8 `ui `ux ( _rw_eeprom (3 , , -> + -> _i `i -> 1 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
"1249
}
"1247
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 437  ]
[e :U 438 ]
"1249
}
"1250
}
[e :U 436 ]
[; ;main.c: 1249: }
[; ;main.c: 1250: }
[; ;main.c: 1251: config_eth();
"1251
[e ( _config_eth ..  ]
[; ;main.c: 1252: init = 0;
"1252
[e = _init -> -> 0 `i `b ]
"1253
}
[e :U 435 ]
"1254
}
[e :U 362 ]
[; ;main.c: 1253: }
[; ;main.c: 1254: }
[; ;main.c: 1256: if (PIR1bits.RCIF) {
"1256
[e $ ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 440  ]
{
"1257
[v _drop `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 1257: char drop, j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1259: while (!PIR1bits.RCIF);
"1259
[e $U 441  ]
[e :U 442 ]
[e :U 441 ]
[e $ ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 442  ]
[e :U 443 ]
[; ;main.c: 1260: if (!RCSTAbits.FERR & !RCSTAbits.OERR) {
"1260
[e $ ! & ! != -> . . _RCSTAbits 0 2 `i -> -> -> 0 `i `Vuc `i ! != -> . . _RCSTAbits 0 1 `i -> -> -> 0 `i `Vuc `i 444  ]
{
[; ;main.c: 1261: opcode[k] = RCREG;
"1261
[e = *U + &U _opcode * -> _k `ux -> -> # *U &U _opcode `ui `ux _RCREG ]
[; ;main.c: 1262: k++;
"1262
[e ++ _k -> -> 1 `i `uc ]
"1263
}
[; ;main.c: 1263: } else {
[e $U 445  ]
[e :U 444 ]
{
[; ;main.c: 1264: drop = RCREG;
"1264
[e = _drop _RCREG ]
[; ;main.c: 1265: drop = RCREG;
"1265
[e = _drop _RCREG ]
[; ;main.c: 1266: RCSTAbits.CREN = 0;
"1266
[e = . . _RCSTAbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 1267: _delay((unsigned long)((100)*(8000000/4000000.0)));
"1267
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 1268: RCSTAbits.CREN = 1;
"1268
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"1269
}
[e :U 445 ]
[; ;main.c: 1269: }
[; ;main.c: 1270: if (opcode[k-1] == '\n') {
"1270
[e $ ! == -> *U + &U _opcode * -> -> - -> _k `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 10 `ui 446  ]
{
[; ;main.c: 1271: switch (opcode[0]) {
"1271
[e $U 448  ]
{
[; ;main.c: 1272: case 'I':
"1272
[e :U 449 ]
[; ;main.c: 1273: j = 0;
"1273
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1274: for (char i=0;i<4;i++) {
"1274
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 450  ]
[e $U 451  ]
[e :U 450 ]
{
[; ;main.c: 1275: drop = 0;
"1275
[e = _drop -> -> 0 `i `uc ]
[; ;main.c: 1276: do {
"1276
[e :U 455 ]
{
[; ;main.c: 1277: j++;
"1277
[e ++ _j -> -> 1 `i `uc ]
[; ;main.c: 1278: drop *= 10;
"1278
[e =* _drop -> -> 10 `i `uc ]
[; ;main.c: 1279: drop += (opcode[j] - 48);
"1279
[e =+ _drop -> - -> *U + &U _opcode * -> _j `ux -> -> # *U &U _opcode `ui `ux `i -> 48 `i `uc ]
"1280
}
[; ;main.c: 1280: } while (opcode[j+1] != '.' && opcode[j+1] != '\n');
[e $ && != -> *U + &U _opcode * -> -> + -> _j `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 46 `ui != -> *U + &U _opcode * -> -> + -> _j `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 10 `ui 455  ]
[e :U 454 ]
[; ;main.c: 1281: j++;
"1281
[e ++ _j -> -> 1 `i `uc ]
[; ;main.c: 1282: ip_tx.IP_s[i] = drop;
"1282
[e = *U + &U . _ip_tx 8 * -> _i `ux -> -> # *U &U . _ip_tx 8 `ui `ux _drop ]
[; ;main.c: 1283: rw_eeprom(i+1,drop,1);
"1283
[e ( _rw_eeprom (3 , , -> + -> _i `i -> 1 `i `uc _drop -> -> 1 `i `uc ]
"1284
}
"1274
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 450  ]
[e :U 451 ]
"1284
}
[; ;main.c: 1284: }
[; ;main.c: 1285: rw_eeprom(0x00,0x0A,1);
"1285
[e ( _rw_eeprom (3 , , -> -> 0 `i `uc -> -> 10 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 1286: repeat = 20000;
"1286
[e = _repeat -> -> 20000 `i `ui ]
[; ;main.c: 1287: break;
"1287
[e $U 447  ]
[; ;main.c: 1288: case 'i':
"1288
[e :U 456 ]
[; ;main.c: 1289: j = 0;
"1289
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1290: repeat = 0;
"1290
[e = _repeat -> -> 0 `i `ui ]
[; ;main.c: 1291: for (char i=0;i<4;i++) {
"1291
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 457  ]
[e $U 458  ]
[e :U 457 ]
{
[; ;main.c: 1292: drop = 0;
"1292
[e = _drop -> -> 0 `i `uc ]
[; ;main.c: 1293: do {
"1293
[e :U 462 ]
{
[; ;main.c: 1294: j++;
"1294
[e ++ _j -> -> 1 `i `uc ]
[; ;main.c: 1295: drop *= 10;
"1295
[e =* _drop -> -> 10 `i `uc ]
[; ;main.c: 1296: drop += (opcode[j] - 48);
"1296
[e =+ _drop -> - -> *U + &U _opcode * -> _j `ux -> -> # *U &U _opcode `ui `ux `i -> 48 `i `uc ]
"1297
}
[; ;main.c: 1297: } while (opcode[j+1] != '.' && opcode[j+1] != '\n');
[e $ && != -> *U + &U _opcode * -> -> + -> _j `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 46 `ui != -> *U + &U _opcode * -> -> + -> _j `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 10 `ui 462  ]
[e :U 461 ]
[; ;main.c: 1298: j++;
"1298
[e ++ _j -> -> 1 `i `uc ]
[; ;main.c: 1299: ip_tx.IP_d[i] = drop;
"1299
[e = *U + &U . _ip_tx 9 * -> _i `ux -> -> # *U &U . _ip_tx 9 `ui `ux _drop ]
"1300
}
"1291
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 457  ]
[e :U 458 ]
"1300
}
[; ;main.c: 1300: }
[; ;main.c: 1301: break;
"1301
[e $U 447  ]
[; ;main.c: 1302: case 'm':
"1302
[e :U 463 ]
[; ;main.c: 1303: j = 0;
"1303
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1304: repeat = 0;
"1304
[e = _repeat -> -> 0 `i `ui ]
[; ;main.c: 1305: for (char i=0;i<6;i++) {
"1305
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 464  ]
[e $U 465  ]
[e :U 464 ]
{
[; ;main.c: 1306: drop = 0;
"1306
[e = _drop -> -> 0 `i `uc ]
[; ;main.c: 1307: do {
"1307
[e :U 469 ]
{
[; ;main.c: 1308: j++;
"1308
[e ++ _j -> -> 1 `i `uc ]
[; ;main.c: 1309: drop *= 16;
"1309
[e =* _drop -> -> 16 `i `uc ]
[; ;main.c: 1310: if (opcode[j] < 60) {
"1310
[e $ ! < -> *U + &U _opcode * -> _j `ux -> -> # *U &U _opcode `ui `ux `i -> 60 `i 470  ]
{
[; ;main.c: 1311: drop += (opcode[j] - 48);
"1311
[e =+ _drop -> - -> *U + &U _opcode * -> _j `ux -> -> # *U &U _opcode `ui `ux `i -> 48 `i `uc ]
"1312
}
[; ;main.c: 1312: } else {
[e $U 471  ]
[e :U 470 ]
{
[; ;main.c: 1313: drop += (opcode[j] - 55);
"1313
[e =+ _drop -> - -> *U + &U _opcode * -> _j `ux -> -> # *U &U _opcode `ui `ux `i -> 55 `i `uc ]
"1314
}
[e :U 471 ]
"1315
}
[; ;main.c: 1314: }
[; ;main.c: 1315: } while (opcode[j+1] != ':' && opcode[j+1] != '\n');
[e $ && != -> *U + &U _opcode * -> -> + -> _j `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 58 `ui != -> *U + &U _opcode * -> -> + -> _j `i -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 10 `ui 469  ]
[e :U 468 ]
[; ;main.c: 1316: j++;
"1316
[e ++ _j -> -> 1 `i `uc ]
[; ;main.c: 1317: link_tx.MAC_d[i] = drop;
"1317
[e = *U + &U . _link_tx 0 * -> _i `ux -> -> # *U &U . _link_tx 0 `ui `ux _drop ]
"1318
}
"1305
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 464  ]
[e :U 465 ]
"1318
}
[; ;main.c: 1318: }
[; ;main.c: 1319: break;
"1319
[e $U 447  ]
[; ;main.c: 1324: case 'S':
"1324
[e :U 472 ]
[; ;main.c: 1325: switch (opcode[1]) {
"1325
[e $U 474  ]
{
[; ;main.c: 1326: case 'T':
"1326
[e :U 475 ]
[; ;main.c: 1327: tcp_tx.offset_n_flags[1] = 0x10;
"1327
[e = *U + &U . _tcp_tx 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _tcp_tx 4 `ui `ux -> -> 16 `i `uc ]
[; ;main.c: 1328: tcp_tx.status = 44;
"1328
[e = . _tcp_tx 8 -> -> 44 `i `uc ]
[; ;main.c: 1329: j = 0;
"1329
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1330: do {
"1330
[e :U 478 ]
{
[; ;main.c: 1331: payload[j] = opcode[j+2];
"1331
[e = *U + &U _payload * -> _j `ux -> -> # *U &U _payload `ui `ux *U + &U _opcode * -> -> + -> _j `i -> 2 `i `ui `ux -> -> # *U &U _opcode `ui `ux ]
[; ;main.c: 1332: j++;
"1332
[e ++ _j -> -> 1 `i `uc ]
"1333
}
[; ;main.c: 1333: } while (opcode[j+2] != '\n');
[e $ != -> *U + &U _opcode * -> -> + -> _j `i -> 2 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 10 `ui 478  ]
[e :U 477 ]
[; ;main.c: 1334: tcp_msg(k-3);
"1334
[e ( _tcp_msg (1 -> - -> _k `i -> 3 `i `uc ]
[; ;main.c: 1335: break;
"1335
[e $U 473  ]
[; ;main.c: 1336: case 'U':
"1336
[e :U 479 ]
[; ;main.c: 1337: udp_tx.PORT_d[0] = 0x09;
"1337
[e = *U + &U . _udp_tx 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux -> -> 9 `i `uc ]
[; ;main.c: 1338: udp_tx.PORT_d[1] = 0x78;
"1338
[e = *U + &U . _udp_tx 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 1 `ui `ux -> -> 120 `i `uc ]
[; ;main.c: 1339: udp_tx.PORT_s[0] = 0x09;
"1339
[e = *U + &U . _udp_tx 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux -> -> 9 `i `uc ]
[; ;main.c: 1340: udp_tx.PORT_s[1] = 0x78;
"1340
[e = *U + &U . _udp_tx 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _udp_tx 0 `ui `ux -> -> 120 `i `uc ]
[; ;main.c: 1341: j = 0;
"1341
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1342: do {
"1342
[e :U 482 ]
{
[; ;main.c: 1343: payload[j] = opcode[j+2];
"1343
[e = *U + &U _payload * -> _j `ux -> -> # *U &U _payload `ui `ux *U + &U _opcode * -> -> + -> _j `i -> 2 `i `ui `ux -> -> # *U &U _opcode `ui `ux ]
[; ;main.c: 1344: j++;
"1344
[e ++ _j -> -> 1 `i `uc ]
"1345
}
[; ;main.c: 1345: } while (opcode[j+2] != '\n');
[e $ != -> *U + &U _opcode * -> -> + -> _j `i -> 2 `i `ui `ux -> -> # *U &U _opcode `ui `ux `ui -> 10 `ui 482  ]
[e :U 481 ]
[; ;main.c: 1346: udp_msg(k-3);
"1346
[e ( _udp_msg (1 -> - -> _k `i -> 3 `i `uc ]
[; ;main.c: 1347: break;
"1347
[e $U 473  ]
"1348
}
[; ;main.c: 1348: }
[e $U 473  ]
"1325
[e :U 474 ]
[e [\ *U + &U _opcode * -> -> -> 1 `i `ui `ux -> -> # *U &U _opcode `ui `ux , $ -> -> 84 `ui `uc 475
 , $ -> -> 85 `ui `uc 479
 473 ]
"1348
[e :U 473 ]
[; ;main.c: 1349: break;
"1349
[e $U 447  ]
"1350
}
[; ;main.c: 1350: }
[e $U 447  ]
"1271
[e :U 448 ]
[e [\ *U + &U _opcode * -> -> -> 0 `i `ui `ux -> -> # *U &U _opcode `ui `ux , $ -> -> 73 `ui `uc 449
 , $ -> -> 105 `ui `uc 456
 , $ -> -> 109 `ui `uc 463
 , $ -> -> 83 `ui `uc 472
 447 ]
"1350
[e :U 447 ]
[; ;main.c: 1351: k = 0;
"1351
[e = _k -> -> 0 `i `uc ]
"1352
}
[e :U 446 ]
"1353
}
[e :U 440 ]
[; ;main.c: 1352: }
[; ;main.c: 1353: }
[; ;main.c: 1354: }
"1354
[e :UE 361 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1356
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 1356: void main(void) {
[e :U _main ]
[f ]
[; ;main.c: 1357: OSCCON = 0b01110001;
"1357
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 1358: INTCON = 0xC0;
"1358
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 1359: ANSELH = 0x00;
"1359
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main.c: 1360: TRISAbits.TRISA1 = 1;
"1360
[e = . . _TRISAbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 1361: ANSEL = 0x02;
"1361
[e = _ANSEL -> -> 2 `i `uc ]
[; ;main.c: 1362: ADCON0bits.ADCS = 0b10;
"1362
[e = . . _ADCON0bits 0 3 -> -> 2 `i `uc ]
[; ;main.c: 1363: ADCON0bits.CHS = 0b001;
"1363
[e = . . _ADCON0bits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 1364: ADCON0bits.ADON = 1;
"1364
[e = . . _ADCON0bits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 1365: ADCON1bits.ADFM = 1;
"1365
[e = . . _ADCON1bits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 1367: TRISCbits.TRISC2 = 0;
"1367
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 1368: TRISBbits.TRISB1 = 1;
"1368
[e = . . _TRISBbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 1369: TRISBbits.TRISB0 = 0;
"1369
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 1370: PORTCbits.RC2 = 1;
"1370
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 1371: PORTBbits.RB0 = 0;
"1371
[e = . . _PORTBbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 1372: init = 1;
"1372
[e = _init -> -> 1 `i `b ]
[; ;main.c: 1373: next = 1;
"1373
[e = _next -> -> 1 `i `b ]
[; ;main.c: 1374: rxen = 0;
"1374
[e = _rxen -> -> 0 `i `b ]
[; ;main.c: 1375: ping = 0;
"1375
[e = _ping -> -> 0 `i `b ]
[; ;main.c: 1376: uart_init();
"1376
[e ( _uart_init ..  ]
[; ;main.c: 1377: init_spi();
"1377
[e ( _init_spi ..  ]
[; ;main.c: 1378: init_stack();
"1378
[e ( _init_stack ..  ]
[; ;main.c: 1381: repeat = 15000;
"1381
[e = _repeat -> -> 15000 `i `ui ]
[; ;main.c: 1382: init_timer2(2, 2, 125);
"1382
[e ( _init_timer2 (3 , , -> -> 2 `i `uc -> -> 2 `i `uc -> -> 125 `i `uc ]
[; ;main.c: 1384: while(1);
"1384
[e :U 485 ]
[e :U 484 ]
[e $U 485  ]
[e :U 486 ]
[; ;main.c: 1385: }
"1385
[e :UE 483 ]
}
[p f _printf 10485760 ]
[a 1C 37 88 58 0 ]
[a 2C 37 88 58 0 ]
[a 3C 37 88 58 0 ]
[a 4C 37 88 58 0 ]
