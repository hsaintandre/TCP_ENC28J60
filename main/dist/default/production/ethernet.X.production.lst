

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 12 13:29:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	bitnvBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.45
    50                           ; Generated 16/11/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F886 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159                           
   160                           	psect	strings
   161  0800                     __pstrings:	
   162  0800                     stringtab:	
   163  0800                     __stringtab:	
   164  0800                     stringcode:	
   165                           ;	String table - string pointers are 1 byte each
   166                           
   167  0800                     stringdir:	
   168  0800  3008               	movlw	high stringdir
   169  0801  008A               	movwf	10
   170  0802  0804               	movf	4,w
   171  0803  0A84               	incf	4,f
   172  0804  0782               	addwf	2,f
   173  0805                     __stringbase:	
   174  0805  3400               	retlw	0
   175  0806                     __end_of__stringtab:	
   176  0806                     _hexpowers:	
   177  0806  3401               	retlw	1
   178  0807  3400               	retlw	0
   179  0808  3410               	retlw	16
   180  0809  3400               	retlw	0
   181  080A  3400               	retlw	0
   182  080B  3401               	retlw	1
   183  080C  3400               	retlw	0
   184  080D  3410               	retlw	16
   185  080E                     __end_of_hexpowers:	
   186  080E                     STR_5:	
   187  080E  3430               	retlw	48	;'0'
   188  080F  3431               	retlw	49	;'1'
   189  0810  3432               	retlw	50	;'2'
   190  0811  3433               	retlw	51	;'3'
   191  0812  3434               	retlw	52	;'4'
   192  0813  3435               	retlw	53	;'5'
   193  0814  3436               	retlw	54	;'6'
   194  0815  3437               	retlw	55	;'7'
   195  0816  3438               	retlw	56	;'8'
   196  0817  3439               	retlw	57	;'9'
   197  0818  3441               	retlw	65	;'A'
   198  0819  3442               	retlw	66	;'B'
   199  081A  3443               	retlw	67	;'C'
   200  081B  3444               	retlw	68	;'D'
   201  081C  3445               	retlw	69	;'E'
   202  081D  3446               	retlw	70	;'F'
   203  081E  3400               	retlw	0
   204  081F                     STR_1:	
   205  081F  3425               	retlw	37	;'%'
   206  0820  3458               	retlw	88	;'X'
   207  0821  343A               	retlw	58	;':'
   208  0822  3400               	retlw	0
   209  081F                     
   210                           ; #config settings
   211  0000                     
   212                           	psect	nvBANK0
   213  006D                     __pnvBANK0:	
   214  006D                     _repeat:	
   215  006D                     	ds	2
   216                           
   217                           	psect	bitnvBANK0
   218  0378                     __pbitnvBANK0:	
   219  0378                     _init:	
   220  0378                     	ds	1
   221  0379                     _next:	
   222  0379                     	ds	1
   223  000B                     _INTCON	set	11
   224  001A                     _RCREG	set	26
   225  0007                     _PORTCbits	set	7
   226  001F                     _ADCON0bits	set	31
   227  0013                     _SSPBUF	set	19
   228  0006                     _PORTBbits	set	6
   229  0014                     _SSPCONbits	set	20
   230  000D                     _PIR2bits	set	13
   231  0012                     _T2CON	set	18
   232  0019                     _TXREG	set	25
   233  000C                     _PIR1bits	set	12
   234  0018                     _RCSTAbits	set	24
   235  009F                     _ADCON1bits	set	159
   236  0085                     _TRISAbits	set	133
   237  008F                     _OSCCON	set	143
   238  009E                     _ADRESL	set	158
   239  0087                     _TRISCbits	set	135
   240  0086                     _TRISBbits	set	134
   241  0094                     _SSPSTATbits	set	148
   242  0092                     _PR2	set	146
   243  0099                     _SPBRG	set	153
   244  009A                     _SPBRGH	set	154
   245  0098                     _TXSTAbits	set	152
   246  008C                     _PIE1bits	set	140
   247  010C                     _EEDAT	set	268
   248  010D                     _EEADR	set	269
   249  0188                     _ANSEL	set	392
   250  0189                     _ANSELH	set	393
   251  018D                     _EECON2	set	397
   252  018C                     _EECON1bits	set	396
   253  0187                     _BAUDCTLbits	set	391
   254                           
   255                           	psect	cinit
   256  0015                     start_initialization:	
   257  0015                     __initialization:	
   258                           
   259                           ; Clear objects allocated to BITBANK0
   260  0015  1283               	bcf	3,5	;RP0=0, select bank0
   261  0016  1303               	bcf	3,6	;RP1=0, select bank0
   262  0017  01EC               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   263                           
   264                           ; Clear objects allocated to BANK0
   265  0018  1383               	bcf	3,7	;select IRP bank0
   266  0019  305B               	movlw	low __pbssBANK0
   267  001A  0084               	movwf	4
   268  001B  306C               	movlw	low (__pbssBANK0+17)
   269  001C  120A  118A  27F4  120A  118A  	fcall	clear_ram0
   270                           
   271                           ; Clear objects allocated to BANK1
   272  0021  30A0               	movlw	low __pbssBANK1
   273  0022  0084               	movwf	4
   274  0023  30DE               	movlw	low (__pbssBANK1+62)
   275  0024  120A  118A  27F4  120A  118A  	fcall	clear_ram0
   276                           
   277                           ; Clear objects allocated to BANK3
   278  0029  1783               	bsf	3,7	;select IRP bank2
   279  002A  3090               	movlw	low __pbssBANK3
   280  002B  0084               	movwf	4
   281  002C  30E0               	movlw	low (__pbssBANK3+80)
   282  002D  120A  118A  27F4  120A  118A  	fcall	clear_ram0
   283                           
   284                           ; Clear objects allocated to BANK2
   285  0032  3010               	movlw	low __pbssBANK2
   286  0033  0084               	movwf	4
   287  0034  3042               	movlw	low (__pbssBANK2+50)
   288  0035  120A  118A  27F4   	fcall	clear_ram0
   289  0038                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  0038                     __end_of__initialization:	
   293  0038  0183               	clrf	3
   294  0039  160A  158A  29FF   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bitbssBANK0
   297  0360                     __pbitbssBANK0:	
   298  0360                     read_buff@match:	
   299  0360                     	ds	1
   300  0361                     _ping:	
   301  0361                     	ds	1
   302  0362                     _arp:	
   303  0362                     	ds	1
   304  0363                     _rxen:	
   305  0363                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308  005B                     __pbssBANK0:	
   309  005B                     _udp_tx:	
   310  005B                     	ds	7
   311  0062                     _ack:	
   312  0062                     	ds	4
   313  0066                     _timeout:	
   314  0066                     	ds	2
   315  0068                     _ppcontrol:	
   316  0068                     	ds	1
   317  0069                     _k:	
   318  0069                     	ds	1
   319  006A                     _arp_type:	
   320  006A                     	ds	1
   321  006B                     _out:	
   322  006B                     	ds	1
   323                           
   324                           	psect	bssBANK1
   325  00A0                     __pbssBANK1:	
   326  00A0                     _link_tx:	
   327  00A0                     	ds	14
   328  00AE                     _tcp_tx:	
   329  00AE                     	ds	21
   330  00C3                     _ip_tx:	
   331  00C3                     	ds	20
   332  00D7                     _ping_echo:	
   333  00D7                     	ds	7
   334                           
   335                           	psect	bssBANK3
   336  0190                     __pbssBANK3:	
   337  0190                     _opcode:	
   338  0190                     	ds	25
   339  01A9                     _tcp_rx:	
   340  01A9                     	ds	21
   341  01BE                     _ip_rx:	
   342  01BE                     	ds	20
   343  01D2                     _link_rx:	
   344  01D2                     	ds	14
   345                           
   346                           	psect	bssBANK2
   347  0110                     __pbssBANK2:	
   348  0110                     _payload:	
   349  0110                     	ds	50
   350                           
   351                           	psect	clrtext
   352  07F4                     clear_ram0:	
   353                           ;	Called with FSR containing the base address, and
   354                           ;	W with the last address+1
   355                           
   356  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   357  07F5                     clrloop0:	
   358  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   359  07F6  0A84               	incf	4,f	;increment pointer
   360  07F7  0604               	xorwf	4,w	;XOR with final address
   361  07F8  1903               	btfsc	3,2	;have we reached the end yet?
   362  07F9  3400               	retlw	0	;all done for this memory range, return
   363  07FA  0604               	xorwf	4,w	;XOR again to restore value
   364  07FB  2FF5               	goto	clrloop0	;do the next byte
   365                           
   366                           	psect	cstackBANK1
   367  00DE                     __pcstackBANK1:	
   368  00DE                     ??_init_stack:	
   369  00DE                     ??_uart_init:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  00DE                     ?_init_timer2:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  00DE                     ??_init_spi:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  00DE                     init_timer2@post:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  00DE                     	ds	1
   384  00DF                     init_timer2@eoc:	
   385                           
   386                           ; 1 bytes @ 0x1
   387  00DF                     	ds	1
   388  00E0                     ??_init_timer2:	
   389                           
   390                           ; 1 bytes @ 0x2
   391  00E0                     	ds	2
   392  00E2                     init_timer2@pre:	
   393                           
   394                           ; 1 bytes @ 0x4
   395  00E2                     	ds	1
   396  00E3                     init_timer2@sfr:	
   397                           
   398                           ; 1 bytes @ 0x5
   399  00E3                     	ds	1
   400  00E4                     ??_main:	
   401                           
   402                           ; 1 bytes @ 0x6
   403  00E4                     	ds	2
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:	
   407  0070                     ?_init_stack:	
   408  0070                     ?_uart_init:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_putch:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_putch:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_rw_eeprom:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_init_spi:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_spi:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_config_eth:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_read_buff:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_start_tx:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_close_tx:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_set_MAC:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_set_IP:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_arp_msg:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_echo_ping:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_rx_int:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_tx_int:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_udp_msg:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_tcp_msg:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_isr:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?___bmul:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?___lbdiv:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_join:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?___awdiv:	
   478                           ; 2 bytes @ 0x0
   479                           
   480  0070                     ?___lwdiv:	
   481                           ; 2 bytes @ 0x0
   482                           
   483  0070                     putch@data:	
   484                           ; 2 bytes @ 0x0
   485                           
   486  0070                     rw_eeprom@data:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     spi@rw:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     join@lower:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ___bmul@multiplicand:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ___lbdiv@divisor:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ___awdiv@divisor:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ___lwdiv@divisor:	
   505                           ; 2 bytes @ 0x0
   506                           
   507                           
   508                           ; 2 bytes @ 0x0
   509  0070                     	ds	1
   510  0071                     ??_spi:	
   511  0071                     ??___bmul:	
   512                           ; 1 bytes @ 0x1
   513                           
   514  0071                     ??___lbdiv:	
   515                           ; 1 bytes @ 0x1
   516                           
   517  0071                     rw_eeprom@rw:	
   518                           ; 1 bytes @ 0x1
   519                           
   520                           
   521                           ; 1 bytes @ 0x1
   522  0071                     	ds	1
   523  0072                     ??_rw_eeprom:	
   524  0072                     ??_join:	
   525                           ; 1 bytes @ 0x2
   526                           
   527  0072                     rw_eeprom@addr:	
   528                           ; 1 bytes @ 0x2
   529                           
   530  0072                     ___bmul@product:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  0072                     ___lbdiv@dividend:	
   534                           ; 1 bytes @ 0x2
   535                           
   536  0072                     ___awdiv@dividend:	
   537                           ; 1 bytes @ 0x2
   538                           
   539  0072                     ___lwdiv@dividend:	
   540                           ; 2 bytes @ 0x2
   541                           
   542                           
   543                           ; 2 bytes @ 0x2
   544  0072                     	ds	1
   545  0073                     spi@drop:	
   546  0073                     ___bmul@multiplier:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0073                     ___lbdiv@counter:	
   550                           ; 1 bytes @ 0x3
   551                           
   552                           
   553                           ; 1 bytes @ 0x3
   554  0073                     	ds	1
   555  0074                     ??___awdiv:	
   556  0074                     ??___lwdiv:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0074                     spi@dummy:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     ___lbdiv@quotient:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     join@aux:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 2 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     spi@data:	
   572  0075                     ___awdiv@counter:	
   573                           ; 1 bytes @ 0x5
   574                           
   575  0075                     ___lwdiv@quotient:	
   576                           ; 1 bytes @ 0x5
   577                           
   578                           
   579                           ; 2 bytes @ 0x5
   580  0075                     	ds	1
   581  0076                     ??_config_eth:	
   582  0076                     ??_read_buff:	
   583                           ; 1 bytes @ 0x6
   584                           
   585  0076                     ??_start_tx:	
   586                           ; 1 bytes @ 0x6
   587                           
   588  0076                     ??_close_tx:	
   589                           ; 1 bytes @ 0x6
   590                           
   591  0076                     ??_set_MAC:	
   592                           ; 1 bytes @ 0x6
   593                           
   594  0076                     ??_set_IP:	
   595                           ; 1 bytes @ 0x6
   596                           
   597  0076                     ??_arp_msg:	
   598                           ; 1 bytes @ 0x6
   599                           
   600  0076                     ??_tx_int:	
   601                           ; 1 bytes @ 0x6
   602                           
   603  0076                     join@upper:	
   604                           ; 1 bytes @ 0x6
   605                           
   606  0076                     ___awdiv@sign:	
   607                           ; 1 bytes @ 0x6
   608                           
   609                           
   610                           ; 1 bytes @ 0x6
   611  0076                     	ds	1
   612  0077                     ?_IP_chksum:	
   613  0077                     ?_TCP_chksum:	
   614                           ; 2 bytes @ 0x7
   615                           
   616  0077                     close_tx@aux:	
   617                           ; 2 bytes @ 0x7
   618                           
   619  0077                     set_MAC@i:	
   620                           ; 1 bytes @ 0x7
   621                           
   622  0077                     set_IP@i:	
   623                           ; 1 bytes @ 0x7
   624                           
   625  0077                     ___lwdiv@counter:	
   626                           ; 1 bytes @ 0x7
   627                           
   628  0077                     ___awdiv@quotient:	
   629                           ; 1 bytes @ 0x7
   630                           
   631                           
   632                           ; 2 bytes @ 0x7
   633  0077                     	ds	1
   634  0078                     ?_printf:	
   635  0078                     set_MAC@i_769:	
   636                           ; 2 bytes @ 0x8
   637                           
   638  0078                     set_IP@i_773:	
   639                           ; 1 bytes @ 0x8
   640                           
   641                           
   642                           ; 1 bytes @ 0x8
   643  0078                     	ds	1
   644  0079                     config_eth@ready:	
   645  0079                     set_MAC@i_770:	
   646                           ; 1 bytes @ 0x9
   647                           
   648                           
   649                           ; 1 bytes @ 0x9
   650  0079                     	ds	1
   651  007A                     ??_printf:	
   652  007A                     ??_rx_int:	
   653                           ; 1 bytes @ 0xA
   654                           
   655  007A                     ??_udp_msg:	
   656                           ; 1 bytes @ 0xA
   657                           
   658  007A                     ??_tcp_msg:	
   659                           ; 1 bytes @ 0xA
   660                           
   661                           
   662                           ; 1 bytes @ 0xA
   663  007A                     	ds	1
   664  007B                     rx_int@typeOfRead:	
   665                           
   666                           ; 1 bytes @ 0xB
   667  007B                     	ds	1
   668  007C                     rx_int@count:	
   669                           
   670                           ; 1 bytes @ 0xC
   671  007C                     	ds	2
   672                           
   673                           	psect	cstackBANK0
   674  0020                     __pcstackBANK0:	
   675  0020                     ??_IP_chksum:	
   676  0020                     ??_TCP_chksum:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0020                     read_buff@i_754:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0020                     arp_msg@direction:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0020                     printf@flag:	
   686                           ; 1 bytes @ 0x0
   687                           
   688                           
   689                           ; 1 bytes @ 0x0
   690  0020                     	ds	1
   691  0021                     arp_msg@i:	
   692  0021                     printf@idx:	
   693                           ; 1 bytes @ 0x1
   694                           
   695  0021                     read_buff@aux:	
   696                           ; 1 bytes @ 0x1
   697                           
   698                           
   699                           ; 2 bytes @ 0x1
   700  0021                     	ds	1
   701  0022                     arp_msg@i_779:	
   702  0022                     printf@ap:	
   703                           ; 1 bytes @ 0x2
   704                           
   705                           
   706                           ; 1 bytes @ 0x2
   707  0022                     	ds	1
   708  0023                     arp_msg@i_780:	
   709  0023                     read_buff@i_746:	
   710                           ; 1 bytes @ 0x3
   711                           
   712  0023                     printf@val:	
   713                           ; 2 bytes @ 0x3
   714                           
   715                           
   716                           ; 2 bytes @ 0x3
   717  0023                     	ds	1
   718  0024                     arp_msg@i_781:	
   719                           
   720                           ; 1 bytes @ 0x4
   721  0024                     	ds	1
   722  0025                     arp_msg@i_782:	
   723  0025                     printf@prec:	
   724                           ; 1 bytes @ 0x5
   725                           
   726  0025                     read_buff@i_747:	
   727                           ; 1 bytes @ 0x5
   728                           
   729                           
   730                           ; 2 bytes @ 0x5
   731  0025                     	ds	1
   732  0026                     arp_msg@i_783:	
   733  0026                     printf@f:	
   734                           ; 1 bytes @ 0x6
   735                           
   736                           
   737                           ; 1 bytes @ 0x6
   738  0026                     	ds	1
   739  0027                     read_buff@ptrL:	
   740  0027                     arp_msg@i_784:	
   741                           ; 1 bytes @ 0x7
   742                           
   743  0027                     printf@c:	
   744                           ; 1 bytes @ 0x7
   745                           
   746                           
   747                           ; 1 bytes @ 0x7
   748  0027                     	ds	1
   749  0028                     TCP_chksum@i:	
   750  0028                     read_buff@ptrH:	
   751                           ; 1 bytes @ 0x8
   752                           
   753  0028                     arp_msg@i_785:	
   754                           ; 1 bytes @ 0x8
   755                           
   756  0028                     IP_chksum@aux3:	
   757                           ; 1 bytes @ 0x8
   758                           
   759                           
   760                           ; 2 bytes @ 0x8
   761  0028                     	ds	1
   762  0029                     TCP_chksum@cant:	
   763  0029                     read_buff@i_753:	
   764                           ; 1 bytes @ 0x9
   765                           
   766                           
   767                           ; 1 bytes @ 0x9
   768  0029                     	ds	1
   769  002A                     read_buff@i_755:	
   770  002A                     TCP_chksum@aux:	
   771                           ; 1 bytes @ 0xA
   772                           
   773  002A                     IP_chksum@sum:	
   774                           ; 2 bytes @ 0xA
   775                           
   776                           
   777                           ; 4 bytes @ 0xA
   778  002A                     	ds	1
   779  002B                     read_buff@i_759:	
   780                           
   781                           ; 1 bytes @ 0xB
   782  002B                     	ds	1
   783  002C                     read_buff@i:	
   784  002C                     TCP_chksum@sum:	
   785                           ; 1 bytes @ 0xC
   786                           
   787                           
   788                           ; 4 bytes @ 0xC
   789  002C                     	ds	1
   790  002D                     read_buff@i_745:	
   791                           
   792                           ; 1 bytes @ 0xD
   793  002D                     	ds	1
   794  002E                     ??_echo_ping:	
   795  002E                     read_buff@i_748:	
   796                           ; 1 bytes @ 0xE
   797                           
   798  002E                     udp_msg@arg:	
   799                           ; 1 bytes @ 0xE
   800                           
   801                           
   802                           ; 1 bytes @ 0xE
   803  002E                     	ds	1
   804  002F                     read_buff@i_749:	
   805  002F                     udp_msg@aux:	
   806                           ; 1 bytes @ 0xF
   807                           
   808                           
   809                           ; 2 bytes @ 0xF
   810  002F                     	ds	1
   811  0030                     read_buff@i_752:	
   812  0030                     tcp_msg@arg:	
   813                           ; 1 bytes @ 0x10
   814                           
   815                           
   816                           ; 1 bytes @ 0x10
   817  0030                     	ds	1
   818  0031                     read_buff@i_760:	
   819  0031                     udp_msg@cant:	
   820                           ; 1 bytes @ 0x11
   821                           
   822  0031                     tcp_msg@ack_cpy:	
   823                           ; 1 bytes @ 0x11
   824                           
   825                           
   826                           ; 4 bytes @ 0x11
   827  0031                     	ds	1
   828  0032                     read_buff@i_761:	
   829  0032                     udp_msg@i:	
   830                           ; 1 bytes @ 0x12
   831                           
   832                           
   833                           ; 1 bytes @ 0x12
   834  0032                     	ds	1
   835  0033                     read_buff@i_762:	
   836                           
   837                           ; 1 bytes @ 0x13
   838  0033                     	ds	1
   839  0034                     read_buff@i_763:	
   840                           
   841                           ; 1 bytes @ 0x14
   842  0034                     	ds	1
   843  0035                     read_buff@i_750:	
   844  0035                     tcp_msg@i_816:	
   845                           ; 1 bytes @ 0x15
   846                           
   847                           
   848                           ; 1 bytes @ 0x15
   849  0035                     	ds	1
   850  0036                     read_buff@i_751:	
   851  0036                     echo_ping@aux2:	
   852                           ; 1 bytes @ 0x16
   853                           
   854  0036                     tcp_msg@cant:	
   855                           ; 1 bytes @ 0x16
   856                           
   857                           
   858                           ; 1 bytes @ 0x16
   859  0036                     	ds	1
   860  0037                     read_buff@i_756:	
   861  0037                     tcp_msg@i:	
   862                           ; 1 bytes @ 0x17
   863                           
   864  0037                     echo_ping@chk:	
   865                           ; 1 bytes @ 0x17
   866                           
   867                           
   868                           ; 2 bytes @ 0x17
   869  0037                     	ds	1
   870  0038                     read_buff@i_757:	
   871  0038                     tcp_msg@i_814:	
   872                           ; 1 bytes @ 0x18
   873                           
   874                           
   875                           ; 1 bytes @ 0x18
   876  0038                     	ds	1
   877  0039                     read_buff@i_758:	
   878  0039                     tcp_msg@i_815:	
   879                           ; 1 bytes @ 0x19
   880                           
   881  0039                     echo_ping@pchk:	
   882                           ; 1 bytes @ 0x19
   883                           
   884                           
   885                           ; 4 bytes @ 0x19
   886  0039                     	ds	1
   887  003A                     read_buff@inH:	
   888  003A                     tcp_msg@aux:	
   889                           ; 1 bytes @ 0x1A
   890                           
   891                           
   892                           ; 2 bytes @ 0x1A
   893  003A                     	ds	1
   894  003B                     read_buff@inL:	
   895                           
   896                           ; 1 bytes @ 0x1B
   897  003B                     	ds	2
   898  003D                     ??_isr:	
   899                           
   900                           ; 1 bytes @ 0x1D
   901  003D                     	ds	8
   902  0045                     isr@i_837:	
   903                           
   904                           ; 1 bytes @ 0x25
   905  0045                     	ds	1
   906  0046                     isr@i_843:	
   907                           
   908                           ; 1 bytes @ 0x26
   909  0046                     	ds	1
   910  0047                     isr@i_833:	
   911                           
   912                           ; 1 bytes @ 0x27
   913  0047                     	ds	1
   914  0048                     isr@i_835:	
   915                           
   916                           ; 1 bytes @ 0x28
   917  0048                     	ds	1
   918  0049                     isr@i_839:	
   919                           
   920                           ; 1 bytes @ 0x29
   921  0049                     	ds	1
   922  004A                     isr@i_841:	
   923                           
   924                           ; 1 bytes @ 0x2A
   925  004A                     	ds	1
   926  004B                     isr@i_863:	
   927                           
   928                           ; 1 bytes @ 0x2B
   929  004B                     	ds	1
   930  004C                     isr@i_871:	
   931                           
   932                           ; 1 bytes @ 0x2C
   933  004C                     	ds	1
   934  004D                     isr@i_872:	
   935                           
   936                           ; 1 bytes @ 0x2D
   937  004D                     	ds	1
   938  004E                     isr@adc:	
   939                           
   940                           ; 1 bytes @ 0x2E
   941  004E                     	ds	1
   942  004F                     isr@int_vector:	
   943                           
   944                           ; 1 bytes @ 0x2F
   945  004F                     	ds	1
   946  0050                     isr@i:	
   947                           
   948                           ; 1 bytes @ 0x30
   949  0050                     	ds	1
   950  0051                     isr@i_827:	
   951                           
   952                           ; 1 bytes @ 0x31
   953  0051                     	ds	1
   954  0052                     isr@i_829:	
   955                           
   956                           ; 1 bytes @ 0x32
   957  0052                     	ds	1
   958  0053                     isr@i_830:	
   959                           
   960                           ; 1 bytes @ 0x33
   961  0053                     	ds	1
   962  0054                     isr@i_845:	
   963                           
   964                           ; 1 bytes @ 0x34
   965  0054                     	ds	1
   966  0055                     isr@i_846:	
   967                           
   968                           ; 1 bytes @ 0x35
   969  0055                     	ds	1
   970  0056                     isr@i_864:	
   971                           
   972                           ; 1 bytes @ 0x36
   973  0056                     	ds	1
   974  0057                     isr@i_866:	
   975                           
   976                           ; 1 bytes @ 0x37
   977  0057                     	ds	1
   978  0058                     isr@i_870:	
   979                           
   980                           ; 1 bytes @ 0x38
   981  0058                     	ds	1
   982  0059                     isr@drop:	
   983                           
   984                           ; 1 bytes @ 0x39
   985  0059                     	ds	1
   986  005A                     isr@j:	
   987                           
   988                           ; 1 bytes @ 0x3A
   989  005A                     	ds	1
   990                           
   991                           	psect	maintext
   992  19FF                     __pmaintext:	
   993 ;;
   994 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   995 ;;
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 1356 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : B00/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0
  1014 ;;      Temps:          0       0       2       0       0
  1015 ;;      Totals:         0       0       2       0       0
  1016 ;;Total ram usage:        2 bytes
  1017 ;; Hardware stack levels required when called:    5
  1018 ;; This function calls:
  1019 ;;		_init_spi
  1020 ;;		_init_stack
  1021 ;;		_init_timer2
  1022 ;;		_uart_init
  1023 ;; This function is called by:
  1024 ;;		Startup code after reset
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _main
  1030  19FF                     _main:	
  1031                           
  1032                           ;main.c: 1357: OSCCON = 0b01110001;
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1036  19FF  3071               	movlw	113
  1037  1A00  1683               	bsf	3,5	;RP0=1, select bank1
  1038  1A01  1303               	bcf	3,6	;RP1=0, select bank1
  1039  1A02  008F               	movwf	15	;volatile
  1040                           
  1041                           ;main.c: 1358: INTCON = 0xC0;
  1042  1A03  30C0               	movlw	192
  1043  1A04  008B               	movwf	11	;volatile
  1044                           
  1045                           ;main.c: 1359: ANSELH = 0x00;
  1046  1A05  1683               	bsf	3,5	;RP0=1, select bank3
  1047  1A06  1703               	bsf	3,6	;RP1=1, select bank3
  1048  1A07  0189               	clrf	9	;volatile
  1049                           
  1050                           ;main.c: 1360: TRISAbits.TRISA1 = 1;
  1051  1A08  1683               	bsf	3,5	;RP0=1, select bank1
  1052  1A09  1303               	bcf	3,6	;RP1=0, select bank1
  1053  1A0A  1485               	bsf	5,1	;volatile
  1054                           
  1055                           ;main.c: 1361: ANSEL = 0x02;
  1056  1A0B  3002               	movlw	2
  1057  1A0C  1683               	bsf	3,5	;RP0=1, select bank3
  1058  1A0D  1703               	bsf	3,6	;RP1=1, select bank3
  1059  1A0E  0088               	movwf	8	;volatile
  1060                           
  1061                           ;main.c: 1362: ADCON0bits.ADCS = 0b10;
  1062  1A0F  1283               	bcf	3,5	;RP0=0, select bank0
  1063  1A10  1303               	bcf	3,6	;RP1=0, select bank0
  1064  1A11  081F               	movf	31,w	;volatile
  1065  1A12  393F               	andlw	-193
  1066  1A13  3880               	iorlw	128
  1067  1A14  009F               	movwf	31	;volatile
  1068                           
  1069                           ;main.c: 1363: ADCON0bits.CHS = 0b001;
  1070  1A15  081F               	movf	31,w	;volatile
  1071  1A16  39C3               	andlw	-61
  1072  1A17  3804               	iorlw	4
  1073  1A18  009F               	movwf	31	;volatile
  1074                           
  1075                           ;main.c: 1364: ADCON0bits.ADON = 1;
  1076  1A19  141F               	bsf	31,0	;volatile
  1077                           
  1078                           ;main.c: 1365: ADCON1bits.ADFM = 1;
  1079  1A1A  1683               	bsf	3,5	;RP0=1, select bank1
  1080  1A1B  1303               	bcf	3,6	;RP1=0, select bank1
  1081  1A1C  179F               	bsf	31,7	;volatile
  1082                           
  1083                           ;main.c: 1367: TRISCbits.TRISC2 = 0;
  1084  1A1D  1107               	bcf	7,2	;volatile
  1085                           
  1086                           ;main.c: 1368: TRISBbits.TRISB1 = 1;
  1087  1A1E  1486               	bsf	6,1	;volatile
  1088                           
  1089                           ;main.c: 1369: TRISBbits.TRISB0 = 0;
  1090  1A1F  1006               	bcf	6,0	;volatile
  1091                           
  1092                           ;main.c: 1370: PORTCbits.RC2 = 1;
  1093  1A20  1283               	bcf	3,5	;RP0=0, select bank0
  1094  1A21  1303               	bcf	3,6	;RP1=0, select bank0
  1095  1A22  1507               	bsf	7,2	;volatile
  1096                           
  1097                           ;main.c: 1371: PORTBbits.RB0 = 0;
  1098  1A23  1006               	bcf	6,0	;volatile
  1099                           
  1100                           ;main.c: 1372: init = 1;
  1101  1A24  146F               	bsf	_init/(0+8),_init& (0+7)
  1102                           
  1103                           ;main.c: 1373: next = 1;
  1104  1A25  14EF               	bsf	_next/(0+8),_next& (0+7)
  1105                           
  1106                           ;main.c: 1374: rxen = 0;
  1107  1A26  11EC               	bcf	_rxen/(0+8),_rxen& (0+7)
  1108                           
  1109                           ;main.c: 1375: ping = 0;
  1110  1A27  10EC               	bcf	_ping/(0+8),_ping& (0+7)
  1111                           
  1112                           ;main.c: 1376: uart_init();
  1113  1A28  160A  158A  2086  160A  158A  	fcall	_uart_init
  1114                           
  1115                           ;main.c: 1377: init_spi();
  1116  1A2D  160A  158A  206F  160A  158A  	fcall	_init_spi
  1117                           
  1118                           ;main.c: 1378: init_stack();
  1119  1A32  120A  158A  2024  160A  158A  	fcall	_init_stack
  1120                           
  1121                           ;main.c: 1381: repeat = 15000;
  1122  1A37  3098               	movlw	152
  1123  1A38  1283               	bcf	3,5	;RP0=0, select bank0
  1124  1A39  1303               	bcf	3,6	;RP1=0, select bank0
  1125  1A3A  00ED               	movwf	_repeat
  1126  1A3B  303A               	movlw	58
  1127  1A3C  00EE               	movwf	_repeat+1
  1128                           
  1129                           ;main.c: 1382: init_timer2(2, 2, 125);
  1130  1A3D  3002               	movlw	2
  1131  1A3E  1683               	bsf	3,5	;RP0=1, select bank1
  1132  1A3F  1303               	bcf	3,6	;RP1=0, select bank1
  1133  1A40  00E4               	movwf	??_main^(0+128)
  1134  1A41  0864               	movf	??_main^(0+128),w
  1135  1A42  00DE               	movwf	init_timer2@post^(0+128)
  1136  1A43  307D               	movlw	125
  1137  1A44  00E5               	movwf	(??_main+1)^(0+128)
  1138  1A45  0865               	movf	(??_main+1)^(0+128),w
  1139  1A46  00DF               	movwf	init_timer2@eoc^(0+128)
  1140  1A47  3002               	movlw	2
  1141  1A48  160A  158A  2107  160A  158A  	fcall	_init_timer2
  1142  1A4D                     l447:	
  1143                           ;main.c: 1384: while(1);
  1144                           
  1145  1A4D  2A4D               	goto	l447
  1146  1A4E                     __end_of_main:	
  1147                           
  1148                           	psect	text1
  1149  1886                     __ptext1:	
  1150 ;; *************** function _uart_init *****************
  1151 ;; Defined at:
  1152 ;;		line 103 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    4
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _uart_init
  1182  1886                     _uart_init:	
  1183                           
  1184                           ;main.c: 104: PIE1bits.RCIE = 1;
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _uart_init: [wreg+status,2]
  1188  1886  1683               	bsf	3,5	;RP0=1, select bank1
  1189  1887  1303               	bcf	3,6	;RP1=0, select bank1
  1190  1888  168C               	bsf	12,5	;volatile
  1191                           
  1192                           ;main.c: 105: PIE1bits.TXIE = 0;
  1193  1889  120C               	bcf	12,4	;volatile
  1194                           
  1195                           ;main.c: 106: TXSTAbits.BRGH = 1;
  1196  188A  1518               	bsf	24,2	;volatile
  1197                           
  1198                           ;main.c: 107: BAUDCTLbits.BRG16 = 0;
  1199  188B  1683               	bsf	3,5	;RP0=1, select bank3
  1200  188C  1703               	bsf	3,6	;RP1=1, select bank3
  1201  188D  1187               	bcf	7,3	;volatile
  1202                           
  1203                           ;main.c: 110: SPBRGH = 0x00;
  1204  188E  1683               	bsf	3,5	;RP0=1, select bank1
  1205  188F  1303               	bcf	3,6	;RP1=0, select bank1
  1206  1890  019A               	clrf	26	;volatile
  1207                           
  1208                           ;main.c: 112: SPBRG = 0x33;
  1209  1891  3033               	movlw	51
  1210  1892  0099               	movwf	25	;volatile
  1211                           
  1212                           ;main.c: 114: TXSTAbits.SYNC = 0;
  1213  1893  1218               	bcf	24,4	;volatile
  1214                           
  1215                           ;main.c: 115: RCSTAbits.SPEN = 1;
  1216  1894  1283               	bcf	3,5	;RP0=0, select bank0
  1217  1895  1303               	bcf	3,6	;RP1=0, select bank0
  1218  1896  1798               	bsf	24,7	;volatile
  1219                           
  1220                           ;main.c: 116: TXSTAbits.TXEN = 1;
  1221  1897  1683               	bsf	3,5	;RP0=1, select bank1
  1222  1898  1303               	bcf	3,6	;RP1=0, select bank1
  1223  1899  1698               	bsf	24,5	;volatile
  1224                           
  1225                           ;main.c: 117: RCSTAbits.CREN = 1;
  1226  189A  1283               	bcf	3,5	;RP0=0, select bank0
  1227  189B  1303               	bcf	3,6	;RP1=0, select bank0
  1228  189C  1618               	bsf	24,4	;volatile
  1229  189D  0008               	return
  1230  189E                     __end_of_uart_init:	
  1231                           
  1232                           	psect	text2
  1233  1907                     __ptext2:	
  1234 ;; *************** function _init_timer2 *****************
  1235 ;; Defined at:
  1236 ;;		line 126 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  pre             1    wreg     unsigned char 
  1239 ;;  post            1    0[BANK1 ] unsigned char 
  1240 ;;  eoc             1    1[BANK1 ] unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  pre             1    4[BANK1 ] unsigned char 
  1243 ;;  sfr             1    5[BANK1 ] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       2       0       0
  1254 ;;      Locals:         0       0       2       0       0
  1255 ;;      Temps:          0       0       2       0       0
  1256 ;;      Totals:         0       0       6       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _init_timer2
  1269  1907                     _init_timer2:	
  1270                           
  1271                           ;incstack = 0
  1272                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  1273                           ;init_timer2@pre stored from wreg
  1274  1907  1683               	bsf	3,5	;RP0=1, select bank1
  1275  1908  1303               	bcf	3,6	;RP1=0, select bank1
  1276  1909  00E2               	movwf	init_timer2@pre^(0+128)
  1277                           
  1278                           ;main.c: 127: unsigned char sfr = 0x00;
  1279  190A  01E3               	clrf	init_timer2@sfr^(0+128)
  1280                           
  1281                           ;main.c: 128: PIR1bits.TMR2IF = 0;
  1282  190B  1283               	bcf	3,5	;RP0=0, select bank0
  1283  190C  1303               	bcf	3,6	;RP1=0, select bank0
  1284  190D  108C               	bcf	12,1	;volatile
  1285                           
  1286                           ;main.c: 129: PR2 = eoc;
  1287  190E  1683               	bsf	3,5	;RP0=1, select bank1
  1288  190F  1303               	bcf	3,6	;RP1=0, select bank1
  1289  1910  085F               	movf	init_timer2@eoc^(0+128),w
  1290  1911  0092               	movwf	18	;volatile
  1291                           
  1292                           ;main.c: 130: sfr = ((post-1) << 3) & 0x78;
  1293  1912  085E               	movf	init_timer2@post^(0+128),w
  1294  1913  00E0               	movwf	??_init_timer2^(0+128)
  1295  1914  3002               	movlw	2
  1296  1915                     u3435:	
  1297  1915  1003               	clrc
  1298  1916  0DE0               	rlf	??_init_timer2^(0+128),f
  1299  1917  3EFF               	addlw	-1
  1300  1918  1D03               	skipz
  1301  1919  2915               	goto	u3435
  1302  191A  1003               	clrc
  1303  191B  0D60               	rlf	??_init_timer2^(0+128),w
  1304  191C  3EF8               	addlw	248
  1305  191D  3978               	andlw	120
  1306  191E  00E1               	movwf	(??_init_timer2+1)^(0+128)
  1307  191F  0861               	movf	(??_init_timer2+1)^(0+128),w
  1308  1920  00E3               	movwf	init_timer2@sfr^(0+128)
  1309                           
  1310                           ;main.c: 131: sfr += 4;
  1311  1921  3004               	movlw	4
  1312  1922  00E0               	movwf	??_init_timer2^(0+128)
  1313  1923  0860               	movf	??_init_timer2^(0+128),w
  1314  1924  07E3               	addwf	init_timer2@sfr^(0+128),f
  1315                           
  1316                           ;main.c: 132: sfr += pre;
  1317  1925  0862               	movf	init_timer2@pre^(0+128),w
  1318  1926  00E0               	movwf	??_init_timer2^(0+128)
  1319  1927  0860               	movf	??_init_timer2^(0+128),w
  1320  1928  07E3               	addwf	init_timer2@sfr^(0+128),f
  1321                           
  1322                           ;main.c: 133: T2CON = sfr;
  1323  1929  0863               	movf	init_timer2@sfr^(0+128),w
  1324  192A  1283               	bcf	3,5	;RP0=0, select bank0
  1325  192B  1303               	bcf	3,6	;RP1=0, select bank0
  1326  192C  0092               	movwf	18	;volatile
  1327                           
  1328                           ;main.c: 134: PIE1bits.TMR2IE = 1;
  1329  192D  1683               	bsf	3,5	;RP0=1, select bank1
  1330  192E  1303               	bcf	3,6	;RP1=0, select bank1
  1331  192F  148C               	bsf	12,1	;volatile
  1332  1930  0008               	return
  1333  1931                     __end_of_init_timer2:	
  1334                           
  1335                           	psect	text3
  1336  0824                     __ptext3:	
  1337 ;; *************** function _init_stack *****************
  1338 ;; Defined at:
  1339 ;;		line 69 in file "main.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          0       0       1       0       0
  1356 ;;      Totals:         0       0       1       0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    4
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _init_stack
  1369  0824                     _init_stack:	
  1370                           
  1371                           ;main.c: 73: link_tx.MAC_s[0] = 0x00; link_tx.MAC_s[1] = 0x1E; link_tx.MAC_s[2] = 0xE3;
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _init_stack: [wreg+status,2]
  1375  0824  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0825  1303               	bcf	3,6	;RP1=0, select bank1
  1377  0826  01A6               	clrf	(_link_tx^(0+128)+6)
  1378  0827  301E               	movlw	30
  1379  0828  00DE               	movwf	??_init_stack^(0+128)
  1380  0829  085E               	movf	??_init_stack^(0+128),w
  1381  082A  00A7               	movwf	(_link_tx^(0+128)+7)
  1382  082B  30E3               	movlw	227
  1383  082C  00DE               	movwf	??_init_stack^(0+128)
  1384  082D  085E               	movf	??_init_stack^(0+128),w
  1385  082E  00A8               	movwf	(_link_tx^(0+128)+8)
  1386                           
  1387                           ;main.c: 74: link_tx.MAC_s[3] = 0x80; link_tx.MAC_s[4] = 0x0A; link_tx.MAC_s[5] = 0xA4;
  1388  082F  3080               	movlw	128
  1389  0830  00DE               	movwf	??_init_stack^(0+128)
  1390  0831  085E               	movf	??_init_stack^(0+128),w
  1391  0832  00A9               	movwf	(_link_tx^(0+128)+9)
  1392  0833  300A               	movlw	10
  1393  0834  00DE               	movwf	??_init_stack^(0+128)
  1394  0835  085E               	movf	??_init_stack^(0+128),w
  1395  0836  00AA               	movwf	(_link_tx^(0+128)+10)
  1396  0837  30A4               	movlw	164
  1397  0838  00DE               	movwf	??_init_stack^(0+128)
  1398  0839  085E               	movf	??_init_stack^(0+128),w
  1399  083A  00AB               	movwf	(_link_tx^(0+128)+11)
  1400                           
  1401                           ;main.c: 77: ip_tx.ver_ihl = 0x45;
  1402  083B  3045               	movlw	69
  1403  083C  00DE               	movwf	??_init_stack^(0+128)
  1404  083D  085E               	movf	??_init_stack^(0+128),w
  1405  083E  00C3               	movwf	_ip_tx^(0+128)
  1406                           
  1407                           ;main.c: 78: ip_tx.dscp_ecn = 0x00;
  1408  083F  01C4               	clrf	(_ip_tx^(0+128)+1)
  1409                           
  1410                           ;main.c: 79: ip_tx.total_length[0] = 0 ; ip_tx.total_length[1] = 0;
  1411  0840  01C5               	clrf	(_ip_tx^(0+128)+2)
  1412  0841  01C6               	clrf	(_ip_tx^(0+128)+3)
  1413                           
  1414                           ;main.c: 80: ip_tx.id[0] = 0; ip_tx.id[1] = 0;
  1415  0842  01C7               	clrf	(_ip_tx^(0+128)+4)
  1416  0843  01C8               	clrf	(_ip_tx^(0+128)+5)
  1417                           
  1418                           ;main.c: 81: ip_tx.flags_n_offset[0] = 0x40; ip_tx.flags_n_offset[1] = 0x00;
  1419  0844  3040               	movlw	64
  1420  0845  00DE               	movwf	??_init_stack^(0+128)
  1421  0846  085E               	movf	??_init_stack^(0+128),w
  1422  0847  00C9               	movwf	(_ip_tx^(0+128)+6)
  1423  0848  01CA               	clrf	(_ip_tx^(0+128)+7)
  1424                           
  1425                           ;main.c: 82: ip_tx.ttl = 0x80;
  1426  0849  3080               	movlw	128
  1427  084A  00DE               	movwf	??_init_stack^(0+128)
  1428  084B  085E               	movf	??_init_stack^(0+128),w
  1429  084C  00CB               	movwf	(_ip_tx^(0+128)+8)
  1430                           
  1431                           ;main.c: 83: ip_tx.protocol = 0x06;
  1432  084D  3006               	movlw	6
  1433  084E  00DE               	movwf	??_init_stack^(0+128)
  1434  084F  085E               	movf	??_init_stack^(0+128),w
  1435  0850  00CC               	movwf	(_ip_tx^(0+128)+9)
  1436                           
  1437                           ;main.c: 84: ip_tx.IP_s[0] = 10; ip_tx.IP_s[1] = 1; ip_tx.IP_s[2] = 109; ip_tx.IP_s[3] =
      +                           28;
  1438  0851  300A               	movlw	10
  1439  0852  00DE               	movwf	??_init_stack^(0+128)
  1440  0853  085E               	movf	??_init_stack^(0+128),w
  1441  0854  00CF               	movwf	(_ip_tx^(0+128)+12)
  1442  0855  01D0               	clrf	(_ip_tx^(0+128)+13)
  1443  0856  0AD0               	incf	(_ip_tx^(0+128)+13),f
  1444  0857  306D               	movlw	109
  1445  0858  00DE               	movwf	??_init_stack^(0+128)
  1446  0859  085E               	movf	??_init_stack^(0+128),w
  1447  085A  00D1               	movwf	(_ip_tx^(0+128)+14)
  1448  085B  301C               	movlw	28
  1449  085C  00DE               	movwf	??_init_stack^(0+128)
  1450  085D  085E               	movf	??_init_stack^(0+128),w
  1451  085E  00D2               	movwf	(_ip_tx^(0+128)+15)
  1452                           
  1453                           ;main.c: 87: udp_tx.PORT_d[0] = 24; udp_tx.PORT_d[1] = 24;
  1454  085F  3018               	movlw	24
  1455  0860  00DE               	movwf	??_init_stack^(0+128)
  1456  0861  085E               	movf	??_init_stack^(0+128),w
  1457  0862  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0863  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0864  00DD               	movwf	_udp_tx+2
  1460  0865  3018               	movlw	24
  1461  0866  1683               	bsf	3,5	;RP0=1, select bank1
  1462  0867  1303               	bcf	3,6	;RP1=0, select bank1
  1463  0868  00DE               	movwf	??_init_stack^(0+128)
  1464  0869  085E               	movf	??_init_stack^(0+128),w
  1465  086A  1283               	bcf	3,5	;RP0=0, select bank0
  1466  086B  1303               	bcf	3,6	;RP1=0, select bank0
  1467  086C  00DE               	movwf	_udp_tx+3
  1468                           
  1469                           ;main.c: 88: udp_tx.PORT_s[0] = 24; udp_tx.PORT_s[1] = 24;
  1470  086D  3018               	movlw	24
  1471  086E  1683               	bsf	3,5	;RP0=1, select bank1
  1472  086F  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0870  00DE               	movwf	??_init_stack^(0+128)
  1474  0871  085E               	movf	??_init_stack^(0+128),w
  1475  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0874  00DB               	movwf	_udp_tx
  1478  0875  3018               	movlw	24
  1479  0876  1683               	bsf	3,5	;RP0=1, select bank1
  1480  0877  1303               	bcf	3,6	;RP1=0, select bank1
  1481  0878  00DE               	movwf	??_init_stack^(0+128)
  1482  0879  085E               	movf	??_init_stack^(0+128),w
  1483  087A  1283               	bcf	3,5	;RP0=0, select bank0
  1484  087B  1303               	bcf	3,6	;RP1=0, select bank0
  1485  087C  00DC               	movwf	_udp_tx+1
  1486                           
  1487                           ;main.c: 89: udp_tx.flag = 0;
  1488  087D  01E1               	clrf	_udp_tx+6
  1489                           
  1490                           ;main.c: 92: ping_echo.checksum = 0x0000;
  1491  087E  1683               	bsf	3,5	;RP0=1, select bank1
  1492  087F  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0880  01D7               	clrf	_ping_echo^(0+128)
  1494  0881  01D8               	clrf	(_ping_echo+1)^(0+128)
  1495                           
  1496                           ;main.c: 93: tcp_tx.PORT_s[0] = 0x09;
  1497  0882  3009               	movlw	9
  1498  0883  00DE               	movwf	??_init_stack^(0+128)
  1499  0884  085E               	movf	??_init_stack^(0+128),w
  1500  0885  00AE               	movwf	_tcp_tx^(0+128)
  1501                           
  1502                           ;main.c: 94: tcp_tx.PORT_s[1] = 0x78;
  1503  0886  3078               	movlw	120
  1504  0887  00DE               	movwf	??_init_stack^(0+128)
  1505  0888  085E               	movf	??_init_stack^(0+128),w
  1506  0889  00AF               	movwf	(_tcp_tx^(0+128)+1)
  1507                           
  1508                           ;main.c: 95: tcp_tx.seq_num[0] = 0; tcp_tx.seq_num[1] = 0; tcp_tx.seq_num[2] = 0; tcp_tx
      +                          .seq_num[3] = 0;
  1509  088A  01B2               	clrf	(_tcp_tx^(0+128)+4)
  1510  088B  01B3               	clrf	(_tcp_tx^(0+128)+5)
  1511  088C  01B4               	clrf	(_tcp_tx^(0+128)+6)
  1512  088D  01B5               	clrf	(_tcp_tx^(0+128)+7)
  1513                           
  1514                           ;main.c: 97: tcp_tx.offset_n_flags[0] = 0x50;
  1515  088E  3050               	movlw	80
  1516  088F  00DE               	movwf	??_init_stack^(0+128)
  1517  0890  085E               	movf	??_init_stack^(0+128),w
  1518  0891  00BA               	movwf	(_tcp_tx^(0+128)+12)
  1519                           
  1520                           ;main.c: 98: tcp_tx.window[0] = 0x00; tcp_tx.window[1] = 25;
  1521  0892  01BC               	clrf	(_tcp_tx^(0+128)+14)
  1522  0893  3019               	movlw	25
  1523  0894  00DE               	movwf	??_init_stack^(0+128)
  1524  0895  085E               	movf	??_init_stack^(0+128),w
  1525  0896  00BD               	movwf	(_tcp_tx^(0+128)+15)
  1526                           
  1527                           ;main.c: 99: tcp_tx.urg_pointer[0] = 0x00; tcp_tx.urg_pointer[1] = 0x00;
  1528  0897  01C0               	clrf	(_tcp_tx^(0+128)+18)
  1529  0898  01C1               	clrf	(_tcp_tx^(0+128)+19)
  1530                           
  1531                           ;main.c: 100: tcp_tx.status = 0;
  1532  0899  01C2               	clrf	(_tcp_tx^(0+128)+20)
  1533  089A  0008               	return
  1534  089B                     __end_of_init_stack:	
  1535                           
  1536                           	psect	text4
  1537  186F                     __ptext4:	
  1538 ;; *************** function _init_spi *****************
  1539 ;; Defined at:
  1540 ;;		line 159 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		None
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    4
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _init_spi
  1570  186F                     _init_spi:	
  1571                           
  1572                           ;main.c: 160: SSPSTATbits.SMP = 0;
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _init_spi: []
  1576  186F  1683               	bsf	3,5	;RP0=1, select bank1
  1577  1870  1303               	bcf	3,6	;RP1=0, select bank1
  1578  1871  1394               	bcf	20,7	;volatile
  1579                           
  1580                           ;main.c: 162: SSPSTATbits.CKE = 1;
  1581  1872  1714               	bsf	20,6	;volatile
  1582                           
  1583                           ;main.c: 163: SSPCONbits.CKP = 0;
  1584  1873  1283               	bcf	3,5	;RP0=0, select bank0
  1585  1874  1303               	bcf	3,6	;RP1=0, select bank0
  1586  1875  1214               	bcf	20,4	;volatile
  1587                           
  1588                           ;main.c: 164: TRISBbits.TRISB2 = 0;
  1589  1876  1683               	bsf	3,5	;RP0=1, select bank1
  1590  1877  1303               	bcf	3,6	;RP1=0, select bank1
  1591  1878  1106               	bcf	6,2	;volatile
  1592                           
  1593                           ;main.c: 165: TRISCbits.TRISC3 = 0;
  1594  1879  1187               	bcf	7,3	;volatile
  1595                           
  1596                           ;main.c: 166: TRISCbits.TRISC4 = 1;
  1597  187A  1607               	bsf	7,4	;volatile
  1598                           
  1599                           ;main.c: 167: TRISCbits.TRISC5 = 0;
  1600  187B  1287               	bcf	7,5	;volatile
  1601                           
  1602                           ;main.c: 168: PORTBbits.RB2 = 1;
  1603  187C  1283               	bcf	3,5	;RP0=0, select bank0
  1604  187D  1303               	bcf	3,6	;RP1=0, select bank0
  1605  187E  1506               	bsf	6,2	;volatile
  1606                           
  1607                           ;main.c: 171: PIE1bits.SSPIE = 0;
  1608  187F  1683               	bsf	3,5	;RP0=1, select bank1
  1609  1880  1303               	bcf	3,6	;RP1=0, select bank1
  1610  1881  118C               	bcf	12,3	;volatile
  1611                           
  1612                           ;main.c: 172: SSPCONbits.SSPEN = 1;
  1613  1882  1283               	bcf	3,5	;RP0=0, select bank0
  1614  1883  1303               	bcf	3,6	;RP1=0, select bank0
  1615  1884  1694               	bsf	20,5	;volatile
  1616  1885  0008               	return
  1617  1886                     __end_of_init_spi:	
  1618                           
  1619                           	psect	text5
  1620  0A98                     __ptext5:	
  1621 ;; *************** function _isr *****************
  1622 ;; Defined at:
  1623 ;;		line 1075 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  i               1   53[BANK0 ] unsigned char 
  1628 ;;  i               1   52[BANK0 ] unsigned char 
  1629 ;;  i               1   45[BANK0 ] unsigned char 
  1630 ;;  i               1   44[BANK0 ] unsigned char 
  1631 ;;  i               1   56[BANK0 ] unsigned char 
  1632 ;;  i               1   55[BANK0 ] unsigned char 
  1633 ;;  adc             1   46[BANK0 ] unsigned char 
  1634 ;;  i               1   38[BANK0 ] unsigned char 
  1635 ;;  i               1   42[BANK0 ] unsigned char 
  1636 ;;  i               1   41[BANK0 ] unsigned char 
  1637 ;;  i               1   37[BANK0 ] unsigned char 
  1638 ;;  i               1   40[BANK0 ] unsigned char 
  1639 ;;  i               1   39[BANK0 ] unsigned char 
  1640 ;;  i               1   51[BANK0 ] unsigned char 
  1641 ;;  i               1   50[BANK0 ] unsigned char 
  1642 ;;  i               1   49[BANK0 ] unsigned char 
  1643 ;;  i               1   48[BANK0 ] unsigned char 
  1644 ;;  i               1   54[BANK0 ] unsigned char 
  1645 ;;  i               1   43[BANK0 ] unsigned char 
  1646 ;;  j               1   58[BANK0 ] unsigned char 
  1647 ;;  drop            1   57[BANK0 ] unsigned char 
  1648 ;;  int_vector      1   47[BANK0 ] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       0       0       0       0
  1659 ;;      Locals:         0      22       0       0       0
  1660 ;;      Temps:          0       8       0       0       0
  1661 ;;      Totals:         0      30       0       0       0
  1662 ;;Total ram usage:       30 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    3
  1665 ;; This function calls:
  1666 ;;		___awdiv
  1667 ;;		___bmul
  1668 ;;		___lbdiv
  1669 ;;		_arp_msg
  1670 ;;		_config_eth
  1671 ;;		_echo_ping
  1672 ;;		_printf
  1673 ;;		_putch
  1674 ;;		_rw_eeprom
  1675 ;;		_rx_int
  1676 ;;		_spi
  1677 ;;		_tcp_msg
  1678 ;;		_tx_int
  1679 ;;		_udp_msg
  1680 ;; This function is called by:
  1681 ;;		Interrupt level 1
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _isr
  1687  0A98                     _isr:	
  1688                           
  1689                           ;main.c: 1077: if (PIR1bits.TMR2IF) {
  1690  0A98  1C8C               	btfss	12,1	;volatile
  1691  0A99  2E37               	goto	i1l5048
  1692                           
  1693                           ;main.c: 1078: PIR1bits.TMR2IF = 0;
  1694  0A9A  108C               	bcf	12,1	;volatile
  1695                           
  1696                           ;main.c: 1079: char int_vector;
  1697                           ;main.c: 1083: if (!PORTBbits.RB1) {
  1698  0A9B  1886               	btfsc	6,1	;volatile
  1699  0A9C  2D8D               	goto	i1l4974
  1700                           
  1701                           ;main.c: 1084: PORTBbits.RB2 = 0;
  1702  0A9D  1106               	bcf	6,2	;volatile
  1703                           
  1704                           ;main.c: 1085: spi(0x1C, 1);
  1705  0A9E  01F0               	clrf	spi@rw
  1706  0A9F  0AF0               	incf	spi@rw,f
  1707  0AA0  301C               	movlw	28
  1708  0AA1  160A  158A  21B5  120A  158A  	fcall	_spi
  1709                           
  1710                           ;main.c: 1086: int_vector = spi(0, 0);
  1711  0AA6  01F0               	clrf	spi@rw
  1712  0AA7  3000               	movlw	0
  1713  0AA8  160A  158A  21B5  120A  158A  	fcall	_spi
  1714  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0AAF  00BD               	movwf	??_isr
  1717  0AB0  083D               	movf	??_isr,w
  1718  0AB1  00CF               	movwf	isr@int_vector
  1719                           
  1720                           ;main.c: 1087: PORTBbits.RB2 = 1;
  1721  0AB2  1506               	bsf	6,2	;volatile
  1722                           
  1723                           ;main.c: 1088: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1724  0AB3  3005               	movlw	5
  1725  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0AB6  00BD               	movwf	??_isr
  1728  0AB7                     u471_27:	
  1729  0AB7  0BBD               	decfsz	??_isr,f
  1730  0AB8  2AB7               	goto	u471_27
  1731  0AB9  2ABA               	nop2
  1732                           
  1733                           ;main.c: 1089: if (int_vector & 0x40) {
  1734  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0ABC  1F4F               	btfss	isr@int_vector,6
  1737  0ABD  2AC4               	goto	i1l4756
  1738                           
  1739                           ;main.c: 1090: rx_int(0);
  1740  0ABE  3000               	movlw	0
  1741  0ABF  160A  158A  2581  120A  158A  	fcall	_rx_int
  1742  0AC4                     i1l4756:	
  1743                           
  1744                           ;main.c: 1091: }
  1745                           ;main.c: 1092: if (int_vector & 0x08) {
  1746  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0AC6  1DCF               	btfss	isr@int_vector,3
  1749  0AC7  2ACD               	goto	i1l342
  1750                           
  1751                           ;main.c: 1093: tx_int();
  1752  0AC8  120A  118A  27C5  120A  158A  	fcall	_tx_int
  1753  0ACD                     i1l342:	
  1754                           
  1755                           ;main.c: 1097: }
  1756                           ;main.c: 1098: if (int_vector & 0x01) {
  1757  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0ACF  1C4F               	btfss	isr@int_vector,0
  1760  0AD0  2AD7               	goto	i1l4764
  1761                           
  1762                           ;main.c: 1100: rx_int(1);
  1763  0AD1  3001               	movlw	1
  1764  0AD2  160A  158A  2581  120A  158A  	fcall	_rx_int
  1765  0AD7                     i1l4764:	
  1766                           
  1767                           ;main.c: 1101: }
  1768                           ;main.c: 1103: if(arp_type == 1) {
  1769  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0AD9  036A               	decf	_arp_type,w
  1772  0ADA  1D03               	btfss	3,2
  1773  0ADB  2B15               	goto	i1l4792
  1774                           
  1775                           ;main.c: 1104: arp_type = 0;
  1776  0ADC  01EA               	clrf	_arp_type
  1777                           
  1778                           ;main.c: 1105: for (char i=0;i<6;i++) {
  1779  0ADD  01D0               	clrf	isr@i
  1780  0ADE  3006               	movlw	6
  1781  0ADF  0250               	subwf	isr@i,w
  1782  0AE0  1803               	btfsc	3,0
  1783  0AE1  2AF6               	goto	i1l4778
  1784  0AE2                     i1l4772:	
  1785                           
  1786                           ;main.c: 1106: link_tx.MAC_d[i] = link_rx.MAC_s[i];
  1787  0AE2  0850               	movf	isr@i,w
  1788  0AE3  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  1789  0AE4  0084               	movwf	4
  1790  0AE5  1783               	bsf	3,7	;select IRP bank3
  1791  0AE6  0800               	movf	0,w
  1792  0AE7  00BD               	movwf	??_isr
  1793  0AE8  0850               	movf	isr@i,w
  1794  0AE9  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  1795  0AEA  0084               	movwf	4
  1796  0AEB  083D               	movf	??_isr,w
  1797  0AEC  1383               	bcf	3,7	;select IRP bank1
  1798  0AED  0080               	movwf	0
  1799  0AEE  3001               	movlw	1
  1800  0AEF  00BD               	movwf	??_isr
  1801  0AF0  083D               	movf	??_isr,w
  1802  0AF1  07D0               	addwf	isr@i,f
  1803  0AF2  3006               	movlw	6
  1804  0AF3  0250               	subwf	isr@i,w
  1805  0AF4  1C03               	skipc
  1806  0AF5  2AE2               	goto	i1l4772
  1807  0AF6                     i1l4778:	
  1808                           
  1809                           ;main.c: 1107: }
  1810                           ;main.c: 1108: for (char i=0;i<4;i++) {
  1811  0AF6  01D1               	clrf	isr@i_827
  1812  0AF7  3004               	movlw	4
  1813  0AF8  0251               	subwf	isr@i_827,w
  1814  0AF9  1803               	btfsc	3,0
  1815  0AFA  2B0F               	goto	i1l4790
  1816  0AFB                     i1l4784:	
  1817                           
  1818                           ;main.c: 1109: ip_tx.IP_d[i] = ip_rx.IP_s[i];
  1819  0AFB  0851               	movf	isr@i_827,w
  1820  0AFC  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  1821  0AFD  0084               	movwf	4
  1822  0AFE  1783               	bsf	3,7	;select IRP bank3
  1823  0AFF  0800               	movf	0,w
  1824  0B00  00BD               	movwf	??_isr
  1825  0B01  0851               	movf	isr@i_827,w
  1826  0B02  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  1827  0B03  0084               	movwf	4
  1828  0B04  083D               	movf	??_isr,w
  1829  0B05  1383               	bcf	3,7	;select IRP bank1
  1830  0B06  0080               	movwf	0
  1831  0B07  3001               	movlw	1
  1832  0B08  00BD               	movwf	??_isr
  1833  0B09  083D               	movf	??_isr,w
  1834  0B0A  07D1               	addwf	isr@i_827,f
  1835  0B0B  3004               	movlw	4
  1836  0B0C  0251               	subwf	isr@i_827,w
  1837  0B0D  1C03               	skipc
  1838  0B0E  2AFB               	goto	i1l4784
  1839  0B0F                     i1l4790:	
  1840                           
  1841                           ;main.c: 1110: }
  1842                           ;main.c: 1111: arp_msg(2);
  1843  0B0F  3002               	movlw	2
  1844  0B10  120A  158A  209B  120A  158A  	fcall	_arp_msg
  1845  0B15                     i1l4792:	
  1846                           
  1847                           ;main.c: 1112: }
  1848                           ;main.c: 1114: if (ping) {
  1849  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0B17  1CEC               	btfss	_ping/(0+8),_ping& (0+7)
  1852  0B18  2B50               	goto	i1l4820
  1853                           
  1854                           ;main.c: 1115: for (char i=0;i<6;i++) {
  1855  0B19  01D2               	clrf	isr@i_829
  1856  0B1A  3006               	movlw	6
  1857  0B1B  0252               	subwf	isr@i_829,w
  1858  0B1C  1803               	btfsc	3,0
  1859  0B1D  2B32               	goto	i1l4806
  1860  0B1E                     i1l4800:	
  1861                           
  1862                           ;main.c: 1116: link_tx.MAC_d[i] = link_rx.MAC_s[i];
  1863  0B1E  0852               	movf	isr@i_829,w
  1864  0B1F  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  1865  0B20  0084               	movwf	4
  1866  0B21  1783               	bsf	3,7	;select IRP bank3
  1867  0B22  0800               	movf	0,w
  1868  0B23  00BD               	movwf	??_isr
  1869  0B24  0852               	movf	isr@i_829,w
  1870  0B25  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  1871  0B26  0084               	movwf	4
  1872  0B27  083D               	movf	??_isr,w
  1873  0B28  1383               	bcf	3,7	;select IRP bank1
  1874  0B29  0080               	movwf	0
  1875  0B2A  3001               	movlw	1
  1876  0B2B  00BD               	movwf	??_isr
  1877  0B2C  083D               	movf	??_isr,w
  1878  0B2D  07D2               	addwf	isr@i_829,f
  1879  0B2E  3006               	movlw	6
  1880  0B2F  0252               	subwf	isr@i_829,w
  1881  0B30  1C03               	skipc
  1882  0B31  2B1E               	goto	i1l4800
  1883  0B32                     i1l4806:	
  1884                           
  1885                           ;main.c: 1117: }
  1886                           ;main.c: 1118: for (char i=0;i<4;i++) {
  1887  0B32  01D3               	clrf	isr@i_830
  1888  0B33  3004               	movlw	4
  1889  0B34  0253               	subwf	isr@i_830,w
  1890  0B35  1803               	btfsc	3,0
  1891  0B36  2B4B               	goto	i1l4818
  1892  0B37                     i1l4812:	
  1893                           
  1894                           ;main.c: 1119: ip_tx.IP_d[i] = ip_rx.IP_s[i];
  1895  0B37  0853               	movf	isr@i_830,w
  1896  0B38  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  1897  0B39  0084               	movwf	4
  1898  0B3A  1783               	bsf	3,7	;select IRP bank3
  1899  0B3B  0800               	movf	0,w
  1900  0B3C  00BD               	movwf	??_isr
  1901  0B3D  0853               	movf	isr@i_830,w
  1902  0B3E  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  1903  0B3F  0084               	movwf	4
  1904  0B40  083D               	movf	??_isr,w
  1905  0B41  1383               	bcf	3,7	;select IRP bank1
  1906  0B42  0080               	movwf	0
  1907  0B43  3001               	movlw	1
  1908  0B44  00BD               	movwf	??_isr
  1909  0B45  083D               	movf	??_isr,w
  1910  0B46  07D3               	addwf	isr@i_830,f
  1911  0B47  3004               	movlw	4
  1912  0B48  0253               	subwf	isr@i_830,w
  1913  0B49  1C03               	skipc
  1914  0B4A  2B37               	goto	i1l4812
  1915  0B4B                     i1l4818:	
  1916                           
  1917                           ;main.c: 1120: }
  1918                           ;main.c: 1121: echo_ping();
  1919  0B4B  160A  158A  266B  120A  158A  	fcall	_echo_ping
  1920  0B50                     i1l4820:	
  1921                           
  1922                           ;main.c: 1122: }
  1923                           ;main.c: 1124: if (udp_tx.flag) {
  1924  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0B52  0861               	movf	_udp_tx+6,w
  1927  0B53  1903               	btfsc	3,2
  1928  0B54  2D77               	goto	i1l4972
  1929                           
  1930                           ;main.c: 1125: udp_tx.flag = 0;
  1931  0B55  01E1               	clrf	_udp_tx+6
  1932                           
  1933                           ;main.c: 1126: putch('U');
  1934  0B56  3055               	movlw	85
  1935  0B57  160A  158A  2056  120A  158A  	fcall	_putch
  1936                           
  1937                           ;main.c: 1127: for (char i=0;i<6;i++) {
  1938  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0B5E  01C7               	clrf	isr@i_833
  1941  0B5F  3006               	movlw	6
  1942  0B60  0247               	subwf	isr@i_833,w
  1943  0B61  1803               	btfsc	3,0
  1944  0B62  2B7E               	goto	i1l4838
  1945  0B63                     i1l4832:	
  1946                           
  1947                           ;main.c: 1128: printf("%X:",link_rx.MAC_s[i]);
  1948  0B63  0847               	movf	isr@i_833,w
  1949  0B64  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  1950  0B65  0084               	movwf	4
  1951  0B66  1783               	bsf	3,7	;select IRP bank3
  1952  0B67  0800               	movf	0,w
  1953  0B68  00BD               	movwf	??_isr
  1954  0B69  01BE               	clrf	??_isr+1
  1955  0B6A  083D               	movf	??_isr,w
  1956  0B6B  00F8               	movwf	?_printf
  1957  0B6C  083E               	movf	??_isr+1,w
  1958  0B6D  00F9               	movwf	?_printf+1
  1959  0B6E  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1960  0B6F  160A  158A  2422  120A  158A  	fcall	_printf
  1961  0B74  3001               	movlw	1
  1962  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0B77  00BD               	movwf	??_isr
  1965  0B78  083D               	movf	??_isr,w
  1966  0B79  07C7               	addwf	isr@i_833,f
  1967  0B7A  3006               	movlw	6
  1968  0B7B  0247               	subwf	isr@i_833,w
  1969  0B7C  1C03               	skipc
  1970  0B7D  2B63               	goto	i1l4832
  1971  0B7E                     i1l4838:	
  1972                           
  1973                           ;main.c: 1129: }
  1974                           ;main.c: 1130: for (char i=0;i<4;i++) {
  1975  0B7E  01C8               	clrf	isr@i_835
  1976  0B7F  3004               	movlw	4
  1977  0B80  0248               	subwf	isr@i_835,w
  1978  0B81  1803               	btfsc	3,0
  1979  0B82  2B9E               	goto	i1l4850
  1980  0B83                     i1l4844:	
  1981                           
  1982                           ;main.c: 1131: printf("%X:",ip_rx.IP_s[i]);
  1983  0B83  0848               	movf	isr@i_835,w
  1984  0B84  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  1985  0B85  0084               	movwf	4
  1986  0B86  1783               	bsf	3,7	;select IRP bank3
  1987  0B87  0800               	movf	0,w
  1988  0B88  00BD               	movwf	??_isr
  1989  0B89  01BE               	clrf	??_isr+1
  1990  0B8A  083D               	movf	??_isr,w
  1991  0B8B  00F8               	movwf	?_printf
  1992  0B8C  083E               	movf	??_isr+1,w
  1993  0B8D  00F9               	movwf	?_printf+1
  1994  0B8E  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1995  0B8F  160A  158A  2422  120A  158A  	fcall	_printf
  1996  0B94  3001               	movlw	1
  1997  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0B97  00BD               	movwf	??_isr
  2000  0B98  083D               	movf	??_isr,w
  2001  0B99  07C8               	addwf	isr@i_835,f
  2002  0B9A  3004               	movlw	4
  2003  0B9B  0248               	subwf	isr@i_835,w
  2004  0B9C  1C03               	skipc
  2005  0B9D  2B83               	goto	i1l4844
  2006  0B9E                     i1l4850:	
  2007                           
  2008                           ;main.c: 1132: }
  2009                           ;main.c: 1133: for (char i=0;i<udp_tx.length[1];i++) {
  2010  0B9E  01C5               	clrf	isr@i_837
  2011  0B9F                     i1l4856:	
  2012  0B9F  0860               	movf	_udp_tx+5,w
  2013  0BA0  0245               	subwf	isr@i_837,w
  2014  0BA1  1803               	btfsc	3,0
  2015  0BA2  2BB4               	goto	i1l4858
  2016                           
  2017                           ;main.c: 1134: putch(payload[i]);
  2018  0BA3  0845               	movf	isr@i_837,w
  2019  0BA4  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  2020  0BA5  0084               	movwf	4
  2021  0BA6  1783               	bsf	3,7	;select IRP bank2
  2022  0BA7  0800               	movf	0,w
  2023  0BA8  160A  158A  2056  120A  158A  	fcall	_putch
  2024  0BAD  3001               	movlw	1
  2025  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0BB0  00BD               	movwf	??_isr
  2028  0BB1  083D               	movf	??_isr,w
  2029  0BB2  07C5               	addwf	isr@i_837,f
  2030  0BB3  2B9F               	goto	i1l4856
  2031  0BB4                     i1l4858:	
  2032                           
  2033                           ;main.c: 1135: }
  2034                           ;main.c: 1136: putch('\n');
  2035  0BB4  300A               	movlw	10
  2036  0BB5  160A  158A  2056  120A  158A  	fcall	_putch
  2037                           
  2038                           ;main.c: 1137: }
  2039                           ;main.c: 1139: switch (tcp_tx.status) {
  2040  0BBA  2D77               	goto	i1l4972
  2041  0BBB                     i1l4860:	
  2042                           ;main.c: 1140: case 1:
  2043                           
  2044                           
  2045                           ;main.c: 1141: tcp_tx.offset_n_flags[1] = 0x12;
  2046  0BBB  3012               	movlw	18
  2047  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0BBE  00BD               	movwf	??_isr
  2050  0BBF  083D               	movf	??_isr,w
  2051  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0BC2  00BB               	movwf	(_tcp_tx^(0+128)+13)
  2054                           
  2055                           ;main.c: 1142: ack++;
  2056  0BC3  3001               	movlw	1
  2057  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0BC6  07E2               	addwf	_ack,f
  2060  0BC7  3000               	movlw	0
  2061  0BC8  1803               	skipnc
  2062  0BC9  3001               	movlw	1
  2063  0BCA  07E3               	addwf	_ack+1,f
  2064  0BCB  3000               	movlw	0
  2065  0BCC  1803               	skipnc
  2066  0BCD  3001               	movlw	1
  2067  0BCE  07E4               	addwf	_ack+2,f
  2068  0BCF  3000               	movlw	0
  2069  0BD0  1803               	skipnc
  2070  0BD1  3001               	movlw	1
  2071  0BD2  07E5               	addwf	_ack+3,f
  2072                           
  2073                           ;main.c: 1143: tcp_msg(0);
  2074  0BD3  3000               	movlw	0
  2075  0BD4  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  2076                           
  2077                           ;main.c: 1144: tcp_tx.status = 11;
  2078  0BD9  300B               	movlw	11
  2079  0BDA  2D4D               	goto	L3
  2080  0BDB                     i1l4866:	
  2081                           ;main.c: 1146: case 2:
  2082                           
  2083                           ;main.c: 1145: break;
  2084                           
  2085  0BDB  2D2C               	goto	i1l4956
  2086  0BDC                     i1l4868:	
  2087                           ;main.c: 1149: case 3:
  2088                           
  2089                           ;main.c: 1148: break;
  2090                           
  2091                           ;main.c: 1147: tcp_tx.status = 33;
  2092                           
  2093                           
  2094                           ;main.c: 1150: tcp_tx.status = 33;
  2095  0BDC  3021               	movlw	33
  2096  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0BDF  00BD               	movwf	??_isr
  2099  0BE0  083D               	movf	??_isr,w
  2100  0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0BE2  1303               	bcf	3,6	;RP1=0, select bank1
  2102  0BE3  00C2               	movwf	(_tcp_tx^(0+128)+20)
  2103                           
  2104                           ;main.c: 1151: tcp_tx.offset_n_flags[1] = 0x10;
  2105  0BE4  3010               	movlw	16
  2106  0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0BE7  00BD               	movwf	??_isr
  2109  0BE8  083D               	movf	??_isr,w
  2110  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0BEB  00BB               	movwf	(_tcp_tx^(0+128)+13)
  2113                           
  2114                           ;main.c: 1152: ack += ip_rx.total_length[1];
  2115  0BEC  1683               	bsf	3,5	;RP0=1, select bank3
  2116  0BED  1703               	bsf	3,6	;RP1=1, select bank3
  2117  0BEE  0841               	movf	(_ip_rx^(0+384)+3),w
  2118  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0BF1  00BD               	movwf	??_isr
  2121  0BF2  01BE               	clrf	??_isr+1
  2122  0BF3  01BF               	clrf	??_isr+2
  2123  0BF4  01C0               	clrf	??_isr+3
  2124  0BF5  083D               	movf	??_isr,w
  2125  0BF6  07E2               	addwf	_ack,f
  2126  0BF7  083E               	movf	??_isr+1,w
  2127  0BF8  1103               	clrz
  2128  0BF9  1803               	skipnc
  2129  0BFA  3E01               	addlw	1
  2130  0BFB  1D03               	btfss	3,2
  2131  0BFC  07E3               	addwf	_ack+1,f
  2132  0BFD  083F               	movf	??_isr+2,w
  2133  0BFE  1103               	clrz
  2134  0BFF  1803               	skipnc
  2135  0C00  3E01               	addlw	1
  2136  0C01  1D03               	btfss	3,2
  2137  0C02  07E4               	addwf	_ack+2,f
  2138  0C03  0840               	movf	??_isr+3,w
  2139  0C04  1103               	clrz
  2140  0C05  1803               	skipnc
  2141  0C06  3E01               	addlw	1
  2142  0C07  1D03               	btfss	3,2
  2143  0C08  07E5               	addwf	_ack+3,f
  2144                           
  2145                           ;main.c: 1153: tcp_msg(0);
  2146  0C09  3000               	movlw	0
  2147  0C0A  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  2148                           
  2149                           ;main.c: 1154: putch('T');
  2150  0C0F  3054               	movlw	84
  2151  0C10  160A  158A  2056  120A  158A  	fcall	_putch
  2152                           
  2153                           ;main.c: 1155: for (char i=0;i<6;i++) {
  2154  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0C17  01C9               	clrf	isr@i_839
  2157  0C18  3006               	movlw	6
  2158  0C19  0249               	subwf	isr@i_839,w
  2159  0C1A  1803               	btfsc	3,0
  2160  0C1B  2C37               	goto	i1l4886
  2161  0C1C                     i1l4880:	
  2162                           
  2163                           ;main.c: 1156: printf("%X:",link_rx.MAC_s[i]);
  2164  0C1C  0849               	movf	isr@i_839,w
  2165  0C1D  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  2166  0C1E  0084               	movwf	4
  2167  0C1F  1783               	bsf	3,7	;select IRP bank3
  2168  0C20  0800               	movf	0,w
  2169  0C21  00BD               	movwf	??_isr
  2170  0C22  01BE               	clrf	??_isr+1
  2171  0C23  083D               	movf	??_isr,w
  2172  0C24  00F8               	movwf	?_printf
  2173  0C25  083E               	movf	??_isr+1,w
  2174  0C26  00F9               	movwf	?_printf+1
  2175  0C27  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2176  0C28  160A  158A  2422  120A  158A  	fcall	_printf
  2177  0C2D  3001               	movlw	1
  2178  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0C30  00BD               	movwf	??_isr
  2181  0C31  083D               	movf	??_isr,w
  2182  0C32  07C9               	addwf	isr@i_839,f
  2183  0C33  3006               	movlw	6
  2184  0C34  0249               	subwf	isr@i_839,w
  2185  0C35  1C03               	skipc
  2186  0C36  2C1C               	goto	i1l4880
  2187  0C37                     i1l4886:	
  2188                           
  2189                           ;main.c: 1157: }
  2190                           ;main.c: 1158: for (char i=0;i<4;i++) {
  2191  0C37  01CA               	clrf	isr@i_841
  2192  0C38  3004               	movlw	4
  2193  0C39  024A               	subwf	isr@i_841,w
  2194  0C3A  1803               	btfsc	3,0
  2195  0C3B  2C57               	goto	i1l4898
  2196  0C3C                     i1l4892:	
  2197                           
  2198                           ;main.c: 1159: printf("%X:",ip_rx.IP_s[i]);
  2199  0C3C  084A               	movf	isr@i_841,w
  2200  0C3D  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  2201  0C3E  0084               	movwf	4
  2202  0C3F  1783               	bsf	3,7	;select IRP bank3
  2203  0C40  0800               	movf	0,w
  2204  0C41  00BD               	movwf	??_isr
  2205  0C42  01BE               	clrf	??_isr+1
  2206  0C43  083D               	movf	??_isr,w
  2207  0C44  00F8               	movwf	?_printf
  2208  0C45  083E               	movf	??_isr+1,w
  2209  0C46  00F9               	movwf	?_printf+1
  2210  0C47  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2211  0C48  160A  158A  2422  120A  158A  	fcall	_printf
  2212  0C4D  3001               	movlw	1
  2213  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0C50  00BD               	movwf	??_isr
  2216  0C51  083D               	movf	??_isr,w
  2217  0C52  07CA               	addwf	isr@i_841,f
  2218  0C53  3004               	movlw	4
  2219  0C54  024A               	subwf	isr@i_841,w
  2220  0C55  1C03               	skipc
  2221  0C56  2C3C               	goto	i1l4892
  2222  0C57                     i1l4898:	
  2223                           
  2224                           ;main.c: 1160: }
  2225                           ;main.c: 1161: for (char i=0;i<ip_rx.total_length[1];i++) {
  2226  0C57  01C6               	clrf	isr@i_843
  2227  0C58                     i1l4904:	
  2228  0C58  1683               	bsf	3,5	;RP0=1, select bank3
  2229  0C59  1703               	bsf	3,6	;RP1=1, select bank3
  2230  0C5A  0841               	movf	(_ip_rx^(0+384)+3),w
  2231  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0C5D  0246               	subwf	isr@i_843,w
  2234  0C5E  1803               	btfsc	3,0
  2235  0C5F  2C71               	goto	i1l4906
  2236                           
  2237                           ;main.c: 1162: putch(payload[i]);
  2238  0C60  0846               	movf	isr@i_843,w
  2239  0C61  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  2240  0C62  0084               	movwf	4
  2241  0C63  1783               	bsf	3,7	;select IRP bank2
  2242  0C64  0800               	movf	0,w
  2243  0C65  160A  158A  2056  120A  158A  	fcall	_putch
  2244  0C6A  3001               	movlw	1
  2245  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0C6D  00BD               	movwf	??_isr
  2248  0C6E  083D               	movf	??_isr,w
  2249  0C6F  07C6               	addwf	isr@i_843,f
  2250  0C70  2C58               	goto	i1l4904
  2251  0C71                     i1l4906:	
  2252                           
  2253                           ;main.c: 1163: }
  2254                           ;main.c: 1164: putch('\n');
  2255  0C71  300A               	movlw	10
  2256  0C72  160A  158A  2056  120A  158A  	fcall	_putch
  2257                           
  2258                           ;main.c: 1166: if (payload[0] == 'T') {
  2259  0C77  3054               	movlw	84
  2260  0C78  1283               	bcf	3,5	;RP0=0, select bank2
  2261  0C79  1703               	bsf	3,6	;RP1=1, select bank2
  2262  0C7A  0610               	xorwf	_payload^(0+256),w
  2263  0C7B  1D03               	btfss	3,2
  2264  0C7C  2D8D               	goto	i1l4974
  2265                           
  2266                           ;main.c: 1167: char adc;
  2267                           ;main.c: 1169: for (char i=0;i<6;i++) {
  2268  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0C7F  01D4               	clrf	isr@i_845
  2271  0C80  3006               	movlw	6
  2272  0C81  0254               	subwf	isr@i_845,w
  2273  0C82  1803               	btfsc	3,0
  2274  0C83  2C98               	goto	i1l4922
  2275  0C84                     i1l4916:	
  2276                           
  2277                           ;main.c: 1170: link_tx.MAC_d[i] = link_rx.MAC_s[i];
  2278  0C84  0854               	movf	isr@i_845,w
  2279  0C85  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  2280  0C86  0084               	movwf	4
  2281  0C87  1783               	bsf	3,7	;select IRP bank3
  2282  0C88  0800               	movf	0,w
  2283  0C89  00BD               	movwf	??_isr
  2284  0C8A  0854               	movf	isr@i_845,w
  2285  0C8B  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  2286  0C8C  0084               	movwf	4
  2287  0C8D  083D               	movf	??_isr,w
  2288  0C8E  1383               	bcf	3,7	;select IRP bank1
  2289  0C8F  0080               	movwf	0
  2290  0C90  3001               	movlw	1
  2291  0C91  00BD               	movwf	??_isr
  2292  0C92  083D               	movf	??_isr,w
  2293  0C93  07D4               	addwf	isr@i_845,f
  2294  0C94  3006               	movlw	6
  2295  0C95  0254               	subwf	isr@i_845,w
  2296  0C96  1C03               	skipc
  2297  0C97  2C84               	goto	i1l4916
  2298  0C98                     i1l4922:	
  2299                           
  2300                           ;main.c: 1171: }
  2301                           ;main.c: 1172: for (char i=0;i<4;i++) {
  2302  0C98  01D5               	clrf	isr@i_846
  2303  0C99  3004               	movlw	4
  2304  0C9A  0255               	subwf	isr@i_846,w
  2305  0C9B  1803               	btfsc	3,0
  2306  0C9C  2CB1               	goto	i1l378
  2307  0C9D                     i1l4928:	
  2308                           
  2309                           ;main.c: 1173: ip_tx.IP_d[i] = ip_rx.IP_s[i];
  2310  0C9D  0855               	movf	isr@i_846,w
  2311  0C9E  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  2312  0C9F  0084               	movwf	4
  2313  0CA0  1783               	bsf	3,7	;select IRP bank3
  2314  0CA1  0800               	movf	0,w
  2315  0CA2  00BD               	movwf	??_isr
  2316  0CA3  0855               	movf	isr@i_846,w
  2317  0CA4  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  2318  0CA5  0084               	movwf	4
  2319  0CA6  083D               	movf	??_isr,w
  2320  0CA7  1383               	bcf	3,7	;select IRP bank1
  2321  0CA8  0080               	movwf	0
  2322  0CA9  3001               	movlw	1
  2323  0CAA  00BD               	movwf	??_isr
  2324  0CAB  083D               	movf	??_isr,w
  2325  0CAC  07D5               	addwf	isr@i_846,f
  2326  0CAD  3004               	movlw	4
  2327  0CAE  0255               	subwf	isr@i_846,w
  2328  0CAF  1C03               	skipc
  2329  0CB0  2C9D               	goto	i1l4928
  2330  0CB1                     i1l378:	
  2331                           
  2332                           ;main.c: 1174: }
  2333                           ;main.c: 1176: ADCON0bits.GO = 1;
  2334  0CB1  149F               	bsf	31,1	;volatile
  2335                           
  2336                           ;main.c: 1177: _delay((unsigned long)((100)*(8000000/4000000.0)));
  2337  0CB2  3041               	movlw	65
  2338  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0CB5  00BD               	movwf	??_isr
  2341  0CB6                     u472_27:	
  2342  0CB6  0BBD               	decfsz	??_isr,f
  2343  0CB7  2CB6               	goto	u472_27
  2344  0CB8  2CB9               	nop2
  2345  0CB9                     i1l379:	
  2346                           ;main.c: 1178: while(ADCON0bits.GO);
  2347                           
  2348  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0CBB  189F               	btfsc	31,1	;volatile
  2351  0CBC  2CB9               	goto	i1l379
  2352                           
  2353                           ;main.c: 1179: adc = ADRESL;
  2354  0CBD  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0CBE  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0CBF  081E               	movf	30,w	;volatile
  2357  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0CC2  00BD               	movwf	??_isr
  2360  0CC3  083D               	movf	??_isr,w
  2361  0CC4  00CE               	movwf	isr@adc
  2362                           
  2363                           ;main.c: 1180: adc /= 3;
  2364  0CC5  3003               	movlw	3
  2365  0CC6  00BD               	movwf	??_isr
  2366  0CC7  083D               	movf	??_isr,w
  2367  0CC8  00F0               	movwf	___lbdiv@divisor
  2368  0CC9  084E               	movf	isr@adc,w
  2369  0CCA  160A  158A  209E  120A  158A  	fcall	___lbdiv
  2370  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0CD1  00BE               	movwf	??_isr+1
  2373  0CD2  083E               	movf	??_isr+1,w
  2374  0CD3  00CE               	movwf	isr@adc
  2375                           
  2376                           ;main.c: 1181: payload[0] = adc / 10;
  2377  0CD4  300A               	movlw	10
  2378  0CD5  00F0               	movwf	___awdiv@divisor
  2379  0CD6  3000               	movlw	0
  2380  0CD7  00F1               	movwf	___awdiv@divisor+1
  2381  0CD8  084E               	movf	isr@adc,w
  2382  0CD9  00BD               	movwf	??_isr
  2383  0CDA  01BE               	clrf	??_isr+1
  2384  0CDB  083D               	movf	??_isr,w
  2385  0CDC  00F2               	movwf	___awdiv@dividend
  2386  0CDD  083E               	movf	??_isr+1,w
  2387  0CDE  00F3               	movwf	___awdiv@dividend+1
  2388  0CDF  160A  158A  224E  120A  158A  	fcall	___awdiv
  2389  0CE4  0870               	movf	?___awdiv,w
  2390  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0CE7  00BF               	movwf	??_isr+2
  2393  0CE8  083F               	movf	??_isr+2,w
  2394  0CE9  1283               	bcf	3,5	;RP0=0, select bank2
  2395  0CEA  1703               	bsf	3,6	;RP1=1, select bank2
  2396  0CEB  0090               	movwf	_payload^(0+256)
  2397                           
  2398                           ;main.c: 1182: adc -= (payload[0] * 10);
  2399  0CEC  300A               	movlw	10
  2400  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0CEF  00BD               	movwf	??_isr
  2403  0CF0  083D               	movf	??_isr,w
  2404  0CF1  00F0               	movwf	___bmul@multiplicand
  2405  0CF2  1283               	bcf	3,5	;RP0=0, select bank2
  2406  0CF3  1703               	bsf	3,6	;RP1=1, select bank2
  2407  0CF4  0810               	movf	_payload^(0+256),w
  2408  0CF5  160A  158A  205E  120A  158A  	fcall	___bmul
  2409  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0CFC  00BE               	movwf	??_isr+1
  2412  0CFD  083E               	movf	??_isr+1,w
  2413  0CFE  02CE               	subwf	isr@adc,f
  2414                           
  2415                           ;main.c: 1183: payload[1] = adc;
  2416  0CFF  084E               	movf	isr@adc,w
  2417  0D00  00BD               	movwf	??_isr
  2418  0D01  083D               	movf	??_isr,w
  2419  0D02  1283               	bcf	3,5	;RP0=0, select bank2
  2420  0D03  1703               	bsf	3,6	;RP1=1, select bank2
  2421  0D04  0091               	movwf	(_payload^(0+256)+1)
  2422                           
  2423                           ;main.c: 1184: payload[0] += 48;
  2424  0D05  3030               	movlw	48
  2425  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0D08  00BD               	movwf	??_isr
  2428  0D09  083D               	movf	??_isr,w
  2429  0D0A  1283               	bcf	3,5	;RP0=0, select bank2
  2430  0D0B  1703               	bsf	3,6	;RP1=1, select bank2
  2431  0D0C  0790               	addwf	_payload^(0+256),f
  2432                           
  2433                           ;main.c: 1185: payload[1] += 48;
  2434  0D0D  3030               	movlw	48
  2435  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2436  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2437  0D10  00BD               	movwf	??_isr
  2438  0D11  083D               	movf	??_isr,w
  2439  0D12  1283               	bcf	3,5	;RP0=0, select bank2
  2440  0D13  1703               	bsf	3,6	;RP1=1, select bank2
  2441  0D14  0791               	addwf	(_payload^(0+256)+1),f
  2442                           
  2443                           ;main.c: 1186: tcp_tx.offset_n_flags[1] = 0x10;
  2444  0D15  3010               	movlw	16
  2445  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0D18  00BD               	movwf	??_isr
  2448  0D19  083D               	movf	??_isr,w
  2449  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  2450  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  2451  0D1C  00BB               	movwf	(_tcp_tx^(0+128)+13)
  2452                           
  2453                           ;main.c: 1187: tcp_tx.status = 44;
  2454  0D1D  302C               	movlw	44
  2455  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0D20  00BD               	movwf	??_isr
  2458  0D21  083D               	movf	??_isr,w
  2459  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0D24  00C2               	movwf	(_tcp_tx^(0+128)+20)
  2462                           
  2463                           ;main.c: 1188: tcp_msg(2);
  2464  0D25  3002               	movlw	2
  2465  0D26  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  2466                           
  2467                           ;main.c: 1189: }
  2468                           ;main.c: 1191: break;
  2469  0D2B  2D8D               	goto	i1l4974
  2470  0D2C                     i1l4956:	
  2471                           ;main.c: 1192: case 4:
  2472                           
  2473                           
  2474                           ;main.c: 1194: tcp_tx.status = 33;
  2475  0D2C  3021               	movlw	33
  2476  0D2D  2D4D               	goto	L3
  2477  0D2E                     i1l4958:	
  2478                           ;main.c: 1196: case 5:
  2479                           
  2480                           ;main.c: 1195: break;
  2481                           
  2482                           
  2483                           ;main.c: 1197: tcp_tx.offset_n_flags[1] = 0x11;
  2484  0D2E  3011               	movlw	17
  2485  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0D31  00BD               	movwf	??_isr
  2488  0D32  083D               	movf	??_isr,w
  2489  0D33  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0D34  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0D35  00BB               	movwf	(_tcp_tx^(0+128)+13)
  2492                           
  2493                           ;main.c: 1198: ack++;
  2494  0D36  3001               	movlw	1
  2495  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0D39  07E2               	addwf	_ack,f
  2498  0D3A  3000               	movlw	0
  2499  0D3B  1803               	skipnc
  2500  0D3C  3001               	movlw	1
  2501  0D3D  07E3               	addwf	_ack+1,f
  2502  0D3E  3000               	movlw	0
  2503  0D3F  1803               	skipnc
  2504  0D40  3001               	movlw	1
  2505  0D41  07E4               	addwf	_ack+2,f
  2506  0D42  3000               	movlw	0
  2507  0D43  1803               	skipnc
  2508  0D44  3001               	movlw	1
  2509  0D45  07E5               	addwf	_ack+3,f
  2510                           
  2511                           ;main.c: 1199: tcp_msg(0);
  2512  0D46  3000               	movlw	0
  2513  0D47  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  2514                           
  2515                           ;main.c: 1200: tcp_tx.status = 55;
  2516  0D4C  3037               	movlw	55
  2517  0D4D                     L3:	
  2518  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  2520  0D4F  00BD               	movwf	??_isr
  2521  0D50  083D               	movf	??_isr,w
  2522  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0D53  00C2               	movwf	(_tcp_tx^(0+128)+20)
  2525                           
  2526                           ;main.c: 1201: break;
  2527  0D54  2D8D               	goto	i1l4974
  2528  0D55                     i1l4964:	
  2529                           ;main.c: 1202: case 6:
  2530                           
  2531                           
  2532                           ;main.c: 1203: tcp_tx.offset_n_flags[1] = 0x10;
  2533  0D55  3010               	movlw	16
  2534  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0D58  00BD               	movwf	??_isr
  2537  0D59  083D               	movf	??_isr,w
  2538  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  2540  0D5C  00BB               	movwf	(_tcp_tx^(0+128)+13)
  2541                           
  2542                           ;main.c: 1204: ack++;
  2543  0D5D  3001               	movlw	1
  2544  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  2546  0D60  07E2               	addwf	_ack,f
  2547  0D61  3000               	movlw	0
  2548  0D62  1803               	skipnc
  2549  0D63  3001               	movlw	1
  2550  0D64  07E3               	addwf	_ack+1,f
  2551  0D65  3000               	movlw	0
  2552  0D66  1803               	skipnc
  2553  0D67  3001               	movlw	1
  2554  0D68  07E4               	addwf	_ack+2,f
  2555  0D69  3000               	movlw	0
  2556  0D6A  1803               	skipnc
  2557  0D6B  3001               	movlw	1
  2558  0D6C  07E5               	addwf	_ack+3,f
  2559                           
  2560                           ;main.c: 1205: tcp_msg(0);
  2561  0D6D  3000               	movlw	0
  2562  0D6E  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  2563                           
  2564                           ;main.c: 1206: tcp_tx.status = 0;
  2565  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0D74  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0D75  01C2               	clrf	(_tcp_tx^(0+128)+20)
  2568                           
  2569                           ;main.c: 1208: }
  2570                           
  2571                           ;main.c: 1207: break;
  2572  0D76  2D8D               	goto	i1l4974
  2573  0D77                     i1l4972:	
  2574  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  2576  0D79  0842               	movf	(_tcp_tx^(0+128)+20),w
  2577                           
  2578                           ; Switch size 1, requested type "space"
  2579                           ; Number of cases is 6, Range of values is 1 to 6
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte           19    10 (average)
  2583                           ; direct_byte           29    11 (fixed)
  2584                           ; jumptable            263     9 (fixed)
  2585                           ;	Chosen strategy is simple_byte
  2586  0D7A  3A01               	xorlw	1	; case 1
  2587  0D7B  1903               	skipnz
  2588  0D7C  2BBB               	goto	i1l4860
  2589  0D7D  3A03               	xorlw	3	; case 2
  2590  0D7E  1903               	skipnz
  2591  0D7F  2BDB               	goto	i1l4866
  2592  0D80  3A01               	xorlw	1	; case 3
  2593  0D81  1903               	skipnz
  2594  0D82  2BDC               	goto	i1l4868
  2595  0D83  3A07               	xorlw	7	; case 4
  2596  0D84  1903               	skipnz
  2597  0D85  2D2C               	goto	i1l4956
  2598  0D86  3A01               	xorlw	1	; case 5
  2599  0D87  1903               	skipnz
  2600  0D88  2D2E               	goto	i1l4958
  2601  0D89  3A03               	xorlw	3	; case 6
  2602  0D8A  1903               	skipnz
  2603  0D8B  2D55               	goto	i1l4964
  2604  0D8C  2D8D               	goto	i1l4974
  2605  0D8D                     i1l4974:	
  2606                           
  2607                           ;main.c: 1209: }
  2608                           ;main.c: 1213: if (repeat < 20000) {
  2609  0D8D  304E               	movlw	78
  2610  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0D90  026E               	subwf	_repeat+1,w
  2613  0D91  3020               	movlw	32
  2614  0D92  1903               	skipnz
  2615  0D93  026D               	subwf	_repeat,w
  2616  0D94  1803               	skipnc
  2617  0D95  2D9D               	goto	i1l4978
  2618                           
  2619                           ;main.c: 1214: repeat++;
  2620  0D96  3001               	movlw	1
  2621  0D97  07ED               	addwf	_repeat,f
  2622  0D98  1803               	skipnc
  2623  0D99  0AEE               	incf	_repeat+1,f
  2624  0D9A  3000               	movlw	0
  2625  0D9B  07EE               	addwf	_repeat+1,f
  2626                           
  2627                           ;main.c: 1215: } else {
  2628  0D9C  2DD4               	goto	i1l5010
  2629  0D9D                     i1l4978:	
  2630                           
  2631                           ;main.c: 1216: repeat = 0;
  2632  0D9D  01ED               	clrf	_repeat
  2633  0D9E  01EE               	clrf	_repeat+1
  2634                           
  2635                           ;main.c: 1217: if (PORTCbits.RC2) {
  2636  0D9F  1D07               	btfss	7,2	;volatile
  2637  0DA0  2DA3               	goto	i1l387
  2638                           
  2639                           ;main.c: 1218: PORTCbits.RC2 = 0;
  2640  0DA1  1107               	bcf	7,2	;volatile
  2641                           
  2642                           ;main.c: 1219: } else {
  2643  0DA2  2DA4               	goto	i1l4984
  2644  0DA3                     i1l387:	
  2645                           
  2646                           ;main.c: 1220: PORTCbits.RC2 = 1;
  2647  0DA3  1507               	bsf	7,2	;volatile
  2648  0DA4                     i1l4984:	
  2649                           
  2650                           ;main.c: 1221: }
  2651                           ;main.c: 1222: for (char i=0;i<6;i++) {
  2652  0DA4  01CB               	clrf	isr@i_863
  2653  0DA5  3006               	movlw	6
  2654  0DA6  024B               	subwf	isr@i_863,w
  2655  0DA7  1803               	btfsc	3,0
  2656  0DA8  2DB6               	goto	i1l4996
  2657  0DA9                     i1l4990:	
  2658                           
  2659                           ;main.c: 1223: link_tx.MAC_d[i] = 0;
  2660  0DA9  084B               	movf	isr@i_863,w
  2661  0DAA  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  2662  0DAB  0084               	movwf	4
  2663  0DAC  1383               	bcf	3,7	;select IRP bank1
  2664  0DAD  0180               	clrf	0
  2665  0DAE  3001               	movlw	1
  2666  0DAF  00BD               	movwf	??_isr
  2667  0DB0  083D               	movf	??_isr,w
  2668  0DB1  07CB               	addwf	isr@i_863,f
  2669  0DB2  3006               	movlw	6
  2670  0DB3  024B               	subwf	isr@i_863,w
  2671  0DB4  1C03               	skipc
  2672  0DB5  2DA9               	goto	i1l4990
  2673  0DB6                     i1l4996:	
  2674                           
  2675                           ;main.c: 1224: }
  2676                           ;main.c: 1225: for (char i=0;i<4;i++) {
  2677  0DB6  01D6               	clrf	isr@i_864
  2678  0DB7  3004               	movlw	4
  2679  0DB8  0256               	subwf	isr@i_864,w
  2680  0DB9  1803               	btfsc	3,0
  2681  0DBA  2DCE               	goto	i1l5008
  2682  0DBB                     i1l5002:	
  2683                           
  2684                           ;main.c: 1226: ip_tx.IP_d[i] = ip_tx.IP_s[i];
  2685  0DBB  0856               	movf	isr@i_864,w
  2686  0DBC  3ECF               	addlw	(low ((_ip_tx| 0+12)))& (0+255)
  2687  0DBD  0084               	movwf	4
  2688  0DBE  1383               	bcf	3,7	;select IRP bank1
  2689  0DBF  0800               	movf	0,w
  2690  0DC0  00BD               	movwf	??_isr
  2691  0DC1  0856               	movf	isr@i_864,w
  2692  0DC2  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  2693  0DC3  0084               	movwf	4
  2694  0DC4  083D               	movf	??_isr,w
  2695  0DC5  0080               	movwf	0
  2696  0DC6  3001               	movlw	1
  2697  0DC7  00BD               	movwf	??_isr
  2698  0DC8  083D               	movf	??_isr,w
  2699  0DC9  07D6               	addwf	isr@i_864,f
  2700  0DCA  3004               	movlw	4
  2701  0DCB  0256               	subwf	isr@i_864,w
  2702  0DCC  1C03               	skipc
  2703  0DCD  2DBB               	goto	i1l5002
  2704  0DCE                     i1l5008:	
  2705                           
  2706                           ;main.c: 1227: }
  2707                           ;main.c: 1228: arp_msg(1);
  2708  0DCE  3001               	movlw	1
  2709  0DCF  120A  158A  209B  120A  158A  	fcall	_arp_msg
  2710  0DD4                     i1l5010:	
  2711                           
  2712                           ;main.c: 1230: }
  2713                           ;main.c: 1231: if (timeout < 65000) {
  2714  0DD4  30FD               	movlw	253
  2715  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0DD7  0267               	subwf	_timeout+1,w
  2718  0DD8  30E8               	movlw	232
  2719  0DD9  1903               	skipnz
  2720  0DDA  0266               	subwf	_timeout,w
  2721  0DDB  1803               	skipnc
  2722  0DDC  2DE4               	goto	i1l5014
  2723                           
  2724                           ;main.c: 1232: timeout++;
  2725  0DDD  3001               	movlw	1
  2726  0DDE  07E6               	addwf	_timeout,f
  2727  0DDF  1803               	skipnc
  2728  0DE0  0AE7               	incf	_timeout+1,f
  2729  0DE1  3000               	movlw	0
  2730  0DE2  07E7               	addwf	_timeout+1,f
  2731                           
  2732                           ;main.c: 1233: } else {
  2733  0DE3  2E00               	goto	i1l5028
  2734  0DE4                     i1l5014:	
  2735                           
  2736                           ;main.c: 1234: timeout = 0;
  2737  0DE4  01E6               	clrf	_timeout
  2738  0DE5  01E7               	clrf	_timeout+1
  2739                           
  2740                           ;main.c: 1235: if (tcp_tx.status == 33) {
  2741  0DE6  3021               	movlw	33
  2742  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  2743  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  2744  0DE9  0642               	xorwf	(_tcp_tx^(0+128)+20),w
  2745  0DEA  1D03               	btfss	3,2
  2746  0DEB  2DFC               	goto	i1l5024
  2747                           
  2748                           ;main.c: 1236: tcp_tx.offset_n_flags[1] = 0x01;
  2749  0DEC  01BB               	clrf	(_tcp_tx^(0+128)+13)
  2750  0DED  0ABB               	incf	(_tcp_tx^(0+128)+13),f
  2751                           
  2752                           ;main.c: 1237: tcp_msg(0);
  2753  0DEE  3000               	movlw	0
  2754  0DEF  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  2755                           
  2756                           ;main.c: 1238: tcp_tx.status = 66;
  2757  0DF4  3042               	movlw	66
  2758  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0DF7  00BD               	movwf	??_isr
  2761  0DF8  083D               	movf	??_isr,w
  2762  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0DFA  1303               	bcf	3,6	;RP1=0, select bank1
  2764  0DFB  00C2               	movwf	(_tcp_tx^(0+128)+20)
  2765  0DFC                     i1l5024:	
  2766                           
  2767                           ;main.c: 1239: }
  2768                           ;main.c: 1240: if (tcp_tx.status == 66) {
  2769  0DFC  3042               	movlw	66
  2770  0DFD  0642               	xorwf	(_tcp_tx^(0+128)+20),w
  2771  0DFE  1903               	btfsc	3,2
  2772                           
  2773                           ;main.c: 1241: tcp_tx.status = 0;
  2774  0DFF  01C2               	clrf	(_tcp_tx^(0+128)+20)
  2775  0E00                     i1l5028:	
  2776                           
  2777                           ;main.c: 1242: }
  2778                           ;main.c: 1243: }
  2779                           ;main.c: 1245: if (init) {
  2780  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0E01  1C6F               	btfss	_init/(0+8),_init& (0+7)
  2782  0E02  2E37               	goto	i1l5048
  2783                           
  2784                           ;main.c: 1246: if (rw_eeprom(0x00,0x00,0) == 0x0A) {
  2785  0E03  01F0               	clrf	rw_eeprom@data
  2786  0E04  01F1               	clrf	rw_eeprom@rw
  2787  0E05  3000               	movlw	0
  2788  0E06  160A  158A  20E1  120A  158A  	fcall	_rw_eeprom
  2789  0E0B  3A0A               	xorlw	10
  2790  0E0C  1D03               	skipz
  2791  0E0D  2E2F               	goto	i1l5044
  2792                           
  2793                           ;main.c: 1247: for (char i=0;i<4;i++) {
  2794  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0E10  01D7               	clrf	isr@i_866
  2797  0E11  3004               	movlw	4
  2798  0E12  0257               	subwf	isr@i_866,w
  2799  0E13  1803               	btfsc	3,0
  2800  0E14  2E2F               	goto	i1l5044
  2801  0E15                     i1l5038:	
  2802                           
  2803                           ;main.c: 1248: ip_tx.IP_s[i] = rw_eeprom(i+1,0x00,0);
  2804  0E15  01F0               	clrf	rw_eeprom@data
  2805  0E16  01F1               	clrf	rw_eeprom@rw
  2806  0E17  0857               	movf	isr@i_866,w
  2807  0E18  3E01               	addlw	1
  2808  0E19  160A  158A  20E1  120A  158A  	fcall	_rw_eeprom
  2809  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0E20  00BD               	movwf	??_isr
  2812  0E21  0857               	movf	isr@i_866,w
  2813  0E22  3ECF               	addlw	(low ((_ip_tx| 0+12)))& (0+255)
  2814  0E23  0084               	movwf	4
  2815  0E24  083D               	movf	??_isr,w
  2816  0E25  1383               	bcf	3,7	;select IRP bank1
  2817  0E26  0080               	movwf	0
  2818  0E27  3001               	movlw	1
  2819  0E28  00BD               	movwf	??_isr
  2820  0E29  083D               	movf	??_isr,w
  2821  0E2A  07D7               	addwf	isr@i_866,f
  2822  0E2B  3004               	movlw	4
  2823  0E2C  0257               	subwf	isr@i_866,w
  2824  0E2D  1C03               	skipc
  2825  0E2E  2E15               	goto	i1l5038
  2826  0E2F                     i1l5044:	
  2827                           
  2828                           ;main.c: 1249: }
  2829                           ;main.c: 1250: }
  2830                           ;main.c: 1251: config_eth();
  2831  0E2F  160A  118A  241E  120A  158A  	fcall	_config_eth
  2832                           
  2833                           ;main.c: 1252: init = 0;
  2834  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0E36  106F               	bcf	_init/(0+8),_init& (0+7)
  2837  0E37                     i1l5048:	
  2838                           
  2839                           ;main.c: 1253: }
  2840                           ;main.c: 1254: }
  2841                           ;main.c: 1256: if (PIR1bits.RCIF) {
  2842  0E37  1E8C               	btfss	12,5	;volatile
  2843  0E38  2FF5               	goto	i1l442
  2844                           
  2845                           ;main.c: 1257: char drop, j = 0;
  2846  0E39  01DA               	clrf	isr@j
  2847  0E3A                     i1l402:	
  2848                           ;main.c: 1259: while (!PIR1bits.RCIF);
  2849                           
  2850  0E3A  1E8C               	btfss	12,5	;volatile
  2851  0E3B  2E3A               	goto	i1l402
  2852                           
  2853                           ;main.c: 1260: if (!RCSTAbits.FERR & !RCSTAbits.OERR) {
  2854  0E3C  1898               	btfsc	24,1	;volatile
  2855  0E3D  2E40               	goto	u452_20
  2856  0E3E  3001               	movlw	1
  2857  0E3F  2E41               	goto	u452_22
  2858  0E40                     u452_20:	
  2859  0E40  3000               	movlw	0
  2860  0E41                     u452_22:	
  2861  0E41  00BD               	movwf	??_isr
  2862  0E42  1918               	btfsc	24,2	;volatile
  2863  0E43  2E46               	goto	u453_20
  2864  0E44  3001               	movlw	1
  2865  0E45  2E47               	goto	u453_22
  2866  0E46                     u453_20:	
  2867  0E46  3000               	movlw	0
  2868  0E47                     u453_22:	
  2869  0E47  053D               	andwf	??_isr,w
  2870  0E48  3800               	iorlw	0
  2871  0E49  1903               	skipnz
  2872  0E4A  2E58               	goto	i1l5058
  2873                           
  2874                           ;main.c: 1261: opcode[k] = RCREG;
  2875  0E4B  081A               	movf	26,w	;volatile
  2876  0E4C  00BD               	movwf	??_isr
  2877  0E4D  0869               	movf	_k,w
  2878  0E4E  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  2879  0E4F  0084               	movwf	4
  2880  0E50  083D               	movf	??_isr,w
  2881  0E51  1783               	bsf	3,7	;select IRP bank3
  2882  0E52  0080               	movwf	0
  2883                           
  2884                           ;main.c: 1262: k++;
  2885  0E53  3001               	movlw	1
  2886  0E54  00BD               	movwf	??_isr
  2887  0E55  083D               	movf	??_isr,w
  2888  0E56  07E9               	addwf	_k,f
  2889                           
  2890                           ;main.c: 1263: } else {
  2891  0E57  2E6B               	goto	i1l5064
  2892  0E58                     i1l5058:	
  2893                           
  2894                           ;main.c: 1264: drop = RCREG;
  2895  0E58  081A               	movf	26,w	;volatile
  2896  0E59  00BD               	movwf	??_isr
  2897  0E5A  083D               	movf	??_isr,w
  2898  0E5B  00D9               	movwf	isr@drop
  2899                           
  2900                           ;main.c: 1265: drop = RCREG;
  2901  0E5C  081A               	movf	26,w	;volatile
  2902  0E5D  00BD               	movwf	??_isr
  2903  0E5E  083D               	movf	??_isr,w
  2904  0E5F  00D9               	movwf	isr@drop
  2905                           
  2906                           ;main.c: 1266: RCSTAbits.CREN = 0;
  2907  0E60  1218               	bcf	24,4	;volatile
  2908                           
  2909                           ;main.c: 1267: _delay((unsigned long)((100)*(8000000/4000000.0)));
  2910  0E61  3041               	movlw	65
  2911  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0E64  00BD               	movwf	??_isr
  2914  0E65                     u473_27:	
  2915  0E65  0BBD               	decfsz	??_isr,f
  2916  0E66  2E65               	goto	u473_27
  2917  0E67  2E68               	nop2
  2918                           
  2919                           ;main.c: 1268: RCSTAbits.CREN = 1;
  2920  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0E6A  1618               	bsf	24,4	;volatile
  2923  0E6B                     i1l5064:	
  2924                           
  2925                           ;main.c: 1269: }
  2926                           ;main.c: 1270: if (opcode[k-1] == '\n') {
  2927  0E6B  0869               	movf	_k,w
  2928  0E6C  3EFF               	addlw	255
  2929  0E6D  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  2930  0E6E  0084               	movwf	4
  2931  0E6F  300A               	movlw	10
  2932  0E70  1783               	bsf	3,7	;select IRP bank3
  2933  0E71  0600               	xorwf	0,w
  2934  0E72  1903               	btfsc	3,2
  2935  0E73  2FE2               	goto	i1l5184
  2936  0E74  2FF5               	goto	i1l442
  2937  0E75                     i1l5068:	
  2938                           ;main.c: 1272: case 'I':
  2939                           
  2940                           ;main.c: 1271: switch (opcode[0]) {
  2941                           
  2942                           
  2943                           ;main.c: 1273: j = 0;
  2944  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0E77  01DA               	clrf	isr@j
  2947                           
  2948                           ;main.c: 1274: for (char i=0;i<4;i++) {
  2949  0E78  01D8               	clrf	isr@i_870
  2950  0E79  3004               	movlw	4
  2951  0E7A  0258               	subwf	isr@i_870,w
  2952  0E7B  1803               	btfsc	3,0
  2953  0E7C  2ECD               	goto	i1l5096
  2954  0E7D                     i1l5074:	
  2955                           
  2956                           ;main.c: 1275: drop = 0;
  2957  0E7D  01D9               	clrf	isr@drop
  2958  0E7E                     i1l5076:	
  2959                           ;main.c: 1276: do {
  2960                           
  2961                           
  2962                           ;main.c: 1277: j++;
  2963  0E7E  3001               	movlw	1
  2964  0E7F  00BD               	movwf	??_isr
  2965  0E80  083D               	movf	??_isr,w
  2966  0E81  07DA               	addwf	isr@j,f
  2967                           
  2968                           ;main.c: 1278: drop *= 10;
  2969  0E82  0859               	movf	isr@drop,w
  2970  0E83  00BD               	movwf	??_isr
  2971  0E84  083D               	movf	??_isr,w
  2972  0E85  00F0               	movwf	___bmul@multiplicand
  2973  0E86  300A               	movlw	10
  2974  0E87  160A  158A  205E  120A  158A  	fcall	___bmul
  2975  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0E8E  00BE               	movwf	??_isr+1
  2978  0E8F  083E               	movf	??_isr+1,w
  2979  0E90  00D9               	movwf	isr@drop
  2980                           
  2981                           ;main.c: 1279: drop += (opcode[j] - 48);
  2982  0E91  085A               	movf	isr@j,w
  2983  0E92  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  2984  0E93  0084               	movwf	4
  2985  0E94  1783               	bsf	3,7	;select IRP bank3
  2986  0E95  0800               	movf	0,w
  2987  0E96  3ED0               	addlw	208
  2988  0E97  00BD               	movwf	??_isr
  2989  0E98  083D               	movf	??_isr,w
  2990  0E99  07D9               	addwf	isr@drop,f
  2991                           
  2992                           ;main.c: 1280: } while (opcode[j+1] != '.' && opcode[j+1] != '\n');
  2993  0E9A  085A               	movf	isr@j,w
  2994  0E9B  3E01               	addlw	1
  2995  0E9C  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  2996  0E9D  0084               	movwf	4
  2997  0E9E  302E               	movlw	46
  2998  0E9F  0600               	xorwf	0,w
  2999  0EA0  1903               	btfsc	3,2
  3000  0EA1  2EAA               	goto	i1l5086
  3001  0EA2  085A               	movf	isr@j,w
  3002  0EA3  3E01               	addlw	1
  3003  0EA4  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3004  0EA5  0084               	movwf	4
  3005  0EA6  300A               	movlw	10
  3006  0EA7  0600               	xorwf	0,w
  3007  0EA8  1D03               	btfss	3,2
  3008  0EA9  2E7E               	goto	i1l5076
  3009  0EAA                     i1l5086:	
  3010                           
  3011                           ;main.c: 1281: j++;
  3012  0EAA  3001               	movlw	1
  3013  0EAB  00BD               	movwf	??_isr
  3014  0EAC  083D               	movf	??_isr,w
  3015  0EAD  07DA               	addwf	isr@j,f
  3016                           
  3017                           ;main.c: 1282: ip_tx.IP_s[i] = drop;
  3018  0EAE  0859               	movf	isr@drop,w
  3019  0EAF  00BD               	movwf	??_isr
  3020  0EB0  0858               	movf	isr@i_870,w
  3021  0EB1  3ECF               	addlw	(low ((_ip_tx| 0+12)))& (0+255)
  3022  0EB2  0084               	movwf	4
  3023  0EB3  083D               	movf	??_isr,w
  3024  0EB4  1383               	bcf	3,7	;select IRP bank1
  3025  0EB5  0080               	movwf	0
  3026                           
  3027                           ;main.c: 1283: rw_eeprom(i+1,drop,1);
  3028  0EB6  0859               	movf	isr@drop,w
  3029  0EB7  00BD               	movwf	??_isr
  3030  0EB8  083D               	movf	??_isr,w
  3031  0EB9  00F0               	movwf	rw_eeprom@data
  3032  0EBA  01F1               	clrf	rw_eeprom@rw
  3033  0EBB  0AF1               	incf	rw_eeprom@rw,f
  3034  0EBC  0858               	movf	isr@i_870,w
  3035  0EBD  3E01               	addlw	1
  3036  0EBE  160A  158A  20E1  120A  158A  	fcall	_rw_eeprom
  3037  0EC3  3001               	movlw	1
  3038  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0EC6  00BD               	movwf	??_isr
  3041  0EC7  083D               	movf	??_isr,w
  3042  0EC8  07D8               	addwf	isr@i_870,f
  3043  0EC9  3004               	movlw	4
  3044  0ECA  0258               	subwf	isr@i_870,w
  3045  0ECB  1C03               	skipc
  3046  0ECC  2E7D               	goto	i1l5074
  3047  0ECD                     i1l5096:	
  3048                           
  3049                           ;main.c: 1284: }
  3050                           ;main.c: 1285: rw_eeprom(0x00,0x0A,1);
  3051  0ECD  300A               	movlw	10
  3052  0ECE  00BD               	movwf	??_isr
  3053  0ECF  083D               	movf	??_isr,w
  3054  0ED0  00F0               	movwf	rw_eeprom@data
  3055  0ED1  01F1               	clrf	rw_eeprom@rw
  3056  0ED2  0AF1               	incf	rw_eeprom@rw,f
  3057  0ED3  3000               	movlw	0
  3058  0ED4  160A  158A  20E1  120A  158A  	fcall	_rw_eeprom
  3059                           
  3060                           ;main.c: 1286: repeat = 20000;
  3061  0ED9  3020               	movlw	32
  3062  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0EDC  00ED               	movwf	_repeat
  3065  0EDD  304E               	movlw	78
  3066  0EDE  00EE               	movwf	_repeat+1
  3067                           
  3068                           ;main.c: 1287: break;
  3069  0EDF  2FF2               	goto	i1l5186
  3070  0EE0                     i1l5100:	
  3071                           ;main.c: 1288: case 'i':
  3072                           
  3073                           
  3074                           ;main.c: 1289: j = 0;
  3075  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0EE2  01DA               	clrf	isr@j
  3078                           
  3079                           ;main.c: 1290: repeat = 0;
  3080  0EE3  01ED               	clrf	_repeat
  3081  0EE4  01EE               	clrf	_repeat+1
  3082                           
  3083                           ;main.c: 1291: for (char i=0;i<4;i++) {
  3084  0EE5  01CC               	clrf	isr@i_871
  3085  0EE6                     L5:	
  3086  0EE6  3004               	movlw	4
  3087  0EE7  024C               	subwf	isr@i_871,w
  3088  0EE8  1803               	btfsc	3,0
  3089  0EE9  2FF2               	goto	i1l5186
  3090                           
  3091                           ;main.c: 1292: drop = 0;
  3092  0EEA  01D9               	clrf	isr@drop
  3093  0EEB                     i1l5108:	
  3094                           ;main.c: 1293: do {
  3095                           
  3096                           
  3097                           ;main.c: 1294: j++;
  3098  0EEB  3001               	movlw	1
  3099  0EEC  00BD               	movwf	??_isr
  3100  0EED  083D               	movf	??_isr,w
  3101  0EEE  07DA               	addwf	isr@j,f
  3102                           
  3103                           ;main.c: 1295: drop *= 10;
  3104  0EEF  0859               	movf	isr@drop,w
  3105  0EF0  00BD               	movwf	??_isr
  3106  0EF1  083D               	movf	??_isr,w
  3107  0EF2  00F0               	movwf	___bmul@multiplicand
  3108  0EF3  300A               	movlw	10
  3109  0EF4  160A  158A  205E  120A  158A  	fcall	___bmul
  3110  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0EFB  00BE               	movwf	??_isr+1
  3113  0EFC  083E               	movf	??_isr+1,w
  3114  0EFD  00D9               	movwf	isr@drop
  3115                           
  3116                           ;main.c: 1296: drop += (opcode[j] - 48);
  3117  0EFE  085A               	movf	isr@j,w
  3118  0EFF  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3119  0F00  0084               	movwf	4
  3120  0F01  1783               	bsf	3,7	;select IRP bank3
  3121  0F02  0800               	movf	0,w
  3122  0F03  3ED0               	addlw	208
  3123  0F04  00BD               	movwf	??_isr
  3124  0F05  083D               	movf	??_isr,w
  3125  0F06  07D9               	addwf	isr@drop,f
  3126                           
  3127                           ;main.c: 1297: } while (opcode[j+1] != '.' && opcode[j+1] != '\n');
  3128  0F07  085A               	movf	isr@j,w
  3129  0F08  3E01               	addlw	1
  3130  0F09  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3131  0F0A  0084               	movwf	4
  3132  0F0B  302E               	movlw	46
  3133  0F0C  0600               	xorwf	0,w
  3134  0F0D  1903               	btfsc	3,2
  3135  0F0E  2F17               	goto	i1l5118
  3136  0F0F  085A               	movf	isr@j,w
  3137  0F10  3E01               	addlw	1
  3138  0F11  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3139  0F12  0084               	movwf	4
  3140  0F13  300A               	movlw	10
  3141  0F14  0600               	xorwf	0,w
  3142  0F15  1D03               	btfss	3,2
  3143  0F16  2EEB               	goto	i1l5108
  3144  0F17                     i1l5118:	
  3145                           
  3146                           ;main.c: 1298: j++;
  3147  0F17  3001               	movlw	1
  3148  0F18  00BD               	movwf	??_isr
  3149  0F19  083D               	movf	??_isr,w
  3150  0F1A  07DA               	addwf	isr@j,f
  3151                           
  3152                           ;main.c: 1299: ip_tx.IP_d[i] = drop;
  3153  0F1B  0859               	movf	isr@drop,w
  3154  0F1C  00BD               	movwf	??_isr
  3155  0F1D  084C               	movf	isr@i_871,w
  3156  0F1E  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  3157  0F1F  0084               	movwf	4
  3158  0F20  083D               	movf	??_isr,w
  3159  0F21  1383               	bcf	3,7	;select IRP bank1
  3160  0F22  0080               	movwf	0
  3161  0F23  3001               	movlw	1
  3162  0F24  00BD               	movwf	??_isr
  3163  0F25  083D               	movf	??_isr,w
  3164  0F26  07CC               	addwf	isr@i_871,f
  3165  0F27  2EE6               	goto	L5
  3166  0F28                     i1l5126:	
  3167                           ;main.c: 1302: case 'm':
  3168                           
  3169                           ;main.c: 1300: }
  3170                           ;main.c: 1301: break;
  3171                           
  3172                           
  3173                           ;main.c: 1303: j = 0;
  3174  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0F2A  01DA               	clrf	isr@j
  3177                           
  3178                           ;main.c: 1304: repeat = 0;
  3179  0F2B  01ED               	clrf	_repeat
  3180  0F2C  01EE               	clrf	_repeat+1
  3181                           
  3182                           ;main.c: 1305: for (char i=0;i<6;i++) {
  3183  0F2D  01CD               	clrf	isr@i_872
  3184  0F2E                     L6:	
  3185  0F2E  3006               	movlw	6
  3186  0F2F  024D               	subwf	isr@i_872,w
  3187  0F30  1803               	btfsc	3,0
  3188  0F31  2FF2               	goto	i1l5186
  3189                           
  3190                           ;main.c: 1306: drop = 0;
  3191  0F32  01D9               	clrf	isr@drop
  3192  0F33                     i1l5134:	
  3193                           ;main.c: 1307: do {
  3194                           
  3195                           
  3196                           ;main.c: 1308: j++;
  3197  0F33  3001               	movlw	1
  3198  0F34  00BD               	movwf	??_isr
  3199  0F35  083D               	movf	??_isr,w
  3200  0F36  07DA               	addwf	isr@j,f
  3201                           
  3202                           ;main.c: 1309: drop *= 16;
  3203  0F37  0ED9               	swapf	isr@drop,f
  3204  0F38  30F0               	movlw	240
  3205  0F39  05D9               	andwf	isr@drop,f
  3206                           
  3207                           ;main.c: 1310: if (opcode[j] < 60) {
  3208  0F3A  085A               	movf	isr@j,w
  3209  0F3B  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3210  0F3C  0084               	movwf	4
  3211  0F3D  303C               	movlw	60
  3212  0F3E  1783               	bsf	3,7	;select IRP bank3
  3213  0F3F  0200               	subwf	0,w
  3214  0F40  1803               	skipnc
  3215  0F41  2F48               	goto	i1l5142
  3216                           
  3217                           ;main.c: 1311: drop += (opcode[j] - 48);
  3218  0F42  085A               	movf	isr@j,w
  3219  0F43  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3220  0F44  0084               	movwf	4
  3221  0F45  0800               	movf	0,w
  3222  0F46  3ED0               	addlw	208
  3223  0F47  2F4D               	goto	L4
  3224  0F48                     i1l5142:	
  3225                           ;main.c: 1312: } else {
  3226                           
  3227                           
  3228                           ;main.c: 1313: drop += (opcode[j] - 55);
  3229  0F48  085A               	movf	isr@j,w
  3230  0F49  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3231  0F4A  0084               	movwf	4
  3232  0F4B  0800               	movf	0,w
  3233  0F4C  3EC9               	addlw	201
  3234  0F4D                     L4:	
  3235  0F4D  00BD               	movwf	??_isr
  3236  0F4E  083D               	movf	??_isr,w
  3237  0F4F  07D9               	addwf	isr@drop,f
  3238                           
  3239                           ;main.c: 1314: }
  3240                           ;main.c: 1315: } while (opcode[j+1] != ':' && opcode[j+1] != '\n');
  3241  0F50  085A               	movf	isr@j,w
  3242  0F51  3E01               	addlw	1
  3243  0F52  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3244  0F53  0084               	movwf	4
  3245  0F54  303A               	movlw	58
  3246  0F55  0600               	xorwf	0,w
  3247  0F56  1903               	btfsc	3,2
  3248  0F57  2F60               	goto	i1l5146
  3249  0F58  085A               	movf	isr@j,w
  3250  0F59  3E01               	addlw	1
  3251  0F5A  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3252  0F5B  0084               	movwf	4
  3253  0F5C  300A               	movlw	10
  3254  0F5D  0600               	xorwf	0,w
  3255  0F5E  1D03               	btfss	3,2
  3256  0F5F  2F33               	goto	i1l5134
  3257  0F60                     i1l5146:	
  3258                           
  3259                           ;main.c: 1316: j++;
  3260  0F60  3001               	movlw	1
  3261  0F61  00BD               	movwf	??_isr
  3262  0F62  083D               	movf	??_isr,w
  3263  0F63  07DA               	addwf	isr@j,f
  3264                           
  3265                           ;main.c: 1317: link_tx.MAC_d[i] = drop;
  3266  0F64  0859               	movf	isr@drop,w
  3267  0F65  00BD               	movwf	??_isr
  3268  0F66  084D               	movf	isr@i_872,w
  3269  0F67  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  3270  0F68  0084               	movwf	4
  3271  0F69  083D               	movf	??_isr,w
  3272  0F6A  1383               	bcf	3,7	;select IRP bank1
  3273  0F6B  0080               	movwf	0
  3274  0F6C  3001               	movlw	1
  3275  0F6D  00BD               	movwf	??_isr
  3276  0F6E  083D               	movf	??_isr,w
  3277  0F6F  07CD               	addwf	isr@i_872,f
  3278  0F70  2F2E               	goto	L6
  3279  0F71                     i1l5154:	
  3280                           ;main.c: 1326: case 'T':
  3281                           
  3282                           ;main.c: 1325: switch (opcode[1]) {
  3283                           
  3284                           ;main.c: 1324: case 'S':
  3285                           
  3286                           ;main.c: 1318: }
  3287                           ;main.c: 1319: break;
  3288                           
  3289                           
  3290                           ;main.c: 1327: tcp_tx.offset_n_flags[1] = 0x10;
  3291  0F71  3010               	movlw	16
  3292  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0F74  00BD               	movwf	??_isr
  3295  0F75  083D               	movf	??_isr,w
  3296  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  3297  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  3298  0F78  00BB               	movwf	(_tcp_tx^(0+128)+13)
  3299                           
  3300                           ;main.c: 1328: tcp_tx.status = 44;
  3301  0F79  302C               	movlw	44
  3302  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0F7C  00BD               	movwf	??_isr
  3305  0F7D  083D               	movf	??_isr,w
  3306  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  3308  0F80  00C2               	movwf	(_tcp_tx^(0+128)+20)
  3309                           
  3310                           ;main.c: 1329: j = 0;
  3311  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0F83  01DA               	clrf	isr@j
  3314  0F84                     i1l5158:	
  3315                           ;main.c: 1330: do {
  3316                           
  3317                           
  3318                           ;main.c: 1331: payload[j] = opcode[j+2];
  3319  0F84  085A               	movf	isr@j,w
  3320  0F85  3E02               	addlw	2
  3321  0F86  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3322  0F87  0084               	movwf	4
  3323  0F88  1783               	bsf	3,7	;select IRP bank3
  3324  0F89  0800               	movf	0,w
  3325  0F8A  00BD               	movwf	??_isr
  3326  0F8B  085A               	movf	isr@j,w
  3327  0F8C  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  3328  0F8D  0084               	movwf	4
  3329  0F8E  083D               	movf	??_isr,w
  3330  0F8F  0080               	movwf	0
  3331                           
  3332                           ;main.c: 1332: j++;
  3333  0F90  3001               	movlw	1
  3334  0F91  00BD               	movwf	??_isr
  3335  0F92  083D               	movf	??_isr,w
  3336  0F93  07DA               	addwf	isr@j,f
  3337                           
  3338                           ;main.c: 1333: } while (opcode[j+2] != '\n');
  3339  0F94  085A               	movf	isr@j,w
  3340  0F95  3E02               	addlw	2
  3341  0F96  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3342  0F97  0084               	movwf	4
  3343  0F98  300A               	movlw	10
  3344  0F99  0600               	xorwf	0,w
  3345  0F9A  1D03               	btfss	3,2
  3346  0F9B  2F84               	goto	i1l5158
  3347                           
  3348                           ;main.c: 1334: tcp_msg(k-3);
  3349  0F9C  0869               	movf	_k,w
  3350  0F9D  3EFD               	addlw	253
  3351  0F9E  160A  118A  2004  120A  158A  	fcall	_tcp_msg
  3352                           
  3353                           ;main.c: 1335: break;
  3354  0FA3  2FF2               	goto	i1l5186
  3355  0FA4                     i1l5166:	
  3356                           ;main.c: 1336: case 'U':
  3357                           
  3358                           
  3359                           ;main.c: 1337: udp_tx.PORT_d[0] = 0x09;
  3360  0FA4  3009               	movlw	9
  3361  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0FA7  00BD               	movwf	??_isr
  3364  0FA8  083D               	movf	??_isr,w
  3365  0FA9  00DD               	movwf	_udp_tx+2
  3366                           
  3367                           ;main.c: 1338: udp_tx.PORT_d[1] = 0x78;
  3368  0FAA  3078               	movlw	120
  3369  0FAB  00BD               	movwf	??_isr
  3370  0FAC  083D               	movf	??_isr,w
  3371  0FAD  00DE               	movwf	_udp_tx+3
  3372                           
  3373                           ;main.c: 1339: udp_tx.PORT_s[0] = 0x09;
  3374  0FAE  3009               	movlw	9
  3375  0FAF  00BD               	movwf	??_isr
  3376  0FB0  083D               	movf	??_isr,w
  3377  0FB1  00DB               	movwf	_udp_tx
  3378                           
  3379                           ;main.c: 1340: udp_tx.PORT_s[1] = 0x78;
  3380  0FB2  3078               	movlw	120
  3381  0FB3  00BD               	movwf	??_isr
  3382  0FB4  083D               	movf	??_isr,w
  3383  0FB5  00DC               	movwf	_udp_tx+1
  3384                           
  3385                           ;main.c: 1341: j = 0;
  3386  0FB6  01DA               	clrf	isr@j
  3387  0FB7                     i1l5170:	
  3388                           ;main.c: 1342: do {
  3389                           
  3390                           
  3391                           ;main.c: 1343: payload[j] = opcode[j+2];
  3392  0FB7  085A               	movf	isr@j,w
  3393  0FB8  3E02               	addlw	2
  3394  0FB9  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3395  0FBA  0084               	movwf	4
  3396  0FBB  1783               	bsf	3,7	;select IRP bank3
  3397  0FBC  0800               	movf	0,w
  3398  0FBD  00BD               	movwf	??_isr
  3399  0FBE  085A               	movf	isr@j,w
  3400  0FBF  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  3401  0FC0  0084               	movwf	4
  3402  0FC1  083D               	movf	??_isr,w
  3403  0FC2  0080               	movwf	0
  3404                           
  3405                           ;main.c: 1344: j++;
  3406  0FC3  3001               	movlw	1
  3407  0FC4  00BD               	movwf	??_isr
  3408  0FC5  083D               	movf	??_isr,w
  3409  0FC6  07DA               	addwf	isr@j,f
  3410                           
  3411                           ;main.c: 1345: } while (opcode[j+2] != '\n');
  3412  0FC7  085A               	movf	isr@j,w
  3413  0FC8  3E02               	addlw	2
  3414  0FC9  3E90               	addlw	(low (_opcode| (0+256)))& (0+255)
  3415  0FCA  0084               	movwf	4
  3416  0FCB  300A               	movlw	10
  3417  0FCC  0600               	xorwf	0,w
  3418  0FCD  1D03               	btfss	3,2
  3419  0FCE  2FB7               	goto	i1l5170
  3420                           
  3421                           ;main.c: 1346: udp_msg(k-3);
  3422  0FCF  0869               	movf	_k,w
  3423  0FD0  3EFD               	addlw	253
  3424  0FD1  160A  158A  24D1  120A  158A  	fcall	_udp_msg
  3425                           
  3426                           ;main.c: 1348: }
  3427                           
  3428                           ;main.c: 1347: break;
  3429  0FD6  2FF2               	goto	i1l5186
  3430  0FD7                     i1l5180:	
  3431  0FD7  1683               	bsf	3,5	;RP0=1, select bank3
  3432  0FD8  1703               	bsf	3,6	;RP1=1, select bank3
  3433  0FD9  0811               	movf	(_opcode^(0+384)+1),w
  3434                           
  3435                           ; Switch size 1, requested type "space"
  3436                           ; Number of cases is 2, Range of values is 84 to 85
  3437                           ; switch strategies available:
  3438                           ; Name         Instructions Cycles
  3439                           ; simple_byte            7     4 (average)
  3440                           ; direct_byte           17    11 (fixed)
  3441                           ; jumptable            263     9 (fixed)
  3442                           ;	Chosen strategy is simple_byte
  3443  0FDA  3A54               	xorlw	84	; case 84
  3444  0FDB  1903               	skipnz
  3445  0FDC  2F71               	goto	i1l5154
  3446  0FDD  3A01               	xorlw	1	; case 85
  3447  0FDE  1903               	skipnz
  3448  0FDF  2FA4               	goto	i1l5166
  3449  0FE0  2FF2               	goto	i1l5186
  3450                           
  3451                           ;main.c: 1350: }
  3452                           
  3453                           ;main.c: 1349: break;
  3454  0FE1  2FF2               	goto	i1l5186
  3455  0FE2                     i1l5184:	
  3456  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  3457  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  3458  0FE4  0810               	movf	_opcode^(0+384),w
  3459                           
  3460                           ; Switch size 1, requested type "space"
  3461                           ; Number of cases is 4, Range of values is 73 to 109
  3462                           ; switch strategies available:
  3463                           ; Name         Instructions Cycles
  3464                           ; simple_byte           13     7 (average)
  3465                           ; direct_byte          122    11 (fixed)
  3466                           ; jumptable            263     9 (fixed)
  3467                           ;	Chosen strategy is simple_byte
  3468  0FE5  3A49               	xorlw	73	; case 73
  3469  0FE6  1903               	skipnz
  3470  0FE7  2E75               	goto	i1l5068
  3471  0FE8  3A1A               	xorlw	26	; case 83
  3472  0FE9  1903               	skipnz
  3473  0FEA  2FD7               	goto	i1l5180
  3474  0FEB  3A3A               	xorlw	58	; case 105
  3475  0FEC  1903               	skipnz
  3476  0FED  2EE0               	goto	i1l5100
  3477  0FEE  3A04               	xorlw	4	; case 109
  3478  0FEF  1903               	skipnz
  3479  0FF0  2F28               	goto	i1l5126
  3480  0FF1  2FF2               	goto	i1l5186
  3481  0FF2                     i1l5186:	
  3482                           
  3483                           ;main.c: 1351: k = 0;
  3484  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  3486  0FF4  01E9               	clrf	_k
  3487  0FF5                     i1l442:	
  3488  0FF5  0844               	movf	??_isr+7,w
  3489  0FF6  00FF               	movwf	127
  3490  0FF7  0843               	movf	??_isr+6,w
  3491  0FF8  008A               	movwf	10
  3492  0FF9  0842               	movf	??_isr+5,w
  3493  0FFA  0084               	movwf	4
  3494  0FFB  0E41               	swapf	(??_isr+4)^0,w
  3495  0FFC  0083               	movwf	3
  3496  0FFD  0EFE               	swapf	126,f
  3497  0FFE  0E7E               	swapf	126,w
  3498  0FFF  0009               	retfie
  3499  1000                     __end_of_isr:	
  3500                           
  3501                           	psect	intentry
  3502  0004                     __pintentry:	
  3503                           ;incstack = 0
  3504                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3505                           
  3506  0004                     interrupt_function:	
  3507  007E                     saved_w	set	btemp
  3508  0004  00FE               	movwf	btemp
  3509  0005  0E03               	swapf	3,w
  3510  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0008  00C1               	movwf	??_isr+4
  3513  0009  0804               	movf	4,w
  3514  000A  00C2               	movwf	??_isr+5
  3515  000B  080A               	movf	10,w
  3516  000C  00C3               	movwf	??_isr+6
  3517  000D  087F               	movf	btemp+1,w
  3518  000E  00C4               	movwf	??_isr+7
  3519  000F  120A  158A  2A98   	ljmp	_isr
  3520                           
  3521                           	psect	text6
  3522  1CD1                     __ptext6:	
  3523 ;; *************** function _udp_msg *****************
  3524 ;; Defined at:
  3525 ;;		line 977 in file "main.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  cant            1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  cant            1   17[BANK0 ] unsigned char 
  3530 ;;  i               1   18[BANK0 ] unsigned char 
  3531 ;;  aux             2   15[BANK0 ] unsigned int 
  3532 ;;  arg             1   14[BANK0 ] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       0       0       0       0
  3543 ;;      Locals:         0       5       0       0       0
  3544 ;;      Temps:          1       0       0       0       0
  3545 ;;      Totals:         1       5       0       0       0
  3546 ;;Total ram usage:        6 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    2
  3549 ;; This function calls:
  3550 ;;		_IP_chksum
  3551 ;;		_close_tx
  3552 ;;		_set_IP
  3553 ;;		_set_MAC
  3554 ;;		_spi
  3555 ;;		_start_tx
  3556 ;; This function is called by:
  3557 ;;		_isr
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function _udp_msg
  3563  1CD1                     _udp_msg:	
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _udp_msg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3567                           ;udp_msg@cant stored from wreg
  3568  1CD1  1283               	bcf	3,5	;RP0=0, select bank0
  3569  1CD2  1303               	bcf	3,6	;RP1=0, select bank0
  3570  1CD3  00B1               	movwf	udp_msg@cant
  3571                           
  3572                           ;main.c: 978: unsigned int aux;
  3573                           ;main.c: 979: char arg;
  3574                           ;main.c: 981: udp_tx.length[1] = 8 + cant;
  3575  1CD4  0831               	movf	udp_msg@cant,w
  3576  1CD5  3E08               	addlw	8
  3577  1CD6  00FA               	movwf	??_udp_msg
  3578  1CD7  087A               	movf	??_udp_msg,w
  3579  1CD8  00E0               	movwf	_udp_tx+5
  3580                           
  3581                           ;main.c: 982: ip_tx.total_length[1] = 20 + udp_tx.length[1];
  3582  1CD9  0860               	movf	_udp_tx+5,w
  3583  1CDA  3E14               	addlw	20
  3584  1CDB  00FA               	movwf	??_udp_msg
  3585  1CDC  087A               	movf	??_udp_msg,w
  3586  1CDD  1683               	bsf	3,5	;RP0=1, select bank1
  3587  1CDE  1303               	bcf	3,6	;RP1=0, select bank1
  3588  1CDF  00C6               	movwf	(_ip_tx^(0+128)+3)
  3589                           
  3590                           ;main.c: 983: ip_tx.protocol = 17;
  3591  1CE0  3011               	movlw	17
  3592  1CE1  00FA               	movwf	??_udp_msg
  3593  1CE2  087A               	movf	??_udp_msg,w
  3594  1CE3  00CC               	movwf	(_ip_tx^(0+128)+9)
  3595                           
  3596                           ;main.c: 984: aux = IP_chksum();
  3597  1CE4  120A  118A  262D  160A  158A  	fcall	_IP_chksum
  3598  1CE9  0878               	movf	?_IP_chksum+1,w
  3599  1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  3600  1CEB  1303               	bcf	3,6	;RP1=0, select bank0
  3601  1CEC  00B0               	movwf	udp_msg@aux+1
  3602  1CED  0877               	movf	?_IP_chksum,w
  3603  1CEE  00AF               	movwf	udp_msg@aux
  3604                           
  3605                           ;main.c: 985: ip_tx.chksum[1] = aux & 0x00FF;
  3606  1CEF  082F               	movf	udp_msg@aux,w
  3607  1CF0  00FA               	movwf	??_udp_msg
  3608  1CF1  087A               	movf	??_udp_msg,w
  3609  1CF2  1683               	bsf	3,5	;RP0=1, select bank1
  3610  1CF3  1303               	bcf	3,6	;RP1=0, select bank1
  3611  1CF4  00CE               	movwf	(_ip_tx^(0+128)+11)
  3612                           
  3613                           ;main.c: 986: ip_tx.chksum[0] = (aux >> 8) & 0x00FF;
  3614  1CF5  1283               	bcf	3,5	;RP0=0, select bank0
  3615  1CF6  1303               	bcf	3,6	;RP1=0, select bank0
  3616  1CF7  0830               	movf	udp_msg@aux+1,w
  3617  1CF8  00FA               	movwf	??_udp_msg
  3618  1CF9  087A               	movf	??_udp_msg,w
  3619  1CFA  1683               	bsf	3,5	;RP0=1, select bank1
  3620  1CFB  1303               	bcf	3,6	;RP1=0, select bank1
  3621  1CFC  00CD               	movwf	(_ip_tx^(0+128)+10)
  3622                           
  3623                           ;main.c: 988: link_tx.eth_type[0] = 0x08;
  3624  1CFD  3008               	movlw	8
  3625  1CFE  00FA               	movwf	??_udp_msg
  3626  1CFF  087A               	movf	??_udp_msg,w
  3627  1D00  00AC               	movwf	(_link_tx^(0+128)+12)
  3628                           
  3629                           ;main.c: 989: link_tx.eth_type[1] = 0x00;
  3630  1D01  01AD               	clrf	(_link_tx^(0+128)+13)
  3631                           
  3632                           ;main.c: 991: arg = 14 + ip_tx.total_length[1];
  3633  1D02  0846               	movf	(_ip_tx^(0+128)+3),w
  3634  1D03  3E0E               	addlw	14
  3635  1D04  00FA               	movwf	??_udp_msg
  3636  1D05  087A               	movf	??_udp_msg,w
  3637  1D06  1283               	bcf	3,5	;RP0=0, select bank0
  3638  1D07  1303               	bcf	3,6	;RP1=0, select bank0
  3639  1D08  00AE               	movwf	udp_msg@arg
  3640                           
  3641                           ;main.c: 993: start_tx();
  3642  1D09  160A  158A  22A7  160A  158A  	fcall	_start_tx
  3643                           
  3644                           ;main.c: 995: set_MAC();
  3645  1D0E  160A  158A  216D  160A  158A  	fcall	_set_MAC
  3646                           
  3647                           ;main.c: 997: set_IP();
  3648  1D13  160A  158A  237F  160A  158A  	fcall	_set_IP
  3649                           
  3650                           ;main.c: 999: spi(udp_tx.PORT_s[0],1);
  3651  1D18  01F0               	clrf	spi@rw
  3652  1D19  0AF0               	incf	spi@rw,f
  3653  1D1A  1283               	bcf	3,5	;RP0=0, select bank0
  3654  1D1B  1303               	bcf	3,6	;RP1=0, select bank0
  3655  1D1C  085B               	movf	_udp_tx,w
  3656  1D1D  160A  158A  21B5  160A  158A  	fcall	_spi
  3657                           
  3658                           ;main.c: 1000: spi(udp_tx.PORT_s[1],1);
  3659  1D22  01F0               	clrf	spi@rw
  3660  1D23  0AF0               	incf	spi@rw,f
  3661  1D24  1283               	bcf	3,5	;RP0=0, select bank0
  3662  1D25  1303               	bcf	3,6	;RP1=0, select bank0
  3663  1D26  085C               	movf	_udp_tx+1,w
  3664  1D27  160A  158A  21B5  160A  158A  	fcall	_spi
  3665                           
  3666                           ;main.c: 1001: spi(udp_tx.PORT_d[0],1);
  3667  1D2C  01F0               	clrf	spi@rw
  3668  1D2D  0AF0               	incf	spi@rw,f
  3669  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  3670  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  3671  1D30  085D               	movf	_udp_tx+2,w
  3672  1D31  160A  158A  21B5  160A  158A  	fcall	_spi
  3673                           
  3674                           ;main.c: 1002: spi(udp_tx.PORT_d[1],1);
  3675  1D36  01F0               	clrf	spi@rw
  3676  1D37  0AF0               	incf	spi@rw,f
  3677  1D38  1283               	bcf	3,5	;RP0=0, select bank0
  3678  1D39  1303               	bcf	3,6	;RP1=0, select bank0
  3679  1D3A  085E               	movf	_udp_tx+3,w
  3680  1D3B  160A  158A  21B5  160A  158A  	fcall	_spi
  3681                           
  3682                           ;main.c: 1003: spi(0,1);
  3683  1D40  01F0               	clrf	spi@rw
  3684  1D41  0AF0               	incf	spi@rw,f
  3685  1D42  3000               	movlw	0
  3686  1D43  160A  158A  21B5  160A  158A  	fcall	_spi
  3687                           
  3688                           ;main.c: 1004: spi(udp_tx.length[1],1);
  3689  1D48  01F0               	clrf	spi@rw
  3690  1D49  0AF0               	incf	spi@rw,f
  3691  1D4A  1283               	bcf	3,5	;RP0=0, select bank0
  3692  1D4B  1303               	bcf	3,6	;RP1=0, select bank0
  3693  1D4C  0860               	movf	_udp_tx+5,w
  3694  1D4D  160A  158A  21B5  160A  158A  	fcall	_spi
  3695                           
  3696                           ;main.c: 1005: spi(0,1);
  3697  1D52  01F0               	clrf	spi@rw
  3698  1D53  0AF0               	incf	spi@rw,f
  3699  1D54  3000               	movlw	0
  3700  1D55  160A  158A  21B5  160A  158A  	fcall	_spi
  3701                           
  3702                           ;main.c: 1006: spi(0,1);
  3703  1D5A  01F0               	clrf	spi@rw
  3704  1D5B  0AF0               	incf	spi@rw,f
  3705  1D5C  3000               	movlw	0
  3706  1D5D  160A  158A  21B5  160A  158A  	fcall	_spi
  3707                           
  3708                           ;main.c: 1008: for (char i=0;i<cant;i++) {
  3709  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  3710  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  3711  1D64  01B2               	clrf	udp_msg@i
  3712  1D65                     i1l4522:	
  3713  1D65  0831               	movf	udp_msg@cant,w
  3714  1D66  0232               	subwf	udp_msg@i,w
  3715  1D67  1803               	btfsc	3,0
  3716  1D68  2D7C               	goto	i1l4524
  3717                           
  3718                           ;main.c: 1009: spi(payload[i],1);
  3719  1D69  01F0               	clrf	spi@rw
  3720  1D6A  0AF0               	incf	spi@rw,f
  3721  1D6B  0832               	movf	udp_msg@i,w
  3722  1D6C  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  3723  1D6D  0084               	movwf	4
  3724  1D6E  1783               	bsf	3,7	;select IRP bank2
  3725  1D6F  0800               	movf	0,w
  3726  1D70  160A  158A  21B5  160A  158A  	fcall	_spi
  3727  1D75  3001               	movlw	1
  3728  1D76  00FA               	movwf	??_udp_msg
  3729  1D77  087A               	movf	??_udp_msg,w
  3730  1D78  1283               	bcf	3,5	;RP0=0, select bank0
  3731  1D79  1303               	bcf	3,6	;RP1=0, select bank0
  3732  1D7A  07B2               	addwf	udp_msg@i,f
  3733  1D7B  2D65               	goto	i1l4522
  3734  1D7C                     i1l4524:	
  3735                           
  3736                           ;main.c: 1010: }
  3737                           ;main.c: 1012: close_tx(arg);
  3738  1D7C  082E               	movf	udp_msg@arg,w
  3739  1D7D  160A  158A  2310   	fcall	_close_tx
  3740  1D80  0008               	return
  3741  1D81                     __end_of_udp_msg:	
  3742                           
  3743                           	psect	text7
  3744  07C5                     __ptext7:	
  3745 ;; *************** function _tx_int *****************
  3746 ;; Defined at:
  3747 ;;		line 962 in file "main.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0
  3763 ;;      Temps:          1       0       0       0       0
  3764 ;;      Totals:         1       0       0       0       0
  3765 ;;Total ram usage:        1 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    1
  3768 ;; This function calls:
  3769 ;;		_spi
  3770 ;; This function is called by:
  3771 ;;		_isr
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _tx_int
  3777  07C5                     _tx_int:	
  3778                           
  3779                           ;main.c: 963: PORTBbits.RB2 = 0;
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _tx_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3783  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  3784  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  3785  07C7  1106               	bcf	6,2	;volatile
  3786                           
  3787                           ;main.c: 964: spi(0x1C | 0xA0,1);
  3788  07C8  01F0               	clrf	spi@rw
  3789  07C9  0AF0               	incf	spi@rw,f
  3790  07CA  30BC               	movlw	188
  3791  07CB  160A  158A  21B5  120A  118A  	fcall	_spi
  3792                           
  3793                           ;main.c: 965: spi(0x08,1);
  3794  07D0  01F0               	clrf	spi@rw
  3795  07D1  0AF0               	incf	spi@rw,f
  3796  07D2  3008               	movlw	8
  3797  07D3  160A  158A  21B5  120A  118A  	fcall	_spi
  3798                           
  3799                           ;main.c: 966: PORTBbits.RB2 = 1;
  3800  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3801  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3802  07DA  1506               	bsf	6,2	;volatile
  3803                           
  3804                           ;main.c: 967: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3805  07DB  3006               	movlw	6
  3806  07DC  00F6               	movwf	??_tx_int
  3807  07DD                     u474_27:	
  3808  07DD  0BF6               	decfsz	??_tx_int,f
  3809  07DE  2FDD               	goto	u474_27
  3810  07DF  0000               	nop
  3811                           
  3812                           ;main.c: 968: PORTBbits.RB2 = 0;
  3813  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3814  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3815  07E2  1106               	bcf	6,2	;volatile
  3816                           
  3817                           ;main.c: 969: spi(0x1D, 1);
  3818  07E3  01F0               	clrf	spi@rw
  3819  07E4  0AF0               	incf	spi@rw,f
  3820  07E5  301D               	movlw	29
  3821  07E6  160A  158A  21B5  120A  118A  	fcall	_spi
  3822                           
  3823                           ;main.c: 970: if (spi(0,0) & 0x02) {
  3824  07EB  01F0               	clrf	spi@rw
  3825  07EC  3000               	movlw	0
  3826  07ED  160A  158A  21B5   	fcall	_spi
  3827                           
  3828                           ;main.c: 973: }
  3829                           ;main.c: 974: PORTBbits.RB2 = 1;
  3830  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3831  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3832  07F2  1506               	bsf	6,2	;volatile
  3833  07F3  0008               	return
  3834  07F4                     __end_of_tx_int:	
  3835                           
  3836                           	psect	text8
  3837  1004                     __ptext8:	
  3838 ;; *************** function _tcp_msg *****************
  3839 ;; Defined at:
  3840 ;;		line 1015 in file "main.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  cant            1    wreg     unsigned char 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  cant            1   22[BANK0 ] unsigned char 
  3845 ;;  i               1   21[BANK0 ] unsigned char 
  3846 ;;  i               1   25[BANK0 ] unsigned char 
  3847 ;;  i               1   24[BANK0 ] unsigned char 
  3848 ;;  i               1   23[BANK0 ] unsigned char 
  3849 ;;  ack_cpy         4   17[BANK0 ] unsigned long 
  3850 ;;  aux             2   26[BANK0 ] unsigned int 
  3851 ;;  arg             1   16[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0      12       0       0       0
  3863 ;;      Temps:          4       0       0       0       0
  3864 ;;      Totals:         4      12       0       0       0
  3865 ;;Total ram usage:       16 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    2
  3868 ;; This function calls:
  3869 ;;		_IP_chksum
  3870 ;;		_TCP_chksum
  3871 ;;		_close_tx
  3872 ;;		_set_IP
  3873 ;;		_set_MAC
  3874 ;;		_spi
  3875 ;;		_start_tx
  3876 ;; This function is called by:
  3877 ;;		_isr
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           
  3882                           ;psect for function _tcp_msg
  3883  1004                     _tcp_msg:	
  3884                           
  3885                           ;incstack = 0
  3886                           ; Regs used in _tcp_msg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3887                           ;tcp_msg@cant stored from wreg
  3888  1004  1283               	bcf	3,5	;RP0=0, select bank0
  3889  1005  1303               	bcf	3,6	;RP1=0, select bank0
  3890  1006  00B6               	movwf	tcp_msg@cant
  3891                           
  3892                           ;main.c: 1016: unsigned long ack_cpy;
  3893                           ;main.c: 1017: unsigned int aux;
  3894                           ;main.c: 1018: char arg;
  3895                           ;main.c: 1020: cant += 20;
  3896  1007  3014               	movlw	20
  3897  1008  00FA               	movwf	??_tcp_msg
  3898  1009  087A               	movf	??_tcp_msg,w
  3899  100A  07B6               	addwf	tcp_msg@cant,f
  3900                           
  3901                           ;main.c: 1021: ip_tx.total_length[1] = 20 + cant;
  3902  100B  0836               	movf	tcp_msg@cant,w
  3903  100C  3E14               	addlw	20
  3904  100D  00FA               	movwf	??_tcp_msg
  3905  100E  087A               	movf	??_tcp_msg,w
  3906  100F  1683               	bsf	3,5	;RP0=1, select bank1
  3907  1010  1303               	bcf	3,6	;RP1=0, select bank1
  3908  1011  00C6               	movwf	(_ip_tx^(0+128)+3)
  3909                           
  3910                           ;main.c: 1022: ip_tx.protocol = 6;
  3911  1012  3006               	movlw	6
  3912  1013  00FA               	movwf	??_tcp_msg
  3913  1014  087A               	movf	??_tcp_msg,w
  3914  1015  00CC               	movwf	(_ip_tx^(0+128)+9)
  3915                           
  3916                           ;main.c: 1023: aux = IP_chksum();
  3917  1016  120A  118A  262D  160A  118A  	fcall	_IP_chksum
  3918  101B  0878               	movf	?_IP_chksum+1,w
  3919  101C  1283               	bcf	3,5	;RP0=0, select bank0
  3920  101D  1303               	bcf	3,6	;RP1=0, select bank0
  3921  101E  00BB               	movwf	tcp_msg@aux+1
  3922  101F  0877               	movf	?_IP_chksum,w
  3923  1020  00BA               	movwf	tcp_msg@aux
  3924                           
  3925                           ;main.c: 1024: ip_tx.chksum[1] = aux & 0x00FF;
  3926  1021  083A               	movf	tcp_msg@aux,w
  3927  1022  00FA               	movwf	??_tcp_msg
  3928  1023  087A               	movf	??_tcp_msg,w
  3929  1024  1683               	bsf	3,5	;RP0=1, select bank1
  3930  1025  1303               	bcf	3,6	;RP1=0, select bank1
  3931  1026  00CE               	movwf	(_ip_tx^(0+128)+11)
  3932                           
  3933                           ;main.c: 1025: ip_tx.chksum[0] = (aux >> 8) & 0x00FF;
  3934  1027  1283               	bcf	3,5	;RP0=0, select bank0
  3935  1028  1303               	bcf	3,6	;RP1=0, select bank0
  3936  1029  083B               	movf	tcp_msg@aux+1,w
  3937  102A  00FA               	movwf	??_tcp_msg
  3938  102B  087A               	movf	??_tcp_msg,w
  3939  102C  1683               	bsf	3,5	;RP0=1, select bank1
  3940  102D  1303               	bcf	3,6	;RP1=0, select bank1
  3941  102E  00CD               	movwf	(_ip_tx^(0+128)+10)
  3942                           
  3943                           ;main.c: 1027: ack_cpy = ack;
  3944  102F  1283               	bcf	3,5	;RP0=0, select bank0
  3945  1030  1303               	bcf	3,6	;RP1=0, select bank0
  3946  1031  0865               	movf	_ack+3,w
  3947  1032  00B4               	movwf	tcp_msg@ack_cpy+3
  3948  1033  0864               	movf	_ack+2,w
  3949  1034  00B3               	movwf	tcp_msg@ack_cpy+2
  3950  1035  0863               	movf	_ack+1,w
  3951  1036  00B2               	movwf	tcp_msg@ack_cpy+1
  3952  1037  0862               	movf	_ack,w
  3953  1038  00B1               	movwf	tcp_msg@ack_cpy
  3954                           
  3955                           ;main.c: 1028: for (char i=0;i<4;i++) {
  3956  1039  01B7               	clrf	tcp_msg@i
  3957  103A  3004               	movlw	4
  3958  103B  0237               	subwf	tcp_msg@i,w
  3959  103C  1803               	btfsc	3,0
  3960  103D  2869               	goto	i1l4554
  3961  103E                     i1l4546:	
  3962                           
  3963                           ;main.c: 1029: tcp_tx.ack_num[3 - i] = ack_cpy & 0x000000FF;
  3964  103E  0831               	movf	tcp_msg@ack_cpy,w
  3965  103F  00FA               	movwf	??_tcp_msg
  3966  1040  0337               	decf	tcp_msg@i,w
  3967  1041  3AFF               	xorlw	255
  3968  1042  3E03               	addlw	3
  3969  1043  3EB6               	addlw	(low ((_tcp_tx| 0+8)))& (0+255)
  3970  1044  0084               	movwf	4
  3971  1045  087A               	movf	??_tcp_msg,w
  3972  1046  1383               	bcf	3,7	;select IRP bank1
  3973  1047  0080               	movwf	0
  3974                           
  3975                           ;main.c: 1030: ack_cpy = ack_cpy >> 8;
  3976  1048  0831               	movf	tcp_msg@ack_cpy,w
  3977  1049  00FA               	movwf	??_tcp_msg
  3978  104A  0832               	movf	tcp_msg@ack_cpy+1,w
  3979  104B  00FB               	movwf	??_tcp_msg+1
  3980  104C  0833               	movf	tcp_msg@ack_cpy+2,w
  3981  104D  00FC               	movwf	??_tcp_msg+2
  3982  104E  0834               	movf	tcp_msg@ack_cpy+3,w
  3983  104F  00FD               	movwf	??_tcp_msg+3
  3984  1050  3008               	movlw	8
  3985  1051                     u375_25:	
  3986  1051  1003               	clrc
  3987  1052  0CFD               	rrf	??_tcp_msg+3,f
  3988  1053  0CFC               	rrf	??_tcp_msg+2,f
  3989  1054  0CFB               	rrf	??_tcp_msg+1,f
  3990  1055  0CFA               	rrf	??_tcp_msg,f
  3991  1056  3EFF               	addlw	-1
  3992  1057  1D03               	skipz
  3993  1058  2851               	goto	u375_25
  3994  1059  087D               	movf	??_tcp_msg+3,w
  3995  105A  00B4               	movwf	tcp_msg@ack_cpy+3
  3996  105B  087C               	movf	??_tcp_msg+2,w
  3997  105C  00B3               	movwf	tcp_msg@ack_cpy+2
  3998  105D  087B               	movf	??_tcp_msg+1,w
  3999  105E  00B2               	movwf	tcp_msg@ack_cpy+1
  4000  105F  087A               	movf	??_tcp_msg,w
  4001  1060  00B1               	movwf	tcp_msg@ack_cpy
  4002  1061  3001               	movlw	1
  4003  1062  00FA               	movwf	??_tcp_msg
  4004  1063  087A               	movf	??_tcp_msg,w
  4005  1064  07B7               	addwf	tcp_msg@i,f
  4006  1065  3004               	movlw	4
  4007  1066  0237               	subwf	tcp_msg@i,w
  4008  1067  1C03               	skipc
  4009  1068  283E               	goto	i1l4546
  4010  1069                     i1l4554:	
  4011                           
  4012                           ;main.c: 1031: }
  4013                           ;main.c: 1032: aux = TCP_chksum(cant);
  4014  1069  0836               	movf	tcp_msg@cant,w
  4015  106A  160A  118A  216D  160A  118A  	fcall	_TCP_chksum
  4016  106F  0878               	movf	?_TCP_chksum+1,w
  4017  1070  1283               	bcf	3,5	;RP0=0, select bank0
  4018  1071  1303               	bcf	3,6	;RP1=0, select bank0
  4019  1072  00BB               	movwf	tcp_msg@aux+1
  4020  1073  0877               	movf	?_TCP_chksum,w
  4021  1074  00BA               	movwf	tcp_msg@aux
  4022                           
  4023                           ;main.c: 1033: tcp_tx.chksum[1] = aux & 0x00FF;
  4024  1075  083A               	movf	tcp_msg@aux,w
  4025  1076  00FA               	movwf	??_tcp_msg
  4026  1077  087A               	movf	??_tcp_msg,w
  4027  1078  1683               	bsf	3,5	;RP0=1, select bank1
  4028  1079  1303               	bcf	3,6	;RP1=0, select bank1
  4029  107A  00BF               	movwf	(_tcp_tx^(0+128)+17)
  4030                           
  4031                           ;main.c: 1034: tcp_tx.chksum[0] = (aux >> 8) & 0x00FF;
  4032  107B  1283               	bcf	3,5	;RP0=0, select bank0
  4033  107C  1303               	bcf	3,6	;RP1=0, select bank0
  4034  107D  083B               	movf	tcp_msg@aux+1,w
  4035  107E  00FA               	movwf	??_tcp_msg
  4036  107F  087A               	movf	??_tcp_msg,w
  4037  1080  1683               	bsf	3,5	;RP0=1, select bank1
  4038  1081  1303               	bcf	3,6	;RP1=0, select bank1
  4039  1082  00BE               	movwf	(_tcp_tx^(0+128)+16)
  4040                           
  4041                           ;main.c: 1038: link_tx.eth_type[0] = 0x08;
  4042  1083  3008               	movlw	8
  4043  1084  00FA               	movwf	??_tcp_msg
  4044  1085  087A               	movf	??_tcp_msg,w
  4045  1086  00AC               	movwf	(_link_tx^(0+128)+12)
  4046                           
  4047                           ;main.c: 1039: link_tx.eth_type[1] = 0x00;
  4048  1087  01AD               	clrf	(_link_tx^(0+128)+13)
  4049                           
  4050                           ;main.c: 1041: arg = 14 + ip_tx.total_length[1];
  4051  1088  0846               	movf	(_ip_tx^(0+128)+3),w
  4052  1089  3E0E               	addlw	14
  4053  108A  00FA               	movwf	??_tcp_msg
  4054  108B  087A               	movf	??_tcp_msg,w
  4055  108C  1283               	bcf	3,5	;RP0=0, select bank0
  4056  108D  1303               	bcf	3,6	;RP1=0, select bank0
  4057  108E  00B0               	movwf	tcp_msg@arg
  4058                           
  4059                           ;main.c: 1043: start_tx();
  4060  108F  160A  158A  22A7  160A  118A  	fcall	_start_tx
  4061                           
  4062                           ;main.c: 1045: set_MAC();
  4063  1094  160A  158A  216D  160A  118A  	fcall	_set_MAC
  4064                           
  4065                           ;main.c: 1047: set_IP();
  4066  1099  160A  158A  237F  160A  118A  	fcall	_set_IP
  4067                           
  4068                           ;main.c: 1049: spi(tcp_tx.PORT_s[0],1);
  4069  109E  01F0               	clrf	spi@rw
  4070  109F  0AF0               	incf	spi@rw,f
  4071  10A0  1683               	bsf	3,5	;RP0=1, select bank1
  4072  10A1  1303               	bcf	3,6	;RP1=0, select bank1
  4073  10A2  082E               	movf	_tcp_tx^(0+128),w
  4074  10A3  160A  158A  21B5  160A  118A  	fcall	_spi
  4075                           
  4076                           ;main.c: 1050: spi(tcp_tx.PORT_s[1],1);
  4077  10A8  01F0               	clrf	spi@rw
  4078  10A9  0AF0               	incf	spi@rw,f
  4079  10AA  1683               	bsf	3,5	;RP0=1, select bank1
  4080  10AB  1303               	bcf	3,6	;RP1=0, select bank1
  4081  10AC  082F               	movf	(_tcp_tx^(0+128)+1),w
  4082  10AD  160A  158A  21B5  160A  118A  	fcall	_spi
  4083                           
  4084                           ;main.c: 1051: spi(tcp_tx.PORT_d[0],1);
  4085  10B2  01F0               	clrf	spi@rw
  4086  10B3  0AF0               	incf	spi@rw,f
  4087  10B4  1683               	bsf	3,5	;RP0=1, select bank1
  4088  10B5  1303               	bcf	3,6	;RP1=0, select bank1
  4089  10B6  0830               	movf	(_tcp_tx^(0+128)+2),w
  4090  10B7  160A  158A  21B5  160A  118A  	fcall	_spi
  4091                           
  4092                           ;main.c: 1052: spi(tcp_tx.PORT_d[1],1);
  4093  10BC  01F0               	clrf	spi@rw
  4094  10BD  0AF0               	incf	spi@rw,f
  4095  10BE  1683               	bsf	3,5	;RP0=1, select bank1
  4096  10BF  1303               	bcf	3,6	;RP1=0, select bank1
  4097  10C0  0831               	movf	(_tcp_tx^(0+128)+3),w
  4098  10C1  160A  158A  21B5  160A  118A  	fcall	_spi
  4099                           
  4100                           ;main.c: 1053: for (char i=0;i<4;i++) {
  4101  10C6  1283               	bcf	3,5	;RP0=0, select bank0
  4102  10C7  1303               	bcf	3,6	;RP1=0, select bank0
  4103  10C8  01B8               	clrf	tcp_msg@i_814
  4104  10C9  3004               	movlw	4
  4105  10CA  0238               	subwf	tcp_msg@i_814,w
  4106  10CB  1803               	btfsc	3,0
  4107  10CC  28E3               	goto	i1l4592
  4108  10CD                     i1l4586:	
  4109                           
  4110                           ;main.c: 1054: spi(tcp_tx.seq_num[i],1);
  4111  10CD  01F0               	clrf	spi@rw
  4112  10CE  0AF0               	incf	spi@rw,f
  4113  10CF  0838               	movf	tcp_msg@i_814,w
  4114  10D0  3EB2               	addlw	(low ((_tcp_tx| 0+4)))& (0+255)
  4115  10D1  0084               	movwf	4
  4116  10D2  1383               	bcf	3,7	;select IRP bank1
  4117  10D3  0800               	movf	0,w
  4118  10D4  160A  158A  21B5  160A  118A  	fcall	_spi
  4119  10D9  3001               	movlw	1
  4120  10DA  00FA               	movwf	??_tcp_msg
  4121  10DB  087A               	movf	??_tcp_msg,w
  4122  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  4123  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  4124  10DE  07B8               	addwf	tcp_msg@i_814,f
  4125  10DF  3004               	movlw	4
  4126  10E0  0238               	subwf	tcp_msg@i_814,w
  4127  10E1  1C03               	skipc
  4128  10E2  28CD               	goto	i1l4586
  4129  10E3                     i1l4592:	
  4130                           
  4131                           ;main.c: 1055: }
  4132                           ;main.c: 1056: for (char i=0;i<4;i++) {
  4133  10E3  01B9               	clrf	tcp_msg@i_815
  4134  10E4  3004               	movlw	4
  4135  10E5  0239               	subwf	tcp_msg@i_815,w
  4136  10E6  1803               	btfsc	3,0
  4137  10E7  28FE               	goto	i1l4604
  4138  10E8                     i1l4598:	
  4139                           
  4140                           ;main.c: 1057: spi(tcp_tx.ack_num[i],1);
  4141  10E8  01F0               	clrf	spi@rw
  4142  10E9  0AF0               	incf	spi@rw,f
  4143  10EA  0839               	movf	tcp_msg@i_815,w
  4144  10EB  3EB6               	addlw	(low ((_tcp_tx| 0+8)))& (0+255)
  4145  10EC  0084               	movwf	4
  4146  10ED  1383               	bcf	3,7	;select IRP bank1
  4147  10EE  0800               	movf	0,w
  4148  10EF  160A  158A  21B5  160A  118A  	fcall	_spi
  4149  10F4  3001               	movlw	1
  4150  10F5  00FA               	movwf	??_tcp_msg
  4151  10F6  087A               	movf	??_tcp_msg,w
  4152  10F7  1283               	bcf	3,5	;RP0=0, select bank0
  4153  10F8  1303               	bcf	3,6	;RP1=0, select bank0
  4154  10F9  07B9               	addwf	tcp_msg@i_815,f
  4155  10FA  3004               	movlw	4
  4156  10FB  0239               	subwf	tcp_msg@i_815,w
  4157  10FC  1C03               	skipc
  4158  10FD  28E8               	goto	i1l4598
  4159  10FE                     i1l4604:	
  4160                           
  4161                           ;main.c: 1058: }
  4162                           ;main.c: 1059: spi(tcp_tx.offset_n_flags[0],1);
  4163  10FE  01F0               	clrf	spi@rw
  4164  10FF  0AF0               	incf	spi@rw,f
  4165  1100  1683               	bsf	3,5	;RP0=1, select bank1
  4166  1101  1303               	bcf	3,6	;RP1=0, select bank1
  4167  1102  083A               	movf	(_tcp_tx^(0+128)+12),w
  4168  1103  160A  158A  21B5  160A  118A  	fcall	_spi
  4169                           
  4170                           ;main.c: 1060: spi(tcp_tx.offset_n_flags[1],1);
  4171  1108  01F0               	clrf	spi@rw
  4172  1109  0AF0               	incf	spi@rw,f
  4173  110A  1683               	bsf	3,5	;RP0=1, select bank1
  4174  110B  1303               	bcf	3,6	;RP1=0, select bank1
  4175  110C  083B               	movf	(_tcp_tx^(0+128)+13),w
  4176  110D  160A  158A  21B5  160A  118A  	fcall	_spi
  4177                           
  4178                           ;main.c: 1061: spi(tcp_tx.window[0],1);
  4179  1112  01F0               	clrf	spi@rw
  4180  1113  0AF0               	incf	spi@rw,f
  4181  1114  1683               	bsf	3,5	;RP0=1, select bank1
  4182  1115  1303               	bcf	3,6	;RP1=0, select bank1
  4183  1116  083C               	movf	(_tcp_tx^(0+128)+14),w
  4184  1117  160A  158A  21B5  160A  118A  	fcall	_spi
  4185                           
  4186                           ;main.c: 1062: spi(tcp_tx.window[1],1);
  4187  111C  01F0               	clrf	spi@rw
  4188  111D  0AF0               	incf	spi@rw,f
  4189  111E  1683               	bsf	3,5	;RP0=1, select bank1
  4190  111F  1303               	bcf	3,6	;RP1=0, select bank1
  4191  1120  083D               	movf	(_tcp_tx^(0+128)+15),w
  4192  1121  160A  158A  21B5  160A  118A  	fcall	_spi
  4193                           
  4194                           ;main.c: 1063: spi(tcp_tx.chksum[0],1);
  4195  1126  01F0               	clrf	spi@rw
  4196  1127  0AF0               	incf	spi@rw,f
  4197  1128  1683               	bsf	3,5	;RP0=1, select bank1
  4198  1129  1303               	bcf	3,6	;RP1=0, select bank1
  4199  112A  083E               	movf	(_tcp_tx^(0+128)+16),w
  4200  112B  160A  158A  21B5  160A  118A  	fcall	_spi
  4201                           
  4202                           ;main.c: 1064: spi(tcp_tx.chksum[1],1);
  4203  1130  01F0               	clrf	spi@rw
  4204  1131  0AF0               	incf	spi@rw,f
  4205  1132  1683               	bsf	3,5	;RP0=1, select bank1
  4206  1133  1303               	bcf	3,6	;RP1=0, select bank1
  4207  1134  083F               	movf	(_tcp_tx^(0+128)+17),w
  4208  1135  160A  158A  21B5  160A  118A  	fcall	_spi
  4209                           
  4210                           ;main.c: 1065: spi(tcp_tx.urg_pointer[0],1);
  4211  113A  01F0               	clrf	spi@rw
  4212  113B  0AF0               	incf	spi@rw,f
  4213  113C  1683               	bsf	3,5	;RP0=1, select bank1
  4214  113D  1303               	bcf	3,6	;RP1=0, select bank1
  4215  113E  0840               	movf	(_tcp_tx^(0+128)+18),w
  4216  113F  160A  158A  21B5  160A  118A  	fcall	_spi
  4217                           
  4218                           ;main.c: 1066: spi(tcp_tx.urg_pointer[1],1);
  4219  1144  01F0               	clrf	spi@rw
  4220  1145  0AF0               	incf	spi@rw,f
  4221  1146  1683               	bsf	3,5	;RP0=1, select bank1
  4222  1147  1303               	bcf	3,6	;RP1=0, select bank1
  4223  1148  0841               	movf	(_tcp_tx^(0+128)+19),w
  4224  1149  160A  158A  21B5  160A  118A  	fcall	_spi
  4225                           
  4226                           ;main.c: 1068: for (char i=0;i<cant;i++) {
  4227  114E  1283               	bcf	3,5	;RP0=0, select bank0
  4228  114F  1303               	bcf	3,6	;RP1=0, select bank0
  4229  1150  01B5               	clrf	tcp_msg@i_816
  4230  1151                     i1l4612:	
  4231  1151  0836               	movf	tcp_msg@cant,w
  4232  1152  0235               	subwf	tcp_msg@i_816,w
  4233  1153  1803               	btfsc	3,0
  4234  1154  2968               	goto	i1l4614
  4235                           
  4236                           ;main.c: 1069: spi(payload[i],1);
  4237  1155  01F0               	clrf	spi@rw
  4238  1156  0AF0               	incf	spi@rw,f
  4239  1157  0835               	movf	tcp_msg@i_816,w
  4240  1158  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  4241  1159  0084               	movwf	4
  4242  115A  1783               	bsf	3,7	;select IRP bank2
  4243  115B  0800               	movf	0,w
  4244  115C  160A  158A  21B5  160A  118A  	fcall	_spi
  4245  1161  3001               	movlw	1
  4246  1162  00FA               	movwf	??_tcp_msg
  4247  1163  087A               	movf	??_tcp_msg,w
  4248  1164  1283               	bcf	3,5	;RP0=0, select bank0
  4249  1165  1303               	bcf	3,6	;RP1=0, select bank0
  4250  1166  07B5               	addwf	tcp_msg@i_816,f
  4251  1167  2951               	goto	i1l4612
  4252  1168                     i1l4614:	
  4253                           
  4254                           ;main.c: 1070: }
  4255                           ;main.c: 1072: close_tx(arg);
  4256  1168  0830               	movf	tcp_msg@arg,w
  4257  1169  160A  158A  2310   	fcall	_close_tx
  4258  116C  0008               	return
  4259  116D                     __end_of_tcp_msg:	
  4260                           
  4261                           	psect	text9
  4262  116D                     __ptext9:	
  4263 ;; *************** function _TCP_chksum *****************
  4264 ;; Defined at:
  4265 ;;		line 432 in file "main.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  cant            1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  cant            1    9[BANK0 ] unsigned char 
  4270 ;;  i               1    8[BANK0 ] unsigned char 
  4271 ;;  sum             4   12[BANK0 ] unsigned long 
  4272 ;;  aux             2   10[BANK0 ] unsigned int 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  2    7[COMMON] unsigned int 
  4275 ;; Registers used:
  4276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         2       0       0       0       0
  4283 ;;      Locals:         0       8       0       0       0
  4284 ;;      Temps:          0       8       0       0       0
  4285 ;;      Totals:         2      16       0       0       0
  4286 ;;Total ram usage:       18 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    1
  4289 ;; This function calls:
  4290 ;;		_join
  4291 ;; This function is called by:
  4292 ;;		_tcp_msg
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _TCP_chksum
  4298  116D                     _TCP_chksum:	
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _TCP_chksum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4302                           ;TCP_chksum@cant stored from wreg
  4303  116D  1283               	bcf	3,5	;RP0=0, select bank0
  4304  116E  1303               	bcf	3,6	;RP1=0, select bank0
  4305  116F  00A9               	movwf	TCP_chksum@cant
  4306                           
  4307                           ;main.c: 433: unsigned long sum = 0;
  4308  1170  3000               	movlw	0
  4309  1171  00AF               	movwf	TCP_chksum@sum+3
  4310  1172  3000               	movlw	0
  4311  1173  00AE               	movwf	TCP_chksum@sum+2
  4312  1174  3000               	movlw	0
  4313  1175  00AD               	movwf	TCP_chksum@sum+1
  4314  1176  3000               	movlw	0
  4315  1177  00AC               	movwf	TCP_chksum@sum
  4316                           
  4317                           ;main.c: 434: unsigned int aux;
  4318                           ;main.c: 437: sum += join(&ip_tx.IP_s[0],&ip_tx.IP_s[1]);
  4319  1178  30D0               	movlw	(low ((_ip_tx| 0+13)))& (0+255)
  4320  1179  00A0               	movwf	??_TCP_chksum
  4321  117A  0820               	movf	??_TCP_chksum,w
  4322  117B  00F0               	movwf	join@lower
  4323  117C  30CF               	movlw	(low ((_ip_tx| 0+12)))& (0+255)
  4324  117D  160A  158A  20BF  160A  118A  	fcall	_join
  4325  1182  0870               	movf	?_join,w
  4326  1183  1283               	bcf	3,5	;RP0=0, select bank0
  4327  1184  1303               	bcf	3,6	;RP1=0, select bank0
  4328  1185  00A1               	movwf	??_TCP_chksum+1
  4329  1186  0871               	movf	?_join+1,w
  4330  1187  00A2               	movwf	??_TCP_chksum+2
  4331  1188  01A3               	clrf	??_TCP_chksum+3
  4332  1189  01A4               	clrf	??_TCP_chksum+4
  4333  118A  0821               	movf	??_TCP_chksum+1,w
  4334  118B  07AC               	addwf	TCP_chksum@sum,f
  4335  118C  0822               	movf	??_TCP_chksum+2,w
  4336  118D  1103               	clrz
  4337  118E  1803               	skipnc
  4338  118F  3E01               	addlw	1
  4339  1190  1D03               	btfss	3,2
  4340  1191  07AD               	addwf	TCP_chksum@sum+1,f
  4341  1192  0823               	movf	??_TCP_chksum+3,w
  4342  1193  1103               	clrz
  4343  1194  1803               	skipnc
  4344  1195  3E01               	addlw	1
  4345  1196  1D03               	btfss	3,2
  4346  1197  07AE               	addwf	TCP_chksum@sum+2,f
  4347  1198  0824               	movf	??_TCP_chksum+4,w
  4348  1199  1103               	clrz
  4349  119A  1803               	skipnc
  4350  119B  3E01               	addlw	1
  4351  119C  1D03               	btfss	3,2
  4352  119D  07AF               	addwf	TCP_chksum@sum+3,f
  4353                           
  4354                           ;main.c: 438: sum += join(&ip_tx.IP_s[2],&ip_tx.IP_s[3]);
  4355  119E  30D2               	movlw	(low ((_ip_tx| 0+15)))& (0+255)
  4356  119F  00A0               	movwf	??_TCP_chksum
  4357  11A0  0820               	movf	??_TCP_chksum,w
  4358  11A1  00F0               	movwf	join@lower
  4359  11A2  30D1               	movlw	(low ((_ip_tx| 0+14)))& (0+255)
  4360  11A3  160A  158A  20BF  160A  118A  	fcall	_join
  4361  11A8  0870               	movf	?_join,w
  4362  11A9  1283               	bcf	3,5	;RP0=0, select bank0
  4363  11AA  1303               	bcf	3,6	;RP1=0, select bank0
  4364  11AB  00A1               	movwf	??_TCP_chksum+1
  4365  11AC  0871               	movf	?_join+1,w
  4366  11AD  00A2               	movwf	??_TCP_chksum+2
  4367  11AE  01A3               	clrf	??_TCP_chksum+3
  4368  11AF  01A4               	clrf	??_TCP_chksum+4
  4369  11B0  0821               	movf	??_TCP_chksum+1,w
  4370  11B1  07AC               	addwf	TCP_chksum@sum,f
  4371  11B2  0822               	movf	??_TCP_chksum+2,w
  4372  11B3  1103               	clrz
  4373  11B4  1803               	skipnc
  4374  11B5  3E01               	addlw	1
  4375  11B6  1D03               	btfss	3,2
  4376  11B7  07AD               	addwf	TCP_chksum@sum+1,f
  4377  11B8  0823               	movf	??_TCP_chksum+3,w
  4378  11B9  1103               	clrz
  4379  11BA  1803               	skipnc
  4380  11BB  3E01               	addlw	1
  4381  11BC  1D03               	btfss	3,2
  4382  11BD  07AE               	addwf	TCP_chksum@sum+2,f
  4383  11BE  0824               	movf	??_TCP_chksum+4,w
  4384  11BF  1103               	clrz
  4385  11C0  1803               	skipnc
  4386  11C1  3E01               	addlw	1
  4387  11C2  1D03               	btfss	3,2
  4388  11C3  07AF               	addwf	TCP_chksum@sum+3,f
  4389                           
  4390                           ;main.c: 439: sum += join(&ip_tx.IP_d[0],&ip_tx.IP_d[1]);
  4391  11C4  30D4               	movlw	(low ((_ip_tx| 0+17)))& (0+255)
  4392  11C5  00A0               	movwf	??_TCP_chksum
  4393  11C6  0820               	movf	??_TCP_chksum,w
  4394  11C7  00F0               	movwf	join@lower
  4395  11C8  30D3               	movlw	(low ((_ip_tx| 0+16)))& (0+255)
  4396  11C9  160A  158A  20BF  160A  118A  	fcall	_join
  4397  11CE  0870               	movf	?_join,w
  4398  11CF  1283               	bcf	3,5	;RP0=0, select bank0
  4399  11D0  1303               	bcf	3,6	;RP1=0, select bank0
  4400  11D1  00A1               	movwf	??_TCP_chksum+1
  4401  11D2  0871               	movf	?_join+1,w
  4402  11D3  00A2               	movwf	??_TCP_chksum+2
  4403  11D4  01A3               	clrf	??_TCP_chksum+3
  4404  11D5  01A4               	clrf	??_TCP_chksum+4
  4405  11D6  0821               	movf	??_TCP_chksum+1,w
  4406  11D7  07AC               	addwf	TCP_chksum@sum,f
  4407  11D8  0822               	movf	??_TCP_chksum+2,w
  4408  11D9  1103               	clrz
  4409  11DA  1803               	skipnc
  4410  11DB  3E01               	addlw	1
  4411  11DC  1D03               	btfss	3,2
  4412  11DD  07AD               	addwf	TCP_chksum@sum+1,f
  4413  11DE  0823               	movf	??_TCP_chksum+3,w
  4414  11DF  1103               	clrz
  4415  11E0  1803               	skipnc
  4416  11E1  3E01               	addlw	1
  4417  11E2  1D03               	btfss	3,2
  4418  11E3  07AE               	addwf	TCP_chksum@sum+2,f
  4419  11E4  0824               	movf	??_TCP_chksum+4,w
  4420  11E5  1103               	clrz
  4421  11E6  1803               	skipnc
  4422  11E7  3E01               	addlw	1
  4423  11E8  1D03               	btfss	3,2
  4424  11E9  07AF               	addwf	TCP_chksum@sum+3,f
  4425                           
  4426                           ;main.c: 440: sum += join(&ip_tx.IP_d[2],&ip_tx.IP_d[3]);
  4427  11EA  30D6               	movlw	(low ((_ip_tx| 0+19)))& (0+255)
  4428  11EB  00A0               	movwf	??_TCP_chksum
  4429  11EC  0820               	movf	??_TCP_chksum,w
  4430  11ED  00F0               	movwf	join@lower
  4431  11EE  30D5               	movlw	(low ((_ip_tx| 0+18)))& (0+255)
  4432  11EF  160A  158A  20BF  160A  118A  	fcall	_join
  4433  11F4  0870               	movf	?_join,w
  4434  11F5  1283               	bcf	3,5	;RP0=0, select bank0
  4435  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  4436  11F7  00A1               	movwf	??_TCP_chksum+1
  4437  11F8  0871               	movf	?_join+1,w
  4438  11F9  00A2               	movwf	??_TCP_chksum+2
  4439  11FA  01A3               	clrf	??_TCP_chksum+3
  4440  11FB  01A4               	clrf	??_TCP_chksum+4
  4441  11FC  0821               	movf	??_TCP_chksum+1,w
  4442  11FD  07AC               	addwf	TCP_chksum@sum,f
  4443  11FE  0822               	movf	??_TCP_chksum+2,w
  4444  11FF  1103               	clrz
  4445  1200  1803               	skipnc
  4446  1201  3E01               	addlw	1
  4447  1202  1D03               	btfss	3,2
  4448  1203  07AD               	addwf	TCP_chksum@sum+1,f
  4449  1204  0823               	movf	??_TCP_chksum+3,w
  4450  1205  1103               	clrz
  4451  1206  1803               	skipnc
  4452  1207  3E01               	addlw	1
  4453  1208  1D03               	btfss	3,2
  4454  1209  07AE               	addwf	TCP_chksum@sum+2,f
  4455  120A  0824               	movf	??_TCP_chksum+4,w
  4456  120B  1103               	clrz
  4457  120C  1803               	skipnc
  4458  120D  3E01               	addlw	1
  4459  120E  1D03               	btfss	3,2
  4460  120F  07AF               	addwf	TCP_chksum@sum+3,f
  4461                           
  4462                           ;main.c: 441: sum += ip_tx.protocol;
  4463  1210  1683               	bsf	3,5	;RP0=1, select bank1
  4464  1211  1303               	bcf	3,6	;RP1=0, select bank1
  4465  1212  084C               	movf	(_ip_tx^(0+128)+9),w
  4466  1213  1283               	bcf	3,5	;RP0=0, select bank0
  4467  1214  1303               	bcf	3,6	;RP1=0, select bank0
  4468  1215  00A0               	movwf	??_TCP_chksum
  4469  1216  01A1               	clrf	??_TCP_chksum+1
  4470  1217  01A2               	clrf	??_TCP_chksum+2
  4471  1218  01A3               	clrf	??_TCP_chksum+3
  4472  1219  0820               	movf	??_TCP_chksum,w
  4473  121A  07AC               	addwf	TCP_chksum@sum,f
  4474  121B  0821               	movf	??_TCP_chksum+1,w
  4475  121C  1103               	clrz
  4476  121D  1803               	skipnc
  4477  121E  3E01               	addlw	1
  4478  121F  1D03               	btfss	3,2
  4479  1220  07AD               	addwf	TCP_chksum@sum+1,f
  4480  1221  0822               	movf	??_TCP_chksum+2,w
  4481  1222  1103               	clrz
  4482  1223  1803               	skipnc
  4483  1224  3E01               	addlw	1
  4484  1225  1D03               	btfss	3,2
  4485  1226  07AE               	addwf	TCP_chksum@sum+2,f
  4486  1227  0823               	movf	??_TCP_chksum+3,w
  4487  1228  1103               	clrz
  4488  1229  1803               	skipnc
  4489  122A  3E01               	addlw	1
  4490  122B  1D03               	btfss	3,2
  4491  122C  07AF               	addwf	TCP_chksum@sum+3,f
  4492                           
  4493                           ;main.c: 442: sum += cant;
  4494  122D  0829               	movf	TCP_chksum@cant,w
  4495  122E  00A0               	movwf	??_TCP_chksum
  4496  122F  01A1               	clrf	??_TCP_chksum+1
  4497  1230  01A2               	clrf	??_TCP_chksum+2
  4498  1231  01A3               	clrf	??_TCP_chksum+3
  4499  1232  0820               	movf	??_TCP_chksum,w
  4500  1233  07AC               	addwf	TCP_chksum@sum,f
  4501  1234  0821               	movf	??_TCP_chksum+1,w
  4502  1235  1103               	clrz
  4503  1236  1803               	skipnc
  4504  1237  3E01               	addlw	1
  4505  1238  1D03               	btfss	3,2
  4506  1239  07AD               	addwf	TCP_chksum@sum+1,f
  4507  123A  0822               	movf	??_TCP_chksum+2,w
  4508  123B  1103               	clrz
  4509  123C  1803               	skipnc
  4510  123D  3E01               	addlw	1
  4511  123E  1D03               	btfss	3,2
  4512  123F  07AE               	addwf	TCP_chksum@sum+2,f
  4513  1240  0823               	movf	??_TCP_chksum+3,w
  4514  1241  1103               	clrz
  4515  1242  1803               	skipnc
  4516  1243  3E01               	addlw	1
  4517  1244  1D03               	btfss	3,2
  4518  1245  07AF               	addwf	TCP_chksum@sum+3,f
  4519                           
  4520                           ;main.c: 443: sum += join(&tcp_tx.PORT_s[0],&tcp_tx.PORT_s[1]);
  4521  1246  30AF               	movlw	(low ((_tcp_tx| 0+1)))& (0+255)
  4522  1247  00A0               	movwf	??_TCP_chksum
  4523  1248  0820               	movf	??_TCP_chksum,w
  4524  1249  00F0               	movwf	join@lower
  4525  124A  30AE               	movlw	(low (_tcp_tx| 0))& (0+255)
  4526  124B  160A  158A  20BF  160A  118A  	fcall	_join
  4527  1250  0870               	movf	?_join,w
  4528  1251  1283               	bcf	3,5	;RP0=0, select bank0
  4529  1252  1303               	bcf	3,6	;RP1=0, select bank0
  4530  1253  00A1               	movwf	??_TCP_chksum+1
  4531  1254  0871               	movf	?_join+1,w
  4532  1255  00A2               	movwf	??_TCP_chksum+2
  4533  1256  01A3               	clrf	??_TCP_chksum+3
  4534  1257  01A4               	clrf	??_TCP_chksum+4
  4535  1258  0821               	movf	??_TCP_chksum+1,w
  4536  1259  07AC               	addwf	TCP_chksum@sum,f
  4537  125A  0822               	movf	??_TCP_chksum+2,w
  4538  125B  1103               	clrz
  4539  125C  1803               	skipnc
  4540  125D  3E01               	addlw	1
  4541  125E  1D03               	btfss	3,2
  4542  125F  07AD               	addwf	TCP_chksum@sum+1,f
  4543  1260  0823               	movf	??_TCP_chksum+3,w
  4544  1261  1103               	clrz
  4545  1262  1803               	skipnc
  4546  1263  3E01               	addlw	1
  4547  1264  1D03               	btfss	3,2
  4548  1265  07AE               	addwf	TCP_chksum@sum+2,f
  4549  1266  0824               	movf	??_TCP_chksum+4,w
  4550  1267  1103               	clrz
  4551  1268  1803               	skipnc
  4552  1269  3E01               	addlw	1
  4553  126A  1D03               	btfss	3,2
  4554  126B  07AF               	addwf	TCP_chksum@sum+3,f
  4555                           
  4556                           ;main.c: 444: sum += join(&tcp_tx.PORT_d[0],&tcp_tx.PORT_d[1]);
  4557  126C  30B1               	movlw	(low ((_tcp_tx| 0+3)))& (0+255)
  4558  126D  00A0               	movwf	??_TCP_chksum
  4559  126E  0820               	movf	??_TCP_chksum,w
  4560  126F  00F0               	movwf	join@lower
  4561  1270  30B0               	movlw	(low ((_tcp_tx| 0+2)))& (0+255)
  4562  1271  160A  158A  20BF  160A  118A  	fcall	_join
  4563  1276  0870               	movf	?_join,w
  4564  1277  1283               	bcf	3,5	;RP0=0, select bank0
  4565  1278  1303               	bcf	3,6	;RP1=0, select bank0
  4566  1279  00A1               	movwf	??_TCP_chksum+1
  4567  127A  0871               	movf	?_join+1,w
  4568  127B  00A2               	movwf	??_TCP_chksum+2
  4569  127C  01A3               	clrf	??_TCP_chksum+3
  4570  127D  01A4               	clrf	??_TCP_chksum+4
  4571  127E  0821               	movf	??_TCP_chksum+1,w
  4572  127F  07AC               	addwf	TCP_chksum@sum,f
  4573  1280  0822               	movf	??_TCP_chksum+2,w
  4574  1281  1103               	clrz
  4575  1282  1803               	skipnc
  4576  1283  3E01               	addlw	1
  4577  1284  1D03               	btfss	3,2
  4578  1285  07AD               	addwf	TCP_chksum@sum+1,f
  4579  1286  0823               	movf	??_TCP_chksum+3,w
  4580  1287  1103               	clrz
  4581  1288  1803               	skipnc
  4582  1289  3E01               	addlw	1
  4583  128A  1D03               	btfss	3,2
  4584  128B  07AE               	addwf	TCP_chksum@sum+2,f
  4585  128C  0824               	movf	??_TCP_chksum+4,w
  4586  128D  1103               	clrz
  4587  128E  1803               	skipnc
  4588  128F  3E01               	addlw	1
  4589  1290  1D03               	btfss	3,2
  4590  1291  07AF               	addwf	TCP_chksum@sum+3,f
  4591                           
  4592                           ;main.c: 445: sum += join(&tcp_tx.seq_num[0],&tcp_tx.seq_num[1]);
  4593  1292  30B3               	movlw	(low ((_tcp_tx| 0+5)))& (0+255)
  4594  1293  00A0               	movwf	??_TCP_chksum
  4595  1294  0820               	movf	??_TCP_chksum,w
  4596  1295  00F0               	movwf	join@lower
  4597  1296  30B2               	movlw	(low ((_tcp_tx| 0+4)))& (0+255)
  4598  1297  160A  158A  20BF  160A  118A  	fcall	_join
  4599  129C  0870               	movf	?_join,w
  4600  129D  1283               	bcf	3,5	;RP0=0, select bank0
  4601  129E  1303               	bcf	3,6	;RP1=0, select bank0
  4602  129F  00A1               	movwf	??_TCP_chksum+1
  4603  12A0  0871               	movf	?_join+1,w
  4604  12A1  00A2               	movwf	??_TCP_chksum+2
  4605  12A2  01A3               	clrf	??_TCP_chksum+3
  4606  12A3  01A4               	clrf	??_TCP_chksum+4
  4607  12A4  0821               	movf	??_TCP_chksum+1,w
  4608  12A5  07AC               	addwf	TCP_chksum@sum,f
  4609  12A6  0822               	movf	??_TCP_chksum+2,w
  4610  12A7  1103               	clrz
  4611  12A8  1803               	skipnc
  4612  12A9  3E01               	addlw	1
  4613  12AA  1D03               	btfss	3,2
  4614  12AB  07AD               	addwf	TCP_chksum@sum+1,f
  4615  12AC  0823               	movf	??_TCP_chksum+3,w
  4616  12AD  1103               	clrz
  4617  12AE  1803               	skipnc
  4618  12AF  3E01               	addlw	1
  4619  12B0  1D03               	btfss	3,2
  4620  12B1  07AE               	addwf	TCP_chksum@sum+2,f
  4621  12B2  0824               	movf	??_TCP_chksum+4,w
  4622  12B3  1103               	clrz
  4623  12B4  1803               	skipnc
  4624  12B5  3E01               	addlw	1
  4625  12B6  1D03               	btfss	3,2
  4626  12B7  07AF               	addwf	TCP_chksum@sum+3,f
  4627                           
  4628                           ;main.c: 446: sum += join(&tcp_tx.seq_num[2],&tcp_tx.seq_num[3]);
  4629  12B8  30B5               	movlw	(low ((_tcp_tx| 0+7)))& (0+255)
  4630  12B9  00A0               	movwf	??_TCP_chksum
  4631  12BA  0820               	movf	??_TCP_chksum,w
  4632  12BB  00F0               	movwf	join@lower
  4633  12BC  30B4               	movlw	(low ((_tcp_tx| 0+6)))& (0+255)
  4634  12BD  160A  158A  20BF  160A  118A  	fcall	_join
  4635  12C2  0870               	movf	?_join,w
  4636  12C3  1283               	bcf	3,5	;RP0=0, select bank0
  4637  12C4  1303               	bcf	3,6	;RP1=0, select bank0
  4638  12C5  00A1               	movwf	??_TCP_chksum+1
  4639  12C6  0871               	movf	?_join+1,w
  4640  12C7  00A2               	movwf	??_TCP_chksum+2
  4641  12C8  01A3               	clrf	??_TCP_chksum+3
  4642  12C9  01A4               	clrf	??_TCP_chksum+4
  4643  12CA  0821               	movf	??_TCP_chksum+1,w
  4644  12CB  07AC               	addwf	TCP_chksum@sum,f
  4645  12CC  0822               	movf	??_TCP_chksum+2,w
  4646  12CD  1103               	clrz
  4647  12CE  1803               	skipnc
  4648  12CF  3E01               	addlw	1
  4649  12D0  1D03               	btfss	3,2
  4650  12D1  07AD               	addwf	TCP_chksum@sum+1,f
  4651  12D2  0823               	movf	??_TCP_chksum+3,w
  4652  12D3  1103               	clrz
  4653  12D4  1803               	skipnc
  4654  12D5  3E01               	addlw	1
  4655  12D6  1D03               	btfss	3,2
  4656  12D7  07AE               	addwf	TCP_chksum@sum+2,f
  4657  12D8  0824               	movf	??_TCP_chksum+4,w
  4658  12D9  1103               	clrz
  4659  12DA  1803               	skipnc
  4660  12DB  3E01               	addlw	1
  4661  12DC  1D03               	btfss	3,2
  4662  12DD  07AF               	addwf	TCP_chksum@sum+3,f
  4663                           
  4664                           ;main.c: 447: sum += join(&tcp_tx.ack_num[0],&tcp_tx.ack_num[1]);
  4665  12DE  30B7               	movlw	(low ((_tcp_tx| 0+9)))& (0+255)
  4666  12DF  00A0               	movwf	??_TCP_chksum
  4667  12E0  0820               	movf	??_TCP_chksum,w
  4668  12E1  00F0               	movwf	join@lower
  4669  12E2  30B6               	movlw	(low ((_tcp_tx| 0+8)))& (0+255)
  4670  12E3  160A  158A  20BF  160A  118A  	fcall	_join
  4671  12E8  0870               	movf	?_join,w
  4672  12E9  1283               	bcf	3,5	;RP0=0, select bank0
  4673  12EA  1303               	bcf	3,6	;RP1=0, select bank0
  4674  12EB  00A1               	movwf	??_TCP_chksum+1
  4675  12EC  0871               	movf	?_join+1,w
  4676  12ED  00A2               	movwf	??_TCP_chksum+2
  4677  12EE  01A3               	clrf	??_TCP_chksum+3
  4678  12EF  01A4               	clrf	??_TCP_chksum+4
  4679  12F0  0821               	movf	??_TCP_chksum+1,w
  4680  12F1  07AC               	addwf	TCP_chksum@sum,f
  4681  12F2  0822               	movf	??_TCP_chksum+2,w
  4682  12F3  1103               	clrz
  4683  12F4  1803               	skipnc
  4684  12F5  3E01               	addlw	1
  4685  12F6  1D03               	btfss	3,2
  4686  12F7  07AD               	addwf	TCP_chksum@sum+1,f
  4687  12F8  0823               	movf	??_TCP_chksum+3,w
  4688  12F9  1103               	clrz
  4689  12FA  1803               	skipnc
  4690  12FB  3E01               	addlw	1
  4691  12FC  1D03               	btfss	3,2
  4692  12FD  07AE               	addwf	TCP_chksum@sum+2,f
  4693  12FE  0824               	movf	??_TCP_chksum+4,w
  4694  12FF  1103               	clrz
  4695  1300  1803               	skipnc
  4696  1301  3E01               	addlw	1
  4697  1302  1D03               	btfss	3,2
  4698  1303  07AF               	addwf	TCP_chksum@sum+3,f
  4699                           
  4700                           ;main.c: 448: sum += join(&tcp_tx.ack_num[2],&tcp_tx.ack_num[3]);
  4701  1304  30B9               	movlw	(low ((_tcp_tx| 0+11)))& (0+255)
  4702  1305  00A0               	movwf	??_TCP_chksum
  4703  1306  0820               	movf	??_TCP_chksum,w
  4704  1307  00F0               	movwf	join@lower
  4705  1308  30B8               	movlw	(low ((_tcp_tx| 0+10)))& (0+255)
  4706  1309  160A  158A  20BF  160A  118A  	fcall	_join
  4707  130E  0870               	movf	?_join,w
  4708  130F  1283               	bcf	3,5	;RP0=0, select bank0
  4709  1310  1303               	bcf	3,6	;RP1=0, select bank0
  4710  1311  00A1               	movwf	??_TCP_chksum+1
  4711  1312  0871               	movf	?_join+1,w
  4712  1313  00A2               	movwf	??_TCP_chksum+2
  4713  1314  01A3               	clrf	??_TCP_chksum+3
  4714  1315  01A4               	clrf	??_TCP_chksum+4
  4715  1316  0821               	movf	??_TCP_chksum+1,w
  4716  1317  07AC               	addwf	TCP_chksum@sum,f
  4717  1318  0822               	movf	??_TCP_chksum+2,w
  4718  1319  1103               	clrz
  4719  131A  1803               	skipnc
  4720  131B  3E01               	addlw	1
  4721  131C  1D03               	btfss	3,2
  4722  131D  07AD               	addwf	TCP_chksum@sum+1,f
  4723  131E  0823               	movf	??_TCP_chksum+3,w
  4724  131F  1103               	clrz
  4725  1320  1803               	skipnc
  4726  1321  3E01               	addlw	1
  4727  1322  1D03               	btfss	3,2
  4728  1323  07AE               	addwf	TCP_chksum@sum+2,f
  4729  1324  0824               	movf	??_TCP_chksum+4,w
  4730  1325  1103               	clrz
  4731  1326  1803               	skipnc
  4732  1327  3E01               	addlw	1
  4733  1328  1D03               	btfss	3,2
  4734  1329  07AF               	addwf	TCP_chksum@sum+3,f
  4735                           
  4736                           ;main.c: 449: sum += join(&tcp_tx.offset_n_flags[0],&tcp_tx.offset_n_flags[1]);
  4737  132A  30BB               	movlw	(low ((_tcp_tx| 0+13)))& (0+255)
  4738  132B  00A0               	movwf	??_TCP_chksum
  4739  132C  0820               	movf	??_TCP_chksum,w
  4740  132D  00F0               	movwf	join@lower
  4741  132E  30BA               	movlw	(low ((_tcp_tx| 0+12)))& (0+255)
  4742  132F  160A  158A  20BF  160A  118A  	fcall	_join
  4743  1334  0870               	movf	?_join,w
  4744  1335  1283               	bcf	3,5	;RP0=0, select bank0
  4745  1336  1303               	bcf	3,6	;RP1=0, select bank0
  4746  1337  00A1               	movwf	??_TCP_chksum+1
  4747  1338  0871               	movf	?_join+1,w
  4748  1339  00A2               	movwf	??_TCP_chksum+2
  4749  133A  01A3               	clrf	??_TCP_chksum+3
  4750  133B  01A4               	clrf	??_TCP_chksum+4
  4751  133C  0821               	movf	??_TCP_chksum+1,w
  4752  133D  07AC               	addwf	TCP_chksum@sum,f
  4753  133E  0822               	movf	??_TCP_chksum+2,w
  4754  133F  1103               	clrz
  4755  1340  1803               	skipnc
  4756  1341  3E01               	addlw	1
  4757  1342  1D03               	btfss	3,2
  4758  1343  07AD               	addwf	TCP_chksum@sum+1,f
  4759  1344  0823               	movf	??_TCP_chksum+3,w
  4760  1345  1103               	clrz
  4761  1346  1803               	skipnc
  4762  1347  3E01               	addlw	1
  4763  1348  1D03               	btfss	3,2
  4764  1349  07AE               	addwf	TCP_chksum@sum+2,f
  4765  134A  0824               	movf	??_TCP_chksum+4,w
  4766  134B  1103               	clrz
  4767  134C  1803               	skipnc
  4768  134D  3E01               	addlw	1
  4769  134E  1D03               	btfss	3,2
  4770  134F  07AF               	addwf	TCP_chksum@sum+3,f
  4771                           
  4772                           ;main.c: 450: sum += tcp_tx.window[1];
  4773  1350  1683               	bsf	3,5	;RP0=1, select bank1
  4774  1351  1303               	bcf	3,6	;RP1=0, select bank1
  4775  1352  083D               	movf	(_tcp_tx^(0+128)+15),w
  4776  1353  1283               	bcf	3,5	;RP0=0, select bank0
  4777  1354  1303               	bcf	3,6	;RP1=0, select bank0
  4778  1355  00A0               	movwf	??_TCP_chksum
  4779  1356  01A1               	clrf	??_TCP_chksum+1
  4780  1357  01A2               	clrf	??_TCP_chksum+2
  4781  1358  01A3               	clrf	??_TCP_chksum+3
  4782  1359  0820               	movf	??_TCP_chksum,w
  4783  135A  07AC               	addwf	TCP_chksum@sum,f
  4784  135B  0821               	movf	??_TCP_chksum+1,w
  4785  135C  1103               	clrz
  4786  135D  1803               	skipnc
  4787  135E  3E01               	addlw	1
  4788  135F  1D03               	btfss	3,2
  4789  1360  07AD               	addwf	TCP_chksum@sum+1,f
  4790  1361  0822               	movf	??_TCP_chksum+2,w
  4791  1362  1103               	clrz
  4792  1363  1803               	skipnc
  4793  1364  3E01               	addlw	1
  4794  1365  1D03               	btfss	3,2
  4795  1366  07AE               	addwf	TCP_chksum@sum+2,f
  4796  1367  0823               	movf	??_TCP_chksum+3,w
  4797  1368  1103               	clrz
  4798  1369  1803               	skipnc
  4799  136A  3E01               	addlw	1
  4800  136B  1D03               	btfss	3,2
  4801  136C  07AF               	addwf	TCP_chksum@sum+3,f
  4802                           
  4803                           ;main.c: 451: cant -= 20;
  4804  136D  3014               	movlw	20
  4805  136E  02A9               	subwf	TCP_chksum@cant,f
  4806                           
  4807                           ;main.c: 452: if (cant & 0x01) {
  4808  136F  1C29               	btfss	TCP_chksum@cant,0
  4809  1370  2B7A               	goto	i1l3202
  4810                           
  4811                           ;main.c: 453: payload[cant] = 0;
  4812  1371  0829               	movf	TCP_chksum@cant,w
  4813  1372  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  4814  1373  0084               	movwf	4
  4815  1374  1783               	bsf	3,7	;select IRP bank2
  4816  1375  0180               	clrf	0
  4817                           
  4818                           ;main.c: 454: cant++;
  4819  1376  3001               	movlw	1
  4820  1377  00A0               	movwf	??_TCP_chksum
  4821  1378  0820               	movf	??_TCP_chksum,w
  4822  1379  07A9               	addwf	TCP_chksum@cant,f
  4823  137A                     i1l3202:	
  4824                           
  4825                           ;main.c: 455: }
  4826                           ;main.c: 456: cant /= 2;
  4827  137A  1003               	clrc
  4828  137B  0CA9               	rrf	TCP_chksum@cant,f
  4829                           
  4830                           ;main.c: 457: for (char i=0;i<cant;i++) {
  4831  137C  01A8               	clrf	TCP_chksum@i
  4832  137D                     i1l3214:	
  4833  137D  0829               	movf	TCP_chksum@cant,w
  4834  137E  0228               	subwf	TCP_chksum@i,w
  4835  137F  1803               	btfsc	3,0
  4836  1380  2C02               	goto	i1l3220
  4837                           
  4838                           ;main.c: 458: aux = payload[2*i];
  4839  1381  0828               	movf	TCP_chksum@i,w
  4840  1382  00A0               	movwf	??_TCP_chksum
  4841  1383  0720               	addwf	??_TCP_chksum,w
  4842  1384  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  4843  1385  0084               	movwf	4
  4844  1386  1783               	bsf	3,7	;select IRP bank2
  4845  1387  0800               	movf	0,w
  4846  1388  00A1               	movwf	??_TCP_chksum+1
  4847  1389  01A2               	clrf	??_TCP_chksum+2
  4848  138A  0821               	movf	??_TCP_chksum+1,w
  4849  138B  00AA               	movwf	TCP_chksum@aux
  4850  138C  0822               	movf	??_TCP_chksum+2,w
  4851  138D  00AB               	movwf	TCP_chksum@aux+1
  4852                           
  4853                           ;main.c: 459: aux = aux << 8;
  4854  138E  082A               	movf	TCP_chksum@aux,w
  4855  138F  00A1               	movwf	??_TCP_chksum+1
  4856  1390  01A0               	clrf	??_TCP_chksum
  4857  1391  0820               	movf	??_TCP_chksum,w
  4858  1392  00AA               	movwf	TCP_chksum@aux
  4859  1393  0821               	movf	??_TCP_chksum+1,w
  4860  1394  00AB               	movwf	TCP_chksum@aux+1
  4861                           
  4862                           ;main.c: 460: aux += payload[2*i + 1];
  4863  1395  1403               	setc
  4864  1396  0D28               	rlf	TCP_chksum@i,w
  4865  1397  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  4866  1398  0084               	movwf	4
  4867  1399  0800               	movf	0,w
  4868  139A  00A0               	movwf	??_TCP_chksum
  4869  139B  01A1               	clrf	??_TCP_chksum+1
  4870  139C  0820               	movf	??_TCP_chksum,w
  4871  139D  07AA               	addwf	TCP_chksum@aux,f
  4872  139E  1803               	skipnc
  4873  139F  0AAB               	incf	TCP_chksum@aux+1,f
  4874  13A0  0821               	movf	??_TCP_chksum+1,w
  4875  13A1  07AB               	addwf	TCP_chksum@aux+1,f
  4876                           
  4877                           ;main.c: 461: sum += aux;
  4878  13A2  082A               	movf	TCP_chksum@aux,w
  4879  13A3  00A0               	movwf	??_TCP_chksum
  4880  13A4  082B               	movf	TCP_chksum@aux+1,w
  4881  13A5  00A1               	movwf	??_TCP_chksum+1
  4882  13A6  01A2               	clrf	??_TCP_chksum+2
  4883  13A7  01A3               	clrf	??_TCP_chksum+3
  4884  13A8  0820               	movf	??_TCP_chksum,w
  4885  13A9  07AC               	addwf	TCP_chksum@sum,f
  4886  13AA  0821               	movf	??_TCP_chksum+1,w
  4887  13AB  1103               	clrz
  4888  13AC  1803               	skipnc
  4889  13AD  3E01               	addlw	1
  4890  13AE  1D03               	btfss	3,2
  4891  13AF  07AD               	addwf	TCP_chksum@sum+1,f
  4892  13B0  0822               	movf	??_TCP_chksum+2,w
  4893  13B1  1103               	clrz
  4894  13B2  1803               	skipnc
  4895  13B3  3E01               	addlw	1
  4896  13B4  1D03               	btfss	3,2
  4897  13B5  07AE               	addwf	TCP_chksum@sum+2,f
  4898  13B6  0823               	movf	??_TCP_chksum+3,w
  4899  13B7  1103               	clrz
  4900  13B8  1803               	skipnc
  4901  13B9  3E01               	addlw	1
  4902  13BA  1D03               	btfss	3,2
  4903  13BB  07AF               	addwf	TCP_chksum@sum+3,f
  4904  13BC  3001               	movlw	1
  4905  13BD  00A0               	movwf	??_TCP_chksum
  4906  13BE  0820               	movf	??_TCP_chksum,w
  4907  13BF  07A8               	addwf	TCP_chksum@i,f
  4908  13C0  2B7D               	goto	i1l3214
  4909  13C1                     i1l3216:	
  4910                           ;main.c: 462: }
  4911                           ;main.c: 463: while (sum > 0x0000FFFF) {
  4912                           
  4913                           
  4914                           ;main.c: 464: aux = sum >> 16;
  4915  13C1  082C               	movf	TCP_chksum@sum,w
  4916  13C2  00A0               	movwf	??_TCP_chksum
  4917  13C3  082D               	movf	TCP_chksum@sum+1,w
  4918  13C4  00A1               	movwf	??_TCP_chksum+1
  4919  13C5  082E               	movf	TCP_chksum@sum+2,w
  4920  13C6  00A2               	movwf	??_TCP_chksum+2
  4921  13C7  082F               	movf	TCP_chksum@sum+3,w
  4922  13C8  00A3               	movwf	??_TCP_chksum+3
  4923  13C9  3010               	movlw	16
  4924  13CA                     u269_25:	
  4925  13CA  1003               	clrc
  4926  13CB  0CA3               	rrf	??_TCP_chksum+3,f
  4927  13CC  0CA2               	rrf	??_TCP_chksum+2,f
  4928  13CD  0CA1               	rrf	??_TCP_chksum+1,f
  4929  13CE  0CA0               	rrf	??_TCP_chksum,f
  4930  13CF  3EFF               	addlw	-1
  4931  13D0  1D03               	skipz
  4932  13D1  2BCA               	goto	u269_25
  4933  13D2  0821               	movf	??_TCP_chksum+1,w
  4934  13D3  00AB               	movwf	TCP_chksum@aux+1
  4935  13D4  0820               	movf	??_TCP_chksum,w
  4936  13D5  00AA               	movwf	TCP_chksum@aux
  4937                           
  4938                           ;main.c: 465: sum = (sum & 0x0000FFFF) + aux;
  4939  13D6  082A               	movf	TCP_chksum@aux,w
  4940  13D7  00A0               	movwf	??_TCP_chksum
  4941  13D8  082B               	movf	TCP_chksum@aux+1,w
  4942  13D9  00A1               	movwf	??_TCP_chksum+1
  4943  13DA  01A2               	clrf	??_TCP_chksum+2
  4944  13DB  01A3               	clrf	??_TCP_chksum+3
  4945  13DC  30FF               	movlw	255
  4946  13DD  052C               	andwf	TCP_chksum@sum,w
  4947  13DE  00A4               	movwf	??_TCP_chksum+4
  4948  13DF  30FF               	movlw	255
  4949  13E0  052D               	andwf	TCP_chksum@sum+1,w
  4950  13E1  00A5               	movwf	??_TCP_chksum+5
  4951  13E2  3000               	movlw	0
  4952  13E3  052E               	andwf	TCP_chksum@sum+2,w
  4953  13E4  00A6               	movwf	??_TCP_chksum+6
  4954  13E5  3000               	movlw	0
  4955  13E6  052F               	andwf	TCP_chksum@sum+3,w
  4956  13E7  00A7               	movwf	??_TCP_chksum+7
  4957  13E8  0824               	movf	??_TCP_chksum+4,w
  4958  13E9  07A0               	addwf	??_TCP_chksum,f
  4959  13EA  0825               	movf	??_TCP_chksum+5,w
  4960  13EB  1803               	skipnc
  4961  13EC  0F25               	incfsz	??_TCP_chksum+5,w
  4962  13ED  2BEF               	goto	u270_20
  4963  13EE  2BF0               	goto	u270_21
  4964  13EF                     u270_20:	
  4965  13EF  07A1               	addwf	??_TCP_chksum+1,f
  4966  13F0                     u270_21:	
  4967  13F0  0826               	movf	??_TCP_chksum+6,w
  4968  13F1  1803               	skipnc
  4969  13F2  0F26               	incfsz	??_TCP_chksum+6,w
  4970  13F3  2BF5               	goto	u270_22
  4971  13F4  2BF6               	goto	u270_23
  4972  13F5                     u270_22:	
  4973  13F5  07A2               	addwf	??_TCP_chksum+2,f
  4974  13F6                     u270_23:	
  4975  13F6  0827               	movf	??_TCP_chksum+7,w
  4976  13F7  1803               	skipnc
  4977  13F8  0A27               	incf	??_TCP_chksum+7,w
  4978  13F9  07A3               	addwf	??_TCP_chksum+3,f
  4979  13FA  0823               	movf	??_TCP_chksum+3,w
  4980  13FB  00AF               	movwf	TCP_chksum@sum+3
  4981  13FC  0822               	movf	??_TCP_chksum+2,w
  4982  13FD  00AE               	movwf	TCP_chksum@sum+2
  4983  13FE  0821               	movf	??_TCP_chksum+1,w
  4984  13FF  00AD               	movwf	TCP_chksum@sum+1
  4985  1400  0820               	movf	??_TCP_chksum,w
  4986  1401  00AC               	movwf	TCP_chksum@sum
  4987  1402                     i1l3220:	
  4988  1402  082F               	movf	TCP_chksum@sum+3,w
  4989  1403  1D03               	btfss	3,2
  4990  1404  2BC1               	goto	i1l3216
  4991  1405  3001               	movlw	1
  4992  1406  022E               	subwf	TCP_chksum@sum+2,w
  4993  1407  1D03               	skipz
  4994  1408  2C11               	goto	u271_23
  4995  1409  3000               	movlw	0
  4996  140A  022D               	subwf	TCP_chksum@sum+1,w
  4997  140B  1D03               	skipz
  4998  140C  2C11               	goto	u271_23
  4999  140D  3000               	movlw	0
  5000  140E  022C               	subwf	TCP_chksum@sum,w
  5001  140F  1D03               	skipz
  5002  1410  2C11               	goto	u271_23
  5003  1411                     u271_23:	
  5004  1411  1803               	btfsc	3,0
  5005  1412  2BC1               	goto	i1l3216
  5006                           
  5007                           ;main.c: 466: }
  5008                           ;main.c: 467: aux = sum;
  5009  1413  082D               	movf	TCP_chksum@sum+1,w
  5010  1414  00AB               	movwf	TCP_chksum@aux+1
  5011  1415  082C               	movf	TCP_chksum@sum,w
  5012  1416  00AA               	movwf	TCP_chksum@aux
  5013                           
  5014                           ;main.c: 468: aux = ~aux;
  5015  1417  09AA               	comf	TCP_chksum@aux,f
  5016  1418  09AB               	comf	TCP_chksum@aux+1,f
  5017                           
  5018                           ;main.c: 470: return aux;
  5019  1419  082B               	movf	TCP_chksum@aux+1,w
  5020  141A  00F8               	movwf	?_TCP_chksum+1
  5021  141B  082A               	movf	TCP_chksum@aux,w
  5022  141C  00F7               	movwf	?_TCP_chksum
  5023  141D  0008               	return
  5024  141E                     __end_of_TCP_chksum:	
  5025                           
  5026                           	psect	text10
  5027  1D81                     __ptext10:	
  5028 ;; *************** function _rx_int *****************
  5029 ;; Defined at:
  5030 ;;		line 907 in file "main.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  typeOfRead      1    wreg     unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  typeOfRead      1   11[COMMON] unsigned char 
  5035 ;;  count           1   12[COMMON] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5045 ;;      Params:         0       0       0       0       0
  5046 ;;      Locals:         2       0       0       0       0
  5047 ;;      Temps:          1       0       0       0       0
  5048 ;;      Totals:         3       0       0       0       0
  5049 ;;Total ram usage:        3 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    2
  5052 ;; This function calls:
  5053 ;;		_read_buff
  5054 ;;		_spi
  5055 ;; This function is called by:
  5056 ;;		_isr
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function _rx_int
  5062  1D81                     _rx_int:	
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in _rx_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5066                           ;rx_int@typeOfRead stored from wreg
  5067  1D81  00FB               	movwf	rx_int@typeOfRead
  5068                           
  5069                           ;main.c: 908: char count;
  5070                           ;main.c: 909: if (typeOfRead) {
  5071  1D82  087B               	movf	rx_int@typeOfRead,w
  5072  1D83  1903               	btfsc	3,2
  5073  1D84  2E31               	goto	i1l306
  5074                           
  5075                           ;main.c: 910: PORTBbits.RB2 = 0;
  5076  1D85  1283               	bcf	3,5	;RP0=0, select bank0
  5077  1D86  1303               	bcf	3,6	;RP1=0, select bank0
  5078  1D87  1106               	bcf	6,2	;volatile
  5079                           
  5080                           ;main.c: 911: spi(0x1F | 0xA0,1);
  5081  1D88  01F0               	clrf	spi@rw
  5082  1D89  0AF0               	incf	spi@rw,f
  5083  1D8A  30BF               	movlw	191
  5084  1D8B  160A  158A  21B5  160A  158A  	fcall	_spi
  5085                           
  5086                           ;main.c: 912: spi(0b00000100,1);
  5087  1D90  01F0               	clrf	spi@rw
  5088  1D91  0AF0               	incf	spi@rw,f
  5089  1D92  3004               	movlw	4
  5090  1D93  160A  158A  21B5  160A  158A  	fcall	_spi
  5091                           
  5092                           ;main.c: 913: PORTBbits.RB2 = 1;
  5093  1D98  1283               	bcf	3,5	;RP0=0, select bank0
  5094  1D99  1303               	bcf	3,6	;RP1=0, select bank0
  5095  1D9A  1506               	bsf	6,2	;volatile
  5096                           
  5097                           ;main.c: 914: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5098  1D9B  3006               	movlw	6
  5099  1D9C  00FA               	movwf	??_rx_int
  5100  1D9D                     u475_27:	
  5101  1D9D  0BFA               	decfsz	??_rx_int,f
  5102  1D9E  2D9D               	goto	u475_27
  5103  1D9F  0000               	nop
  5104                           
  5105                           ;main.c: 915: PORTBbits.RB2 = 0;
  5106  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  5107  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  5108  1DA2  1106               	bcf	6,2	;volatile
  5109                           
  5110                           ;main.c: 916: spi(0x1C | 0xA0,1);
  5111  1DA3  01F0               	clrf	spi@rw
  5112  1DA4  0AF0               	incf	spi@rw,f
  5113  1DA5  30BC               	movlw	188
  5114  1DA6  160A  158A  21B5  160A  158A  	fcall	_spi
  5115                           
  5116                           ;main.c: 917: spi(0b00000001,1);
  5117  1DAB  01F0               	clrf	spi@rw
  5118  1DAC  0AF0               	incf	spi@rw,f
  5119  1DAD  3001               	movlw	1
  5120  1DAE  160A  158A  21B5  160A  158A  	fcall	_spi
  5121                           
  5122                           ;main.c: 918: PORTBbits.RB2 = 1;
  5123  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
  5124  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
  5125  1DB5  1506               	bsf	6,2	;volatile
  5126                           
  5127                           ;main.c: 919: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5128  1DB6  3006               	movlw	6
  5129  1DB7  00FA               	movwf	??_rx_int
  5130  1DB8                     u476_27:	
  5131  1DB8  0BFA               	decfsz	??_rx_int,f
  5132  1DB9  2DB8               	goto	u476_27
  5133  1DBA  0000               	nop
  5134                           
  5135                           ;main.c: 920: PORTBbits.RB2 = 0;
  5136  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  5137  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  5138  1DBD  1106               	bcf	6,2	;volatile
  5139                           
  5140                           ;main.c: 921: spi(0x1F | 0xA0,1);
  5141  1DBE  01F0               	clrf	spi@rw
  5142  1DBF  0AF0               	incf	spi@rw,f
  5143  1DC0  30BF               	movlw	191
  5144  1DC1  160A  158A  21B5  160A  158A  	fcall	_spi
  5145                           
  5146                           ;main.c: 922: spi(0x03,1);
  5147  1DC6  01F0               	clrf	spi@rw
  5148  1DC7  0AF0               	incf	spi@rw,f
  5149  1DC8  3003               	movlw	3
  5150  1DC9  160A  158A  21B5  160A  158A  	fcall	_spi
  5151                           
  5152                           ;main.c: 923: PORTBbits.RB2 = 1;
  5153  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  5154  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  5155  1DD0  1506               	bsf	6,2	;volatile
  5156                           
  5157                           ;main.c: 924: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5158  1DD1  3006               	movlw	6
  5159  1DD2  00FA               	movwf	??_rx_int
  5160  1DD3                     u477_27:	
  5161  1DD3  0BFA               	decfsz	??_rx_int,f
  5162  1DD4  2DD3               	goto	u477_27
  5163  1DD5  0000               	nop
  5164                           
  5165                           ;main.c: 925: PORTBbits.RB2 = 0;
  5166  1DD6  1283               	bcf	3,5	;RP0=0, select bank0
  5167  1DD7  1303               	bcf	3,6	;RP1=0, select bank0
  5168  1DD8  1106               	bcf	6,2	;volatile
  5169                           
  5170                           ;main.c: 926: spi(0x1F | 0x80,1);
  5171  1DD9  01F0               	clrf	spi@rw
  5172  1DDA  0AF0               	incf	spi@rw,f
  5173  1DDB  309F               	movlw	159
  5174  1DDC  160A  158A  21B5  160A  158A  	fcall	_spi
  5175                           
  5176                           ;main.c: 927: spi(0x01,1);
  5177  1DE1  01F0               	clrf	spi@rw
  5178  1DE2  0AF0               	incf	spi@rw,f
  5179  1DE3  3001               	movlw	1
  5180  1DE4  160A  158A  21B5  160A  158A  	fcall	_spi
  5181                           
  5182                           ;main.c: 928: PORTBbits.RB2 = 1;
  5183  1DE9  1283               	bcf	3,5	;RP0=0, select bank0
  5184  1DEA  1303               	bcf	3,6	;RP1=0, select bank0
  5185  1DEB  1506               	bsf	6,2	;volatile
  5186                           
  5187                           ;main.c: 929: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5188  1DEC  3006               	movlw	6
  5189  1DED  00FA               	movwf	??_rx_int
  5190  1DEE                     u478_27:	
  5191  1DEE  0BFA               	decfsz	??_rx_int,f
  5192  1DEF  2DEE               	goto	u478_27
  5193  1DF0  0000               	nop
  5194  1DF1                     L7:	
  5195                           
  5196                           ;main.c: 930: PORTBbits.RB2 = 0;
  5197  1DF1  1283               	bcf	3,5	;RP0=0, select bank0
  5198  1DF2  1303               	bcf	3,6	;RP1=0, select bank0
  5199  1DF3  1106               	bcf	6,2	;volatile
  5200                           
  5201                           ;main.c: 931: spi(0x19,1);
  5202  1DF4  01F0               	clrf	spi@rw
  5203  1DF5  0AF0               	incf	spi@rw,f
  5204  1DF6  3019               	movlw	25
  5205  1DF7  160A  158A  21B5  160A  158A  	fcall	_spi
  5206                           
  5207                           ;main.c: 932: count = spi(0,0);
  5208  1DFC  01F0               	clrf	spi@rw
  5209  1DFD  3000               	movlw	0
  5210  1DFE  160A  158A  21B5  160A  158A  	fcall	_spi
  5211  1E03  00FA               	movwf	??_rx_int
  5212  1E04  087A               	movf	??_rx_int,w
  5213  1E05  00FC               	movwf	rx_int@count
  5214                           
  5215                           ;main.c: 940: PORTBbits.RB2 = 1;
  5216  1E06  1283               	bcf	3,5	;RP0=0, select bank0
  5217  1E07  1303               	bcf	3,6	;RP1=0, select bank0
  5218  1E08  1506               	bsf	6,2	;volatile
  5219  1E09  087C               	movf	rx_int@count,w
  5220  1E0A  1903               	btfsc	3,2
  5221  1E0B  2E17               	goto	i1l4460
  5222                           
  5223                           ;main.c: 935: read_buff();
  5224                           
  5225                           ;main.c: 934: while (count > 0) {
  5226                           
  5227                           ;main.c: 933: PORTBbits.RB2 = 1;
  5228  1E0C  120A  118A  203C  160A  158A  	fcall	_read_buff
  5229                           
  5230                           ;main.c: 936: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5231  1E11  3006               	movlw	6
  5232  1E12  00FA               	movwf	??_rx_int
  5233  1E13                     u479_27:	
  5234  1E13  0BFA               	decfsz	??_rx_int,f
  5235  1E14  2E13               	goto	u479_27
  5236  1E15  0000               	nop
  5237  1E16  2DF1               	goto	L7
  5238  1E17                     i1l4460:	
  5239                           ;main.c: 939: count = spi(0,0);
  5240                           
  5241                           ;main.c: 938: spi(0x19,1);
  5242                           
  5243                           ;main.c: 937: PORTBbits.RB2 = 0;
  5244                           
  5245                           
  5246                           ;main.c: 941: }
  5247                           ;main.c: 942: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5248  1E17  3006               	movlw	6
  5249  1E18  00FA               	movwf	??_rx_int
  5250  1E19                     u480_27:	
  5251  1E19  0BFA               	decfsz	??_rx_int,f
  5252  1E1A  2E19               	goto	u480_27
  5253  1E1B  0000               	nop
  5254                           
  5255                           ;main.c: 943: PORTBbits.RB2 = 0;
  5256  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  5257  1E1D  1303               	bcf	3,6	;RP1=0, select bank0
  5258  1E1E  1106               	bcf	6,2	;volatile
  5259                           
  5260                           ;main.c: 944: spi(0x1F | 0x80,1);
  5261  1E1F  01F0               	clrf	spi@rw
  5262  1E20  0AF0               	incf	spi@rw,f
  5263  1E21  309F               	movlw	159
  5264  1E22  160A  158A  21B5  160A  158A  	fcall	_spi
  5265                           
  5266                           ;main.c: 945: spi(0b00000100,1);
  5267  1E27  01F0               	clrf	spi@rw
  5268  1E28  0AF0               	incf	spi@rw,f
  5269  1E29  3004               	movlw	4
  5270  1E2A  160A  158A  21B5   	fcall	_spi
  5271                           
  5272                           ;main.c: 946: PORTBbits.RB2 = 1;
  5273  1E2D  1283               	bcf	3,5	;RP0=0, select bank0
  5274  1E2E  1303               	bcf	3,6	;RP1=0, select bank0
  5275  1E2F  1506               	bsf	6,2	;volatile
  5276                           
  5277                           ;main.c: 947: } else {
  5278  1E30  0008               	return
  5279  1E31                     i1l306:	
  5280                           
  5281                           ;main.c: 948: PORTBbits.RB2 = 0;
  5282  1E31  1283               	bcf	3,5	;RP0=0, select bank0
  5283  1E32  1303               	bcf	3,6	;RP1=0, select bank0
  5284  1E33  1106               	bcf	6,2	;volatile
  5285                           
  5286                           ;main.c: 949: spi(0x1B | 0xA0, 1);
  5287  1E34  01F0               	clrf	spi@rw
  5288  1E35  0AF0               	incf	spi@rw,f
  5289  1E36  30BB               	movlw	187
  5290  1E37  160A  158A  21B5  160A  158A  	fcall	_spi
  5291                           
  5292                           ;main.c: 950: spi(0b10000000, 1);
  5293  1E3C  01F0               	clrf	spi@rw
  5294  1E3D  0AF0               	incf	spi@rw,f
  5295  1E3E  3080               	movlw	128
  5296  1E3F  160A  158A  21B5  160A  158A  	fcall	_spi
  5297                           
  5298                           ;main.c: 951: PORTBbits.RB2 = 1;
  5299  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  5300  1E45  1303               	bcf	3,6	;RP1=0, select bank0
  5301  1E46  1506               	bsf	6,2	;volatile
  5302                           
  5303                           ;main.c: 952: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5304  1E47  3006               	movlw	6
  5305  1E48  00FA               	movwf	??_rx_int
  5306  1E49                     u481_27:	
  5307  1E49  0BFA               	decfsz	??_rx_int,f
  5308  1E4A  2E49               	goto	u481_27
  5309  1E4B  0000               	nop
  5310                           
  5311                           ;main.c: 953: read_buff();
  5312  1E4C  120A  118A  203C  160A  158A  	fcall	_read_buff
  5313                           
  5314                           ;main.c: 954: _delay((unsigned long)((10)*(8000000/4000000.0)));
  5315  1E51  3006               	movlw	6
  5316  1E52  00FA               	movwf	??_rx_int
  5317  1E53                     u482_27:	
  5318  1E53  0BFA               	decfsz	??_rx_int,f
  5319  1E54  2E53               	goto	u482_27
  5320  1E55  0000               	nop
  5321                           
  5322                           ;main.c: 955: PORTBbits.RB2 = 0;
  5323  1E56  1283               	bcf	3,5	;RP0=0, select bank0
  5324  1E57  1303               	bcf	3,6	;RP1=0, select bank0
  5325  1E58  1106               	bcf	6,2	;volatile
  5326                           
  5327                           ;main.c: 956: spi(0x1B | 0x80, 1);
  5328  1E59  01F0               	clrf	spi@rw
  5329  1E5A  0AF0               	incf	spi@rw,f
  5330  1E5B  309B               	movlw	155
  5331  1E5C  160A  158A  21B5  160A  158A  	fcall	_spi
  5332                           
  5333                           ;main.c: 957: spi(0b10000000, 1);
  5334  1E61  01F0               	clrf	spi@rw
  5335  1E62  0AF0               	incf	spi@rw,f
  5336  1E63  3080               	movlw	128
  5337  1E64  160A  158A  21B5   	fcall	_spi
  5338                           
  5339                           ;main.c: 958: PORTBbits.RB2 = 1;
  5340  1E67  1283               	bcf	3,5	;RP0=0, select bank0
  5341  1E68  1303               	bcf	3,6	;RP1=0, select bank0
  5342  1E69  1506               	bsf	6,2	;volatile
  5343  1E6A  0008               	return
  5344  1E6B                     __end_of_rx_int:	
  5345                           
  5346                           	psect	text11
  5347  003C                     __ptext11:	
  5348 ;; *************** function _read_buff *****************
  5349 ;; Defined at:
  5350 ;;		line 473 in file "main.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  i               1   20[BANK0 ] unsigned char 
  5355 ;;  i               1   19[BANK0 ] unsigned char 
  5356 ;;  i               1   18[BANK0 ] unsigned char 
  5357 ;;  i               1   17[BANK0 ] unsigned char 
  5358 ;;  i               1   23[BANK0 ] unsigned char 
  5359 ;;  i               1   25[BANK0 ] unsigned char 
  5360 ;;  i               1   24[BANK0 ] unsigned char 
  5361 ;;  i               1   10[BANK0 ] unsigned char 
  5362 ;;  i               1    0[BANK0 ] unsigned char 
  5363 ;;  i               1    9[BANK0 ] unsigned char 
  5364 ;;  i               1   16[BANK0 ] unsigned char 
  5365 ;;  i               1   22[BANK0 ] unsigned char 
  5366 ;;  i               1   11[BANK0 ] unsigned char 
  5367 ;;  i               1   21[BANK0 ] unsigned char 
  5368 ;;  i               1   15[BANK0 ] unsigned char 
  5369 ;;  i               1   14[BANK0 ] unsigned char 
  5370 ;;  i               2    5[BANK0 ] unsigned int 
  5371 ;;  i               2    3[BANK0 ] unsigned int 
  5372 ;;  i               1   13[BANK0 ] unsigned char 
  5373 ;;  i               1   12[BANK0 ] unsigned char 
  5374 ;;  aux             2    1[BANK0 ] unsigned int 
  5375 ;;  inL             1   27[BANK0 ] unsigned char 
  5376 ;;  inH             1   26[BANK0 ] unsigned char 
  5377 ;;  ptrH            1    8[BANK0 ] unsigned char 
  5378 ;;  ptrL            1    7[BANK0 ] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5388 ;;      Params:         0       0       0       0       0
  5389 ;;      Locals:         0      28       0       0       0
  5390 ;;      Temps:          4       0       0       0       0
  5391 ;;      Totals:         4      28       0       0       0
  5392 ;;Total ram usage:       32 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    1
  5395 ;; This function calls:
  5396 ;;		_spi
  5397 ;; This function is called by:
  5398 ;;		_rx_int
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _read_buff
  5404  003C                     _read_buff:	
  5405                           
  5406                           ;main.c: 474: char inL, inH, ptrL, ptrH;
  5407                           ;main.c: 475: unsigned int aux;
  5408                           ;main.c: 476: static bit match;
  5409                           ;main.c: 478: PORTBbits.RB2 = 0;
  5410                           
  5411                           ;incstack = 0
  5412                           ; Regs used in _read_buff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5413  003C  1283               	bcf	3,5	;RP0=0, select bank0
  5414  003D  1303               	bcf	3,6	;RP1=0, select bank0
  5415  003E  1106               	bcf	6,2	;volatile
  5416                           
  5417                           ;main.c: 479: spi(0x3A,1);
  5418  003F  01F0               	clrf	spi@rw
  5419  0040  0AF0               	incf	spi@rw,f
  5420  0041  303A               	movlw	58
  5421  0042  160A  158A  21B5  120A  118A  	fcall	_spi
  5422                           
  5423                           ;main.c: 480: ptrL = spi(0x00,0);
  5424  0047  01F0               	clrf	spi@rw
  5425  0048  3000               	movlw	0
  5426  0049  160A  158A  21B5  120A  118A  	fcall	_spi
  5427  004E  00F6               	movwf	??_read_buff
  5428  004F  0876               	movf	??_read_buff,w
  5429  0050  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0051  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0052  00A7               	movwf	read_buff@ptrL
  5432                           
  5433                           ;main.c: 481: ptrH = spi(0x00,0);
  5434  0053  01F0               	clrf	spi@rw
  5435  0054  3000               	movlw	0
  5436  0055  160A  158A  21B5  120A  118A  	fcall	_spi
  5437  005A  00F6               	movwf	??_read_buff
  5438  005B  0876               	movf	??_read_buff,w
  5439  005C  1283               	bcf	3,5	;RP0=0, select bank0
  5440  005D  1303               	bcf	3,6	;RP1=0, select bank0
  5441  005E  00A8               	movwf	read_buff@ptrH
  5442                           
  5443                           ;main.c: 482: inL = spi(0x00,0);
  5444  005F  01F0               	clrf	spi@rw
  5445  0060  3000               	movlw	0
  5446  0061  160A  158A  21B5  120A  118A  	fcall	_spi
  5447  0066  00F6               	movwf	??_read_buff
  5448  0067  0876               	movf	??_read_buff,w
  5449  0068  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0069  1303               	bcf	3,6	;RP1=0, select bank0
  5451  006A  00BB               	movwf	read_buff@inL
  5452                           
  5453                           ;main.c: 483: inH = spi(0x00,0);
  5454  006B  01F0               	clrf	spi@rw
  5455  006C  3000               	movlw	0
  5456  006D  160A  158A  21B5  120A  118A  	fcall	_spi
  5457  0072  00F6               	movwf	??_read_buff
  5458  0073  0876               	movf	??_read_buff,w
  5459  0074  1283               	bcf	3,5	;RP0=0, select bank0
  5460  0075  1303               	bcf	3,6	;RP1=0, select bank0
  5461  0076  00BA               	movwf	read_buff@inH
  5462                           
  5463                           ;main.c: 484: inL = spi(0x00,0);
  5464  0077  01F0               	clrf	spi@rw
  5465  0078  3000               	movlw	0
  5466  0079  160A  158A  21B5  120A  118A  	fcall	_spi
  5467  007E  00F6               	movwf	??_read_buff
  5468  007F  0876               	movf	??_read_buff,w
  5469  0080  1283               	bcf	3,5	;RP0=0, select bank0
  5470  0081  1303               	bcf	3,6	;RP1=0, select bank0
  5471  0082  00BB               	movwf	read_buff@inL
  5472                           
  5473                           ;main.c: 485: inH = spi(0x00,0);
  5474  0083  01F0               	clrf	spi@rw
  5475  0084  3000               	movlw	0
  5476  0085  160A  158A  21B5  120A  118A  	fcall	_spi
  5477  008A  00F6               	movwf	??_read_buff
  5478  008B  0876               	movf	??_read_buff,w
  5479  008C  1283               	bcf	3,5	;RP0=0, select bank0
  5480  008D  1303               	bcf	3,6	;RP1=0, select bank0
  5481  008E  00BA               	movwf	read_buff@inH
  5482                           
  5483                           ;main.c: 486: for (char i=0;i<6;i++) {
  5484  008F  01AC               	clrf	read_buff@i
  5485  0090  3006               	movlw	6
  5486  0091  022C               	subwf	read_buff@i,w
  5487  0092  1803               	btfsc	3,0
  5488  0093  28AC               	goto	i1l3244
  5489  0094                     i1l3238:	
  5490                           
  5491                           ;main.c: 487: link_rx.MAC_d[i] = spi(0,0);
  5492  0094  01F0               	clrf	spi@rw
  5493  0095  3000               	movlw	0
  5494  0096  160A  158A  21B5  120A  118A  	fcall	_spi
  5495  009B  00F6               	movwf	??_read_buff
  5496  009C  1283               	bcf	3,5	;RP0=0, select bank0
  5497  009D  1303               	bcf	3,6	;RP1=0, select bank0
  5498  009E  082C               	movf	read_buff@i,w
  5499  009F  3ED2               	addlw	(low (_link_rx| (0+256)))& (0+255)
  5500  00A0  0084               	movwf	4
  5501  00A1  0876               	movf	??_read_buff,w
  5502  00A2  1783               	bsf	3,7	;select IRP bank3
  5503  00A3  0080               	movwf	0
  5504  00A4  3001               	movlw	1
  5505  00A5  00F6               	movwf	??_read_buff
  5506  00A6  0876               	movf	??_read_buff,w
  5507  00A7  07AC               	addwf	read_buff@i,f
  5508  00A8  3006               	movlw	6
  5509  00A9  022C               	subwf	read_buff@i,w
  5510  00AA  1C03               	skipc
  5511  00AB  2894               	goto	i1l3238
  5512  00AC                     i1l3244:	
  5513                           
  5514                           ;main.c: 488: }
  5515                           ;main.c: 489: for (char i=0;i<6;i++) {
  5516  00AC  01AD               	clrf	read_buff@i_745
  5517  00AD  3006               	movlw	6
  5518  00AE  022D               	subwf	read_buff@i_745,w
  5519  00AF  1803               	btfsc	3,0
  5520  00B0  28C9               	goto	i1l3256
  5521  00B1                     i1l3250:	
  5522                           
  5523                           ;main.c: 490: link_rx.MAC_s[i] = spi(0,0);
  5524  00B1  01F0               	clrf	spi@rw
  5525  00B2  3000               	movlw	0
  5526  00B3  160A  158A  21B5  120A  118A  	fcall	_spi
  5527  00B8  00F6               	movwf	??_read_buff
  5528  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  5529  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  5530  00BB  082D               	movf	read_buff@i_745,w
  5531  00BC  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  5532  00BD  0084               	movwf	4
  5533  00BE  0876               	movf	??_read_buff,w
  5534  00BF  1783               	bsf	3,7	;select IRP bank3
  5535  00C0  0080               	movwf	0
  5536  00C1  3001               	movlw	1
  5537  00C2  00F6               	movwf	??_read_buff
  5538  00C3  0876               	movf	??_read_buff,w
  5539  00C4  07AD               	addwf	read_buff@i_745,f
  5540  00C5  3006               	movlw	6
  5541  00C6  022D               	subwf	read_buff@i_745,w
  5542  00C7  1C03               	skipc
  5543  00C8  28B1               	goto	i1l3250
  5544  00C9                     i1l3256:	
  5545                           
  5546                           ;main.c: 491: }
  5547                           ;main.c: 492: inH = spi(0x00,0);
  5548  00C9  01F0               	clrf	spi@rw
  5549  00CA  3000               	movlw	0
  5550  00CB  160A  158A  21B5  120A  118A  	fcall	_spi
  5551  00D0  00F6               	movwf	??_read_buff
  5552  00D1  0876               	movf	??_read_buff,w
  5553  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  5554  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  5555  00D4  00BA               	movwf	read_buff@inH
  5556                           
  5557                           ;main.c: 493: inL = spi(0x00,0);
  5558  00D5  01F0               	clrf	spi@rw
  5559  00D6  3000               	movlw	0
  5560  00D7  160A  158A  21B5  120A  118A  	fcall	_spi
  5561  00DC  00F6               	movwf	??_read_buff
  5562  00DD  0876               	movf	??_read_buff,w
  5563  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  5564  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  5565  00E0  00BB               	movwf	read_buff@inL
  5566                           
  5567                           ;main.c: 494: aux = inH;
  5568  00E1  083A               	movf	read_buff@inH,w
  5569  00E2  00F6               	movwf	??_read_buff
  5570  00E3  01F7               	clrf	??_read_buff+1
  5571  00E4  0876               	movf	??_read_buff,w
  5572  00E5  00A1               	movwf	read_buff@aux
  5573  00E6  0877               	movf	??_read_buff+1,w
  5574  00E7  00A2               	movwf	read_buff@aux+1
  5575                           
  5576                           ;main.c: 495: aux = (aux << 8) + inL;
  5577  00E8  0821               	movf	read_buff@aux,w
  5578  00E9  00F7               	movwf	??_read_buff+1
  5579  00EA  01F6               	clrf	??_read_buff
  5580  00EB  083B               	movf	read_buff@inL,w
  5581  00EC  0776               	addwf	??_read_buff,w
  5582  00ED  00A1               	movwf	read_buff@aux
  5583  00EE  3000               	movlw	0
  5584  00EF  1803               	skipnc
  5585  00F0  3001               	movlw	1
  5586  00F1  0777               	addwf	??_read_buff+1,w
  5587  00F2  00A2               	movwf	read_buff@aux+1
  5588                           
  5589                           ;main.c: 496: switch (aux) {
  5590  00F3  2D74               	goto	i1l3572
  5591  00F4                     i1l3262:	
  5592                           ;main.c: 497: case 0x0800:
  5593                           
  5594                           
  5595                           ;main.c: 498: spi(0,0);
  5596  00F4  01F0               	clrf	spi@rw
  5597  00F5  3000               	movlw	0
  5598  00F6  160A  158A  21B5  120A  118A  	fcall	_spi
  5599                           
  5600                           ;main.c: 499: spi(0,0);
  5601  00FB  01F0               	clrf	spi@rw
  5602  00FC  3000               	movlw	0
  5603  00FD  160A  158A  21B5  120A  118A  	fcall	_spi
  5604                           
  5605                           ;main.c: 500: ip_rx.total_length[0] = spi(0,0);
  5606  0102  01F0               	clrf	spi@rw
  5607  0103  3000               	movlw	0
  5608  0104  160A  158A  21B5  120A  118A  	fcall	_spi
  5609  0109  00F6               	movwf	??_read_buff
  5610  010A  0876               	movf	??_read_buff,w
  5611  010B  1683               	bsf	3,5	;RP0=1, select bank3
  5612  010C  1703               	bsf	3,6	;RP1=1, select bank3
  5613  010D  00C0               	movwf	(_ip_rx^(0+384)+2)
  5614                           
  5615                           ;main.c: 501: ip_rx.total_length[1] = spi(0,0);
  5616  010E  01F0               	clrf	spi@rw
  5617  010F  3000               	movlw	0
  5618  0110  160A  158A  21B5  120A  118A  	fcall	_spi
  5619  0115  00F6               	movwf	??_read_buff
  5620  0116  0876               	movf	??_read_buff,w
  5621  0117  1683               	bsf	3,5	;RP0=1, select bank3
  5622  0118  1703               	bsf	3,6	;RP1=1, select bank3
  5623  0119  00C1               	movwf	(_ip_rx^(0+384)+3)
  5624                           
  5625                           ;main.c: 502: ip_rx.id[0] = spi(0,0);
  5626  011A  01F0               	clrf	spi@rw
  5627  011B  3000               	movlw	0
  5628  011C  160A  158A  21B5  120A  118A  	fcall	_spi
  5629  0121  00F6               	movwf	??_read_buff
  5630  0122  0876               	movf	??_read_buff,w
  5631  0123  1683               	bsf	3,5	;RP0=1, select bank3
  5632  0124  1703               	bsf	3,6	;RP1=1, select bank3
  5633  0125  00C2               	movwf	(_ip_rx^(0+384)+4)
  5634                           
  5635                           ;main.c: 503: ip_rx.id[1] = spi(0,0);
  5636  0126  01F0               	clrf	spi@rw
  5637  0127  3000               	movlw	0
  5638  0128  160A  158A  21B5  120A  118A  	fcall	_spi
  5639  012D  00F6               	movwf	??_read_buff
  5640  012E  0876               	movf	??_read_buff,w
  5641  012F  1683               	bsf	3,5	;RP0=1, select bank3
  5642  0130  1703               	bsf	3,6	;RP1=1, select bank3
  5643  0131  00C3               	movwf	(_ip_rx^(0+384)+5)
  5644                           
  5645                           ;main.c: 504: for (unsigned int i=0;i<3;i++) {
  5646  0132  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0133  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0134  01A3               	clrf	read_buff@i_746
  5649  0135  01A4               	clrf	read_buff@i_746+1
  5650  0136  3000               	movlw	0
  5651  0137  0224               	subwf	read_buff@i_746+1,w
  5652  0138  3003               	movlw	3
  5653  0139  1903               	skipnz
  5654  013A  0223               	subwf	read_buff@i_746,w
  5655  013B  1803               	btfsc	3,0
  5656  013C  2953               	goto	i1l3276
  5657  013D                     i1l3270:	
  5658                           
  5659                           ;main.c: 505: spi(0,0);
  5660  013D  01F0               	clrf	spi@rw
  5661  013E  3000               	movlw	0
  5662  013F  160A  158A  21B5  120A  118A  	fcall	_spi
  5663  0144  3001               	movlw	1
  5664  0145  1283               	bcf	3,5	;RP0=0, select bank0
  5665  0146  1303               	bcf	3,6	;RP1=0, select bank0
  5666  0147  07A3               	addwf	read_buff@i_746,f
  5667  0148  1803               	skipnc
  5668  0149  0AA4               	incf	read_buff@i_746+1,f
  5669  014A  3000               	movlw	0
  5670  014B  07A4               	addwf	read_buff@i_746+1,f
  5671  014C  3000               	movlw	0
  5672  014D  0224               	subwf	read_buff@i_746+1,w
  5673  014E  3003               	movlw	3
  5674  014F  1903               	skipnz
  5675  0150  0223               	subwf	read_buff@i_746,w
  5676  0151  1C03               	skipc
  5677  0152  293D               	goto	i1l3270
  5678  0153                     i1l3276:	
  5679                           
  5680                           ;main.c: 506: }
  5681                           ;main.c: 507: ip_rx.protocol = spi(0,0);
  5682  0153  01F0               	clrf	spi@rw
  5683  0154  3000               	movlw	0
  5684  0155  160A  158A  21B5  120A  118A  	fcall	_spi
  5685  015A  00F6               	movwf	??_read_buff
  5686  015B  0876               	movf	??_read_buff,w
  5687  015C  1683               	bsf	3,5	;RP0=1, select bank3
  5688  015D  1703               	bsf	3,6	;RP1=1, select bank3
  5689  015E  00C7               	movwf	(_ip_rx^(0+384)+9)
  5690                           
  5691                           ;main.c: 508: for (unsigned int i=0;i<2;i++) {
  5692  015F  1283               	bcf	3,5	;RP0=0, select bank0
  5693  0160  1303               	bcf	3,6	;RP1=0, select bank0
  5694  0161  01A5               	clrf	read_buff@i_747
  5695  0162  01A6               	clrf	read_buff@i_747+1
  5696  0163  3000               	movlw	0
  5697  0164  0226               	subwf	read_buff@i_747+1,w
  5698  0165  3002               	movlw	2
  5699  0166  1903               	skipnz
  5700  0167  0225               	subwf	read_buff@i_747,w
  5701  0168  1803               	btfsc	3,0
  5702  0169  2980               	goto	i1l3290
  5703  016A                     i1l3284:	
  5704                           
  5705                           ;main.c: 509: spi(0,0);
  5706  016A  01F0               	clrf	spi@rw
  5707  016B  3000               	movlw	0
  5708  016C  160A  158A  21B5  120A  118A  	fcall	_spi
  5709  0171  3001               	movlw	1
  5710  0172  1283               	bcf	3,5	;RP0=0, select bank0
  5711  0173  1303               	bcf	3,6	;RP1=0, select bank0
  5712  0174  07A5               	addwf	read_buff@i_747,f
  5713  0175  1803               	skipnc
  5714  0176  0AA6               	incf	read_buff@i_747+1,f
  5715  0177  3000               	movlw	0
  5716  0178  07A6               	addwf	read_buff@i_747+1,f
  5717  0179  3000               	movlw	0
  5718  017A  0226               	subwf	read_buff@i_747+1,w
  5719  017B  3002               	movlw	2
  5720  017C  1903               	skipnz
  5721  017D  0225               	subwf	read_buff@i_747,w
  5722  017E  1C03               	skipc
  5723  017F  296A               	goto	i1l3284
  5724  0180                     i1l3290:	
  5725                           
  5726                           ;main.c: 510: }
  5727                           ;main.c: 511: for (char i=0;i<4;i++) {
  5728  0180  01AE               	clrf	read_buff@i_748
  5729  0181  3004               	movlw	4
  5730  0182  022E               	subwf	read_buff@i_748,w
  5731  0183  1803               	btfsc	3,0
  5732  0184  299D               	goto	i1l3302
  5733  0185                     i1l3296:	
  5734                           
  5735                           ;main.c: 512: ip_rx.IP_s[i] = spi(0,0);
  5736  0185  01F0               	clrf	spi@rw
  5737  0186  3000               	movlw	0
  5738  0187  160A  158A  21B5  120A  118A  	fcall	_spi
  5739  018C  00F6               	movwf	??_read_buff
  5740  018D  1283               	bcf	3,5	;RP0=0, select bank0
  5741  018E  1303               	bcf	3,6	;RP1=0, select bank0
  5742  018F  082E               	movf	read_buff@i_748,w
  5743  0190  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  5744  0191  0084               	movwf	4
  5745  0192  0876               	movf	??_read_buff,w
  5746  0193  1783               	bsf	3,7	;select IRP bank3
  5747  0194  0080               	movwf	0
  5748  0195  3001               	movlw	1
  5749  0196  00F6               	movwf	??_read_buff
  5750  0197  0876               	movf	??_read_buff,w
  5751  0198  07AE               	addwf	read_buff@i_748,f
  5752  0199  3004               	movlw	4
  5753  019A  022E               	subwf	read_buff@i_748,w
  5754  019B  1C03               	skipc
  5755  019C  2985               	goto	i1l3296
  5756  019D                     i1l3302:	
  5757                           
  5758                           ;main.c: 513: }
  5759                           ;main.c: 514: for (char i=0;i<4;i++) {
  5760  019D  01AF               	clrf	read_buff@i_749
  5761  019E  3004               	movlw	4
  5762  019F  022F               	subwf	read_buff@i_749,w
  5763  01A0  1803               	btfsc	3,0
  5764  01A1  29BA               	goto	i1l3314
  5765  01A2                     i1l3308:	
  5766                           
  5767                           ;main.c: 515: ip_rx.IP_d[i] = spi(0,0);
  5768  01A2  01F0               	clrf	spi@rw
  5769  01A3  3000               	movlw	0
  5770  01A4  160A  158A  21B5  120A  118A  	fcall	_spi
  5771  01A9  00F6               	movwf	??_read_buff
  5772  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  5773  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  5774  01AC  082F               	movf	read_buff@i_749,w
  5775  01AD  3ECE               	addlw	(low ((_ip_rx| (0+256)+16)))& (0+255)
  5776  01AE  0084               	movwf	4
  5777  01AF  0876               	movf	??_read_buff,w
  5778  01B0  1783               	bsf	3,7	;select IRP bank3
  5779  01B1  0080               	movwf	0
  5780  01B2  3001               	movlw	1
  5781  01B3  00F6               	movwf	??_read_buff
  5782  01B4  0876               	movf	??_read_buff,w
  5783  01B5  07AF               	addwf	read_buff@i_749,f
  5784  01B6  3004               	movlw	4
  5785  01B7  022F               	subwf	read_buff@i_749,w
  5786  01B8  1C03               	skipc
  5787  01B9  29A2               	goto	i1l3308
  5788  01BA                     i1l3314:	
  5789                           
  5790                           ;main.c: 516: }
  5791                           ;main.c: 517: for (char i=0;i<4;i++) {
  5792  01BA  01B5               	clrf	read_buff@i_750
  5793  01BB                     L11:	
  5794  01BB  3004               	movlw	4
  5795  01BC  0235               	subwf	read_buff@i_750,w
  5796  01BD  1803               	btfsc	3,0
  5797  01BE  2C85               	goto	i1l3504
  5798                           
  5799                           ;main.c: 518: if (ip_rx.IP_d[i] != ip_tx.IP_s[i]) {
  5800  01BF  0835               	movf	read_buff@i_750,w
  5801  01C0  3ECF               	addlw	(low ((_ip_tx| 0+12)))& (0+255)
  5802  01C1  0084               	movwf	4
  5803  01C2  1383               	bcf	3,7	;select IRP bank1
  5804  01C3  0800               	movf	0,w
  5805  01C4  00F6               	movwf	??_read_buff
  5806  01C5  0835               	movf	read_buff@i_750,w
  5807  01C6  3ECE               	addlw	(low ((_ip_rx| (0+256)+16)))& (0+255)
  5808  01C7  0084               	movwf	4
  5809  01C8  1783               	bsf	3,7	;select IRP bank3
  5810  01C9  0800               	movf	0,w
  5811  01CA  0676               	xorwf	??_read_buff,w
  5812  01CB  1903               	skipnz
  5813  01CC  29D3               	goto	i1l3324
  5814                           
  5815                           ;main.c: 519: ip_rx.protocol = 143;
  5816  01CD  308F               	movlw	143
  5817  01CE  00F6               	movwf	??_read_buff
  5818  01CF  0876               	movf	??_read_buff,w
  5819  01D0  1683               	bsf	3,5	;RP0=1, select bank3
  5820  01D1  1703               	bsf	3,6	;RP1=1, select bank3
  5821  01D2  00C7               	movwf	(_ip_rx^(0+384)+9)
  5822  01D3                     i1l3324:	
  5823  01D3  3001               	movlw	1
  5824  01D4  00F6               	movwf	??_read_buff
  5825  01D5  0876               	movf	??_read_buff,w
  5826  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  5827  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  5828  01D8  07B5               	addwf	read_buff@i_750,f
  5829  01D9  29BB               	goto	L11
  5830  01DA                     i1l3328:	
  5831                           ;main.c: 523: case 1:
  5832                           
  5833                           ;main.c: 520: }
  5834                           ;main.c: 521: }
  5835                           ;main.c: 522: switch (ip_rx.protocol) {
  5836                           
  5837                           
  5838                           ;main.c: 524: if (spi(0,0) == 8) {
  5839  01DA  01F0               	clrf	spi@rw
  5840  01DB  3000               	movlw	0
  5841  01DC  160A  158A  21B5  120A  118A  	fcall	_spi
  5842  01E1  3A08               	xorlw	8
  5843  01E2  1D03               	skipz
  5844  01E3  2D81               	goto	i1l239
  5845                           
  5846                           ;main.c: 525: ping = 1;
  5847  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  5848  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  5849  01E6  14EC               	bsf	_ping/(0+8),_ping& (0+7)
  5850                           
  5851                           ;main.c: 526: ip_tx.protocol = ip_rx.protocol;
  5852  01E7  1683               	bsf	3,5	;RP0=1, select bank3
  5853  01E8  1703               	bsf	3,6	;RP1=1, select bank3
  5854  01E9  0847               	movf	(_ip_rx^(0+384)+9),w
  5855  01EA  00F6               	movwf	??_read_buff
  5856  01EB  0876               	movf	??_read_buff,w
  5857  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  5858  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  5859  01EE  00CC               	movwf	(_ip_tx^(0+128)+9)
  5860                           
  5861                           ;main.c: 527: spi(0,0);
  5862  01EF  01F0               	clrf	spi@rw
  5863  01F0  3000               	movlw	0
  5864  01F1  160A  158A  21B5  120A  118A  	fcall	_spi
  5865                           
  5866                           ;main.c: 528: spi(0,0);
  5867  01F6  01F0               	clrf	spi@rw
  5868  01F7  3000               	movlw	0
  5869  01F8  160A  158A  21B5  120A  118A  	fcall	_spi
  5870                           
  5871                           ;main.c: 529: spi(0,0);
  5872  01FD  01F0               	clrf	spi@rw
  5873  01FE  3000               	movlw	0
  5874  01FF  160A  158A  21B5  120A  118A  	fcall	_spi
  5875                           
  5876                           ;main.c: 530: ping_echo.id[0] = spi(0,0);
  5877  0204  01F0               	clrf	spi@rw
  5878  0205  3000               	movlw	0
  5879  0206  160A  158A  21B5  120A  118A  	fcall	_spi
  5880  020B  00F6               	movwf	??_read_buff
  5881  020C  0876               	movf	??_read_buff,w
  5882  020D  1683               	bsf	3,5	;RP0=1, select bank1
  5883  020E  1303               	bcf	3,6	;RP1=0, select bank1
  5884  020F  00D9               	movwf	(_ping_echo^(0+128)+2)
  5885                           
  5886                           ;main.c: 531: ping_echo.id[1] = spi(0,0);
  5887  0210  01F0               	clrf	spi@rw
  5888  0211  3000               	movlw	0
  5889  0212  160A  158A  21B5  120A  118A  	fcall	_spi
  5890  0217  00F6               	movwf	??_read_buff
  5891  0218  0876               	movf	??_read_buff,w
  5892  0219  1683               	bsf	3,5	;RP0=1, select bank1
  5893  021A  1303               	bcf	3,6	;RP1=0, select bank1
  5894  021B  00DA               	movwf	(_ping_echo^(0+128)+3)
  5895                           
  5896                           ;main.c: 532: ping_echo.seq_num[0] = spi(0,0);
  5897  021C  01F0               	clrf	spi@rw
  5898  021D  3000               	movlw	0
  5899  021E  160A  158A  21B5  120A  118A  	fcall	_spi
  5900  0223  00F6               	movwf	??_read_buff
  5901  0224  0876               	movf	??_read_buff,w
  5902  0225  1683               	bsf	3,5	;RP0=1, select bank1
  5903  0226  1303               	bcf	3,6	;RP1=0, select bank1
  5904  0227  00DB               	movwf	(_ping_echo^(0+128)+4)
  5905                           
  5906                           ;main.c: 533: ping_echo.seq_num[1] = spi(0,0);
  5907  0228  01F0               	clrf	spi@rw
  5908  0229  3000               	movlw	0
  5909  022A  160A  158A  21B5  120A  118A  	fcall	_spi
  5910  022F  00F6               	movwf	??_read_buff
  5911  0230  0876               	movf	??_read_buff,w
  5912  0231  1683               	bsf	3,5	;RP0=1, select bank1
  5913  0232  1303               	bcf	3,6	;RP1=0, select bank1
  5914  0233  00DC               	movwf	(_ping_echo^(0+128)+5)
  5915                           
  5916                           ;main.c: 534: ping_echo.payload = spi(0,0);
  5917  0234  01F0               	clrf	spi@rw
  5918  0235  3000               	movlw	0
  5919  0236  160A  158A  21B5  120A  118A  	fcall	_spi
  5920  023B  00F6               	movwf	??_read_buff
  5921  023C  0876               	movf	??_read_buff,w
  5922  023D  1683               	bsf	3,5	;RP0=1, select bank1
  5923  023E  1303               	bcf	3,6	;RP1=0, select bank1
  5924  023F  00DD               	movwf	(_ping_echo^(0+128)+6)
  5925                           
  5926                           ;main.c: 535: }
  5927                           ;main.c: 536: break;
  5928  0240  2D81               	goto	i1l239
  5929  0241                     i1l3350:	
  5930                           ;main.c: 537: case 6:
  5931                           
  5932                           
  5933                           ;main.c: 538: timeout = 0;
  5934  0241  1283               	bcf	3,5	;RP0=0, select bank0
  5935  0242  1303               	bcf	3,6	;RP1=0, select bank0
  5936  0243  01E6               	clrf	_timeout
  5937  0244  01E7               	clrf	_timeout+1
  5938                           
  5939                           ;main.c: 539: ack = 0;
  5940  0245  3000               	movlw	0
  5941  0246  00E5               	movwf	_ack+3
  5942  0247  3000               	movlw	0
  5943  0248  00E4               	movwf	_ack+2
  5944  0249  3000               	movlw	0
  5945  024A  00E3               	movwf	_ack+1
  5946  024B  3000               	movlw	0
  5947  024C  00E2               	movwf	_ack
  5948                           
  5949                           ;main.c: 540: tcp_tx.PORT_d[0] = spi(0,0);
  5950  024D  01F0               	clrf	spi@rw
  5951  024E  3000               	movlw	0
  5952  024F  160A  158A  21B5  120A  118A  	fcall	_spi
  5953  0254  00F6               	movwf	??_read_buff
  5954  0255  0876               	movf	??_read_buff,w
  5955  0256  1683               	bsf	3,5	;RP0=1, select bank1
  5956  0257  1303               	bcf	3,6	;RP1=0, select bank1
  5957  0258  00B0               	movwf	(_tcp_tx^(0+128)+2)
  5958                           
  5959                           ;main.c: 541: tcp_tx.PORT_d[1] = spi(0,0);
  5960  0259  01F0               	clrf	spi@rw
  5961  025A  3000               	movlw	0
  5962  025B  160A  158A  21B5  120A  118A  	fcall	_spi
  5963  0260  00F6               	movwf	??_read_buff
  5964  0261  0876               	movf	??_read_buff,w
  5965  0262  1683               	bsf	3,5	;RP0=1, select bank1
  5966  0263  1303               	bcf	3,6	;RP1=0, select bank1
  5967  0264  00B1               	movwf	(_tcp_tx^(0+128)+3)
  5968                           
  5969                           ;main.c: 542: inH = spi(0,0);
  5970  0265  01F0               	clrf	spi@rw
  5971  0266  3000               	movlw	0
  5972  0267  160A  158A  21B5  120A  118A  	fcall	_spi
  5973  026C  00F6               	movwf	??_read_buff
  5974  026D  0876               	movf	??_read_buff,w
  5975  026E  1283               	bcf	3,5	;RP0=0, select bank0
  5976  026F  1303               	bcf	3,6	;RP1=0, select bank0
  5977  0270  00BA               	movwf	read_buff@inH
  5978                           
  5979                           ;main.c: 543: inL = spi(0,0);
  5980  0271  01F0               	clrf	spi@rw
  5981  0272  3000               	movlw	0
  5982  0273  160A  158A  21B5  120A  118A  	fcall	_spi
  5983  0278  00F6               	movwf	??_read_buff
  5984  0279  0876               	movf	??_read_buff,w
  5985  027A  1283               	bcf	3,5	;RP0=0, select bank0
  5986  027B  1303               	bcf	3,6	;RP1=0, select bank0
  5987  027C  00BB               	movwf	read_buff@inL
  5988                           
  5989                           ;main.c: 544: if (inH == tcp_tx.PORT_s[0] && inL == tcp_tx.PORT_s[1]) {
  5990  027D  1683               	bsf	3,5	;RP0=1, select bank1
  5991  027E  1303               	bcf	3,6	;RP1=0, select bank1
  5992  027F  082E               	movf	_tcp_tx^(0+128),w
  5993  0280  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0281  1303               	bcf	3,6	;RP1=0, select bank0
  5995  0282  063A               	xorwf	read_buff@inH,w
  5996  0283  1D03               	skipz
  5997  0284  2D81               	goto	i1l239
  5998  0285  1683               	bsf	3,5	;RP0=1, select bank1
  5999  0286  1303               	bcf	3,6	;RP1=0, select bank1
  6000  0287  082F               	movf	(_tcp_tx^(0+128)+1),w
  6001  0288  1283               	bcf	3,5	;RP0=0, select bank0
  6002  0289  1303               	bcf	3,6	;RP1=0, select bank0
  6003  028A  063B               	xorwf	read_buff@inL,w
  6004  028B  1D03               	skipz
  6005  028C  2D81               	goto	i1l239
  6006                           
  6007                           ;main.c: 545: for (char i=0;i<4;i++) {
  6008  028D  01B6               	clrf	read_buff@i_751
  6009  028E  3004               	movlw	4
  6010  028F  0236               	subwf	read_buff@i_751,w
  6011  0290  1803               	btfsc	3,0
  6012  0291  2ADF               	goto	i1l3382
  6013  0292                     i1l3372:	
  6014                           
  6015                           ;main.c: 546: tcp_rx.seq_num[i] = spi(0,0);
  6016  0292  01F0               	clrf	spi@rw
  6017  0293  3000               	movlw	0
  6018  0294  160A  158A  21B5  120A  118A  	fcall	_spi
  6019  0299  00F6               	movwf	??_read_buff
  6020  029A  1283               	bcf	3,5	;RP0=0, select bank0
  6021  029B  1303               	bcf	3,6	;RP1=0, select bank0
  6022  029C  0836               	movf	read_buff@i_751,w
  6023  029D  3EAD               	addlw	(low ((_tcp_rx| (0+256)+4)))& (0+255)
  6024  029E  0084               	movwf	4
  6025  029F  0876               	movf	??_read_buff,w
  6026  02A0  1783               	bsf	3,7	;select IRP bank3
  6027  02A1  0080               	movwf	0
  6028                           
  6029                           ;main.c: 547: ack = ack << 8;
  6030  02A2  0862               	movf	_ack,w
  6031  02A3  00F6               	movwf	??_read_buff
  6032  02A4  0863               	movf	_ack+1,w
  6033  02A5  00F7               	movwf	??_read_buff+1
  6034  02A6  0864               	movf	_ack+2,w
  6035  02A7  00F8               	movwf	??_read_buff+2
  6036  02A8  0865               	movf	_ack+3,w
  6037  02A9  00F9               	movwf	??_read_buff+3
  6038  02AA  3008               	movlw	8
  6039  02AB                     u291_25:	
  6040  02AB  1003               	clrc
  6041  02AC  0DF6               	rlf	??_read_buff,f
  6042  02AD  0DF7               	rlf	??_read_buff+1,f
  6043  02AE  0DF8               	rlf	??_read_buff+2,f
  6044  02AF  0DF9               	rlf	??_read_buff+3,f
  6045  02B0  3EFF               	addlw	-1
  6046  02B1  1D03               	skipz
  6047  02B2  2AAB               	goto	u291_25
  6048  02B3  0879               	movf	??_read_buff+3,w
  6049  02B4  00E5               	movwf	_ack+3
  6050  02B5  0878               	movf	??_read_buff+2,w
  6051  02B6  00E4               	movwf	_ack+2
  6052  02B7  0877               	movf	??_read_buff+1,w
  6053  02B8  00E3               	movwf	_ack+1
  6054  02B9  0876               	movf	??_read_buff,w
  6055  02BA  00E2               	movwf	_ack
  6056                           
  6057                           ;main.c: 548: ack += tcp_rx.seq_num[i];
  6058  02BB  0836               	movf	read_buff@i_751,w
  6059  02BC  3EAD               	addlw	(low ((_tcp_rx| (0+256)+4)))& (0+255)
  6060  02BD  0084               	movwf	4
  6061  02BE  0800               	movf	0,w
  6062  02BF  00F6               	movwf	??_read_buff
  6063  02C0  01F7               	clrf	??_read_buff+1
  6064  02C1  01F8               	clrf	??_read_buff+2
  6065  02C2  01F9               	clrf	??_read_buff+3
  6066  02C3  0876               	movf	??_read_buff,w
  6067  02C4  07E2               	addwf	_ack,f
  6068  02C5  0877               	movf	??_read_buff+1,w
  6069  02C6  1103               	clrz
  6070  02C7  1803               	skipnc
  6071  02C8  3E01               	addlw	1
  6072  02C9  1D03               	btfss	3,2
  6073  02CA  07E3               	addwf	_ack+1,f
  6074  02CB  0878               	movf	??_read_buff+2,w
  6075  02CC  1103               	clrz
  6076  02CD  1803               	skipnc
  6077  02CE  3E01               	addlw	1
  6078  02CF  1D03               	btfss	3,2
  6079  02D0  07E4               	addwf	_ack+2,f
  6080  02D1  0879               	movf	??_read_buff+3,w
  6081  02D2  1103               	clrz
  6082  02D3  1803               	skipnc
  6083  02D4  3E01               	addlw	1
  6084  02D5  1D03               	btfss	3,2
  6085  02D6  07E5               	addwf	_ack+3,f
  6086  02D7  3001               	movlw	1
  6087  02D8  00F6               	movwf	??_read_buff
  6088  02D9  0876               	movf	??_read_buff,w
  6089  02DA  07B6               	addwf	read_buff@i_751,f
  6090  02DB  3004               	movlw	4
  6091  02DC  0236               	subwf	read_buff@i_751,w
  6092  02DD  1C03               	skipc
  6093  02DE  2A92               	goto	i1l3372
  6094  02DF                     i1l3382:	
  6095                           
  6096                           ;main.c: 549: }
  6097                           ;main.c: 550: for (char i=0;i<4;i++) {
  6098  02DF  01B0               	clrf	read_buff@i_752
  6099  02E0  3004               	movlw	4
  6100  02E1  0230               	subwf	read_buff@i_752,w
  6101  02E2  1803               	btfsc	3,0
  6102  02E3  2AFC               	goto	i1l3394
  6103  02E4                     i1l3388:	
  6104                           
  6105                           ;main.c: 552: tcp_tx.seq_num[i] = spi(0,0);
  6106  02E4  01F0               	clrf	spi@rw
  6107  02E5  3000               	movlw	0
  6108  02E6  160A  158A  21B5  120A  118A  	fcall	_spi
  6109  02EB  00F6               	movwf	??_read_buff
  6110  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  6111  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  6112  02EE  0830               	movf	read_buff@i_752,w
  6113  02EF  3EB2               	addlw	(low ((_tcp_tx| 0+4)))& (0+255)
  6114  02F0  0084               	movwf	4
  6115  02F1  0876               	movf	??_read_buff,w
  6116  02F2  1383               	bcf	3,7	;select IRP bank1
  6117  02F3  0080               	movwf	0
  6118  02F4  3001               	movlw	1
  6119  02F5  00F6               	movwf	??_read_buff
  6120  02F6  0876               	movf	??_read_buff,w
  6121  02F7  07B0               	addwf	read_buff@i_752,f
  6122  02F8  3004               	movlw	4
  6123  02F9  0230               	subwf	read_buff@i_752,w
  6124  02FA  1C03               	skipc
  6125  02FB  2AE4               	goto	i1l3388
  6126  02FC                     i1l3394:	
  6127                           
  6128                           ;main.c: 553: }
  6129                           ;main.c: 554: tcp_rx.offset_n_flags[0] = spi(0,0);
  6130  02FC  01F0               	clrf	spi@rw
  6131  02FD  3000               	movlw	0
  6132  02FE  160A  158A  21B5  120A  118A  	fcall	_spi
  6133  0303  00F6               	movwf	??_read_buff
  6134  0304  0876               	movf	??_read_buff,w
  6135  0305  1683               	bsf	3,5	;RP0=1, select bank3
  6136  0306  1703               	bsf	3,6	;RP1=1, select bank3
  6137  0307  00B5               	movwf	(_tcp_rx^(0+384)+12)
  6138                           
  6139                           ;main.c: 555: tcp_rx.offset_n_flags[1] = spi(0,0);
  6140  0308  01F0               	clrf	spi@rw
  6141  0309  3000               	movlw	0
  6142  030A  160A  158A  21B5  120A  118A  	fcall	_spi
  6143  030F  00F6               	movwf	??_read_buff
  6144  0310  0876               	movf	??_read_buff,w
  6145  0311  1683               	bsf	3,5	;RP0=1, select bank3
  6146  0312  1703               	bsf	3,6	;RP1=1, select bank3
  6147  0313  00B6               	movwf	(_tcp_rx^(0+384)+13)
  6148                           
  6149                           ;main.c: 556: for (char i=0;i<6;i++) {
  6150  0314  1283               	bcf	3,5	;RP0=0, select bank0
  6151  0315  1303               	bcf	3,6	;RP1=0, select bank0
  6152  0316  01A9               	clrf	read_buff@i_753
  6153  0317  3006               	movlw	6
  6154  0318  0229               	subwf	read_buff@i_753,w
  6155  0319  1803               	btfsc	3,0
  6156  031A  2B2C               	goto	i1l3408
  6157  031B                     i1l3402:	
  6158                           
  6159                           ;main.c: 557: spi(0,0);
  6160  031B  01F0               	clrf	spi@rw
  6161  031C  3000               	movlw	0
  6162  031D  160A  158A  21B5  120A  118A  	fcall	_spi
  6163  0322  3001               	movlw	1
  6164  0323  00F6               	movwf	??_read_buff
  6165  0324  0876               	movf	??_read_buff,w
  6166  0325  1283               	bcf	3,5	;RP0=0, select bank0
  6167  0326  1303               	bcf	3,6	;RP1=0, select bank0
  6168  0327  07A9               	addwf	read_buff@i_753,f
  6169  0328  3006               	movlw	6
  6170  0329  0229               	subwf	read_buff@i_753,w
  6171  032A  1C03               	skipc
  6172  032B  2B1B               	goto	i1l3402
  6173  032C                     i1l3408:	
  6174                           
  6175                           ;main.c: 558: }
  6176                           ;main.c: 559: ip_rx.total_length[1] -= 20;
  6177  032C  3014               	movlw	20
  6178  032D  1683               	bsf	3,5	;RP0=1, select bank3
  6179  032E  1703               	bsf	3,6	;RP1=1, select bank3
  6180  032F  02C1               	subwf	(_ip_rx^(0+384)+3),f
  6181                           
  6182                           ;main.c: 560: inL = tcp_rx.offset_n_flags[0] >> 4;
  6183  0330  0835               	movf	(_tcp_rx^(0+384)+12),w
  6184  0331  00F6               	movwf	??_read_buff
  6185  0332  3004               	movlw	4
  6186  0333                     u298_25:	
  6187  0333  1003               	clrc
  6188  0334  0CF6               	rrf	??_read_buff,f
  6189  0335  3EFF               	addlw	-1
  6190  0336  1D03               	skipz
  6191  0337  2B33               	goto	u298_25
  6192  0338  0876               	movf	??_read_buff,w
  6193  0339  00F7               	movwf	??_read_buff+1
  6194  033A  0877               	movf	??_read_buff+1,w
  6195  033B  1283               	bcf	3,5	;RP0=0, select bank0
  6196  033C  1303               	bcf	3,6	;RP1=0, select bank0
  6197  033D  00BB               	movwf	read_buff@inL
  6198                           
  6199                           ;main.c: 561: inL *= 4;
  6200  033E  1003               	clrc
  6201  033F  0DBB               	rlf	read_buff@inL,f
  6202  0340  1003               	clrc
  6203  0341  0DBB               	rlf	read_buff@inL,f
  6204                           
  6205                           ;main.c: 562: ip_rx.total_length[1] -= inL;
  6206  0342  083B               	movf	read_buff@inL,w
  6207  0343  1683               	bsf	3,5	;RP0=1, select bank3
  6208  0344  1703               	bsf	3,6	;RP1=1, select bank3
  6209  0345  02C1               	subwf	(_ip_rx^(0+384)+3),f
  6210                           
  6211                           ;main.c: 563: inL -= 20;
  6212  0346  3014               	movlw	20
  6213  0347  1283               	bcf	3,5	;RP0=0, select bank0
  6214  0348  1303               	bcf	3,6	;RP1=0, select bank0
  6215  0349  02BB               	subwf	read_buff@inL,f
  6216                           
  6217                           ;main.c: 564: for (char i=0;i<inL;i++) {
  6218  034A  01A0               	clrf	read_buff@i_754
  6219  034B                     i1l3422:	
  6220  034B  083B               	movf	read_buff@inL,w
  6221  034C  0220               	subwf	read_buff@i_754,w
  6222  034D  1803               	btfsc	3,0
  6223  034E  2B5D               	goto	i1l3424
  6224                           
  6225                           ;main.c: 565: spi(0,0);
  6226  034F  01F0               	clrf	spi@rw
  6227  0350  3000               	movlw	0
  6228  0351  160A  158A  21B5  120A  118A  	fcall	_spi
  6229  0356  3001               	movlw	1
  6230  0357  00F6               	movwf	??_read_buff
  6231  0358  0876               	movf	??_read_buff,w
  6232  0359  1283               	bcf	3,5	;RP0=0, select bank0
  6233  035A  1303               	bcf	3,6	;RP1=0, select bank0
  6234  035B  07A0               	addwf	read_buff@i_754,f
  6235  035C  2B4B               	goto	i1l3422
  6236  035D                     i1l3424:	
  6237                           
  6238                           ;main.c: 566: }
  6239                           ;main.c: 567: for (char i=0;i<ip_rx.total_length[1];i++) {
  6240  035D  01AA               	clrf	read_buff@i_755
  6241  035E                     i1l3430:	
  6242  035E  1683               	bsf	3,5	;RP0=1, select bank3
  6243  035F  1703               	bsf	3,6	;RP1=1, select bank3
  6244  0360  0841               	movf	(_ip_rx^(0+384)+3),w
  6245  0361  1283               	bcf	3,5	;RP0=0, select bank0
  6246  0362  1303               	bcf	3,6	;RP1=0, select bank0
  6247  0363  022A               	subwf	read_buff@i_755,w
  6248  0364  1803               	btfsc	3,0
  6249  0365  2BC8               	goto	i1l3466
  6250                           
  6251                           ;main.c: 568: payload[i] = spi(0,0);
  6252  0366  01F0               	clrf	spi@rw
  6253  0367  3000               	movlw	0
  6254  0368  160A  158A  21B5  120A  118A  	fcall	_spi
  6255  036D  00F6               	movwf	??_read_buff
  6256  036E  1283               	bcf	3,5	;RP0=0, select bank0
  6257  036F  1303               	bcf	3,6	;RP1=0, select bank0
  6258  0370  082A               	movf	read_buff@i_755,w
  6259  0371  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  6260  0372  0084               	movwf	4
  6261  0373  0876               	movf	??_read_buff,w
  6262  0374  1783               	bsf	3,7	;select IRP bank2
  6263  0375  0080               	movwf	0
  6264  0376  3001               	movlw	1
  6265  0377  00F6               	movwf	??_read_buff
  6266  0378  0876               	movf	??_read_buff,w
  6267  0379  07AA               	addwf	read_buff@i_755,f
  6268  037A  2B5E               	goto	i1l3430
  6269  037B                     i1l216:	
  6270                           ;main.c: 571: case 0:
  6271                           
  6272                           ;main.c: 569: }
  6273                           ;main.c: 570: switch (tcp_tx.status) {
  6274                           
  6275                           
  6276                           ;main.c: 572: if (tcp_rx.offset_n_flags[1] & 0x02) {
  6277  037B  1683               	bsf	3,5	;RP0=1, select bank3
  6278  037C  1703               	bsf	3,6	;RP1=1, select bank3
  6279  037D  1CB6               	btfss	(_tcp_rx^(0+384)+13),1
  6280  037E  2BDE               	goto	i1l3468
  6281                           
  6282                           ;main.c: 573: tcp_tx.status = 1;
  6283  037F  1683               	bsf	3,5	;RP0=1, select bank1
  6284  0380  1303               	bcf	3,6	;RP1=0, select bank1
  6285  0381  01C2               	clrf	(_tcp_tx^(0+128)+20)
  6286  0382  0AC2               	incf	(_tcp_tx^(0+128)+20),f
  6287                           
  6288                           ;main.c: 574: }
  6289                           ;main.c: 575: break;
  6290  0383  2BDE               	goto	i1l3468
  6291  0384                     i1l219:	
  6292                           ;main.c: 576: case 11:
  6293                           
  6294                           
  6295                           ;main.c: 577: match = 1;
  6296  0384  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0385  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0386  146C               	bsf	read_buff@match/(0+8),read_buff@match& (0+7)
  6299                           
  6300                           ;main.c: 578: for (char i=0;i<4;i++) {
  6301  0387  01B7               	clrf	read_buff@i_756
  6302  0388                     L12:	
  6303  0388  3004               	movlw	4
  6304  0389  0237               	subwf	read_buff@i_756,w
  6305  038A  1803               	btfsc	3,0
  6306  038B  2BDE               	goto	i1l3468
  6307                           
  6308                           ;main.c: 579: if (tcp_rx.seq_num[i] != tcp_tx.ack_num[i]) {
  6309  038C  0837               	movf	read_buff@i_756,w
  6310  038D  3EB6               	addlw	(low ((_tcp_tx| 0+8)))& (0+255)
  6311  038E  0084               	movwf	4
  6312  038F  1383               	bcf	3,7	;select IRP bank1
  6313  0390  0800               	movf	0,w
  6314  0391  00F6               	movwf	??_read_buff
  6315  0392  0837               	movf	read_buff@i_756,w
  6316  0393  3EAD               	addlw	(low ((_tcp_rx| (0+256)+4)))& (0+255)
  6317  0394  0084               	movwf	4
  6318  0395  1783               	bsf	3,7	;select IRP bank3
  6319  0396  0800               	movf	0,w
  6320  0397  0676               	xorwf	??_read_buff,w
  6321  0398  1903               	skipnz
  6322  0399  2B9E               	goto	i1l3446
  6323                           
  6324                           ;main.c: 580: match = 0;
  6325  039A  106C               	bcf	read_buff@match/(0+8),read_buff@match& (0+7)
  6326                           
  6327                           ;main.c: 581: tcp_tx.status = 0;
  6328  039B  1683               	bsf	3,5	;RP0=1, select bank1
  6329  039C  1303               	bcf	3,6	;RP1=0, select bank1
  6330  039D  01C2               	clrf	(_tcp_tx^(0+128)+20)
  6331  039E                     i1l3446:	
  6332                           
  6333                           ;main.c: 582: }
  6334                           ;main.c: 583: if (match) {
  6335  039E  1283               	bcf	3,5	;RP0=0, select bank0
  6336  039F  1C6C               	btfss	read_buff@match/(0+8),read_buff@match& (0+7)
  6337  03A0  2BA7               	goto	i1l3450
  6338                           
  6339                           ;main.c: 584: tcp_tx.status = 2;
  6340  03A1  3002               	movlw	2
  6341  03A2  00F6               	movwf	??_read_buff
  6342  03A3  0876               	movf	??_read_buff,w
  6343  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  6344  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  6345  03A6  00C2               	movwf	(_tcp_tx^(0+128)+20)
  6346  03A7                     i1l3450:	
  6347  03A7  3001               	movlw	1
  6348  03A8  00F6               	movwf	??_read_buff
  6349  03A9  0876               	movf	??_read_buff,w
  6350  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  6351  03AB  07B7               	addwf	read_buff@i_756,f
  6352  03AC  2B88               	goto	L12
  6353  03AD                     i1l224:	
  6354                           ;main.c: 588: case 33:
  6355                           
  6356                           ;main.c: 585: }
  6357                           ;main.c: 586: }
  6358                           ;main.c: 587: break;
  6359                           
  6360                           
  6361                           ;main.c: 589: if (tcp_rx.offset_n_flags[1] & 0x01) {
  6362  03AD  1683               	bsf	3,5	;RP0=1, select bank3
  6363  03AE  1703               	bsf	3,6	;RP1=1, select bank3
  6364  03AF  1C36               	btfss	(_tcp_rx^(0+384)+13),0
  6365  03B0  2BB3               	goto	i1l3456
  6366                           
  6367                           ;main.c: 590: tcp_tx.status = 5;
  6368  03B1  3005               	movlw	5
  6369  03B2  2BC2               	goto	L16
  6370  03B3                     i1l3456:	
  6371                           ;main.c: 591: } else {
  6372                           
  6373                           
  6374                           ;main.c: 592: tcp_tx.status = 3;
  6375  03B3  3003               	movlw	3
  6376  03B4  00F6               	movwf	??_read_buff
  6377  03B5  0876               	movf	??_read_buff,w
  6378  03B6  2BC5               	goto	L15
  6379  03B7                     i1l3458:	
  6380                           ;main.c: 595: case 44:
  6381                           
  6382                           ;main.c: 593: }
  6383                           ;main.c: 594: break;
  6384                           
  6385                           
  6386                           ;main.c: 596: tcp_tx.status = 4;
  6387  03B7  3004               	movlw	4
  6388  03B8  00F6               	movwf	??_read_buff
  6389  03B9  0876               	movf	??_read_buff,w
  6390  03BA  2BC6               	goto	L10
  6391  03BB                     i1l3460:	
  6392                           ;main.c: 598: case 55:
  6393                           
  6394                           ;main.c: 597: break;
  6395                           
  6396                           
  6397                           ;main.c: 599: tcp_tx.status = 0;
  6398  03BB  01C2               	clrf	(_tcp_tx^(0+128)+20)
  6399                           
  6400                           ;main.c: 600: break;
  6401  03BC  2BDE               	goto	i1l3468
  6402  03BD                     i1l229:	
  6403                           ;main.c: 601: case 66:
  6404                           
  6405                           
  6406                           ;main.c: 602: if (tcp_rx.offset_n_flags[1] & 0x01) {
  6407  03BD  1683               	bsf	3,5	;RP0=1, select bank3
  6408  03BE  1703               	bsf	3,6	;RP1=1, select bank3
  6409  03BF  1C36               	btfss	(_tcp_rx^(0+384)+13),0
  6410  03C0  2BDE               	goto	i1l3468
  6411                           
  6412                           ;main.c: 603: tcp_tx.status = 6;
  6413  03C1  3006               	movlw	6
  6414  03C2                     L16:	
  6415  03C2  00F6               	movwf	??_read_buff
  6416  03C3  0876               	movf	??_read_buff,w
  6417  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  6418  03C5                     L15:	
  6419  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  6420  03C6                     L10:	
  6421  03C6  00C2               	movwf	(_tcp_tx^(0+128)+20)
  6422                           
  6423                           ;main.c: 606: }
  6424                           
  6425                           ;main.c: 604: }
  6426                           ;main.c: 605: break;
  6427  03C7  2BDE               	goto	i1l3468
  6428  03C8                     i1l3466:	
  6429  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  6430  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  6431  03CA  0842               	movf	(_tcp_tx^(0+128)+20),w
  6432                           
  6433                           ; Switch size 1, requested type "space"
  6434                           ; Number of cases is 6, Range of values is 0 to 66
  6435                           ; switch strategies available:
  6436                           ; Name         Instructions Cycles
  6437                           ; simple_byte           19    10 (average)
  6438                           ; direct_byte          209     8 (fixed)
  6439                           ; jumptable            260     6 (fixed)
  6440                           ;	Chosen strategy is simple_byte
  6441  03CB  3A00               	xorlw	0	; case 0
  6442  03CC  1903               	skipnz
  6443  03CD  2B7B               	goto	i1l216
  6444  03CE  3A0B               	xorlw	11	; case 11
  6445  03CF  1903               	skipnz
  6446  03D0  2B84               	goto	i1l219
  6447  03D1  3A2A               	xorlw	42	; case 33
  6448  03D2  1903               	skipnz
  6449  03D3  2BAD               	goto	i1l224
  6450  03D4  3A0D               	xorlw	13	; case 44
  6451  03D5  1903               	skipnz
  6452  03D6  2BB7               	goto	i1l3458
  6453  03D7  3A1B               	xorlw	27	; case 55
  6454  03D8  1903               	skipnz
  6455  03D9  2BBB               	goto	i1l3460
  6456  03DA  3A75               	xorlw	117	; case 66
  6457  03DB  1903               	skipnz
  6458  03DC  2BBD               	goto	i1l229
  6459  03DD  2BDE               	goto	i1l3468
  6460  03DE                     i1l3468:	
  6461                           
  6462                           ;main.c: 607: for (char i=0;i<6;i++) {
  6463  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  6464  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  6465  03E0  01B8               	clrf	read_buff@i_757
  6466  03E1  3006               	movlw	6
  6467  03E2  0238               	subwf	read_buff@i_757,w
  6468  03E3  1803               	btfsc	3,0
  6469  03E4  2BF9               	goto	i1l3480
  6470  03E5                     i1l3474:	
  6471                           
  6472                           ;main.c: 608: link_tx.MAC_d[i] = link_rx.MAC_s[i];
  6473  03E5  0838               	movf	read_buff@i_757,w
  6474  03E6  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  6475  03E7  0084               	movwf	4
  6476  03E8  1783               	bsf	3,7	;select IRP bank3
  6477  03E9  0800               	movf	0,w
  6478  03EA  00F6               	movwf	??_read_buff
  6479  03EB  0838               	movf	read_buff@i_757,w
  6480  03EC  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  6481  03ED  0084               	movwf	4
  6482  03EE  0876               	movf	??_read_buff,w
  6483  03EF  1383               	bcf	3,7	;select IRP bank1
  6484  03F0  0080               	movwf	0
  6485  03F1  3001               	movlw	1
  6486  03F2  00F6               	movwf	??_read_buff
  6487  03F3  0876               	movf	??_read_buff,w
  6488  03F4  07B8               	addwf	read_buff@i_757,f
  6489  03F5  3006               	movlw	6
  6490  03F6  0238               	subwf	read_buff@i_757,w
  6491  03F7  1C03               	skipc
  6492  03F8  2BE5               	goto	i1l3474
  6493  03F9                     i1l3480:	
  6494                           
  6495                           ;main.c: 609: }
  6496                           ;main.c: 610: for (char i=0;i<4;i++) {
  6497  03F9  01B9               	clrf	read_buff@i_758
  6498  03FA                     L13:	
  6499  03FA  3004               	movlw	4
  6500  03FB  0239               	subwf	read_buff@i_758,w
  6501  03FC  1803               	btfsc	3,0
  6502  03FD  2D81               	goto	i1l239
  6503                           
  6504                           ;main.c: 611: ip_tx.IP_d[i] = ip_rx.IP_s[i];
  6505  03FE  0839               	movf	read_buff@i_758,w
  6506  03FF  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  6507  0400  0084               	movwf	4
  6508  0401  1783               	bsf	3,7	;select IRP bank3
  6509  0402  0800               	movf	0,w
  6510  0403  00F6               	movwf	??_read_buff
  6511  0404  0839               	movf	read_buff@i_758,w
  6512  0405  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  6513  0406  0084               	movwf	4
  6514  0407  0876               	movf	??_read_buff,w
  6515  0408  1383               	bcf	3,7	;select IRP bank1
  6516  0409  0080               	movwf	0
  6517  040A  3001               	movlw	1
  6518  040B  00F6               	movwf	??_read_buff
  6519  040C  0876               	movf	??_read_buff,w
  6520  040D  07B9               	addwf	read_buff@i_758,f
  6521  040E  2BFA               	goto	L13
  6522  040F                     i1l3492:	
  6523                           ;main.c: 615: case 17:
  6524                           
  6525                           ;main.c: 612: }
  6526                           ;main.c: 613: }
  6527                           ;main.c: 614: break;
  6528                           
  6529                           
  6530                           ;main.c: 616: udp_tx.PORT_d[0] = spi(0,0);
  6531  040F  01F0               	clrf	spi@rw
  6532  0410  3000               	movlw	0
  6533  0411  160A  158A  21B5  120A  118A  	fcall	_spi
  6534  0416  00F6               	movwf	??_read_buff
  6535  0417  0876               	movf	??_read_buff,w
  6536  0418  1283               	bcf	3,5	;RP0=0, select bank0
  6537  0419  1303               	bcf	3,6	;RP1=0, select bank0
  6538  041A  00DD               	movwf	_udp_tx+2
  6539                           
  6540                           ;main.c: 617: udp_tx.PORT_d[1] = spi(0,0);
  6541  041B  01F0               	clrf	spi@rw
  6542  041C  3000               	movlw	0
  6543  041D  160A  158A  21B5  120A  118A  	fcall	_spi
  6544  0422  00F6               	movwf	??_read_buff
  6545  0423  0876               	movf	??_read_buff,w
  6546  0424  1283               	bcf	3,5	;RP0=0, select bank0
  6547  0425  1303               	bcf	3,6	;RP1=0, select bank0
  6548  0426  00DE               	movwf	_udp_tx+3
  6549                           
  6550                           ;main.c: 618: udp_tx.PORT_s[0] = spi(0,0);
  6551  0427  01F0               	clrf	spi@rw
  6552  0428  3000               	movlw	0
  6553  0429  160A  158A  21B5  120A  118A  	fcall	_spi
  6554  042E  00F6               	movwf	??_read_buff
  6555  042F  0876               	movf	??_read_buff,w
  6556  0430  1283               	bcf	3,5	;RP0=0, select bank0
  6557  0431  1303               	bcf	3,6	;RP1=0, select bank0
  6558  0432  00DB               	movwf	_udp_tx
  6559                           
  6560                           ;main.c: 619: udp_tx.PORT_s[1] = spi(0,0);
  6561  0433  01F0               	clrf	spi@rw
  6562  0434  3000               	movlw	0
  6563  0435  160A  158A  21B5  120A  118A  	fcall	_spi
  6564  043A  00F6               	movwf	??_read_buff
  6565  043B  0876               	movf	??_read_buff,w
  6566  043C  1283               	bcf	3,5	;RP0=0, select bank0
  6567  043D  1303               	bcf	3,6	;RP1=0, select bank0
  6568  043E  00DC               	movwf	_udp_tx+1
  6569                           
  6570                           ;main.c: 620: udp_tx.length[0] = spi(0,0);
  6571  043F  01F0               	clrf	spi@rw
  6572  0440  3000               	movlw	0
  6573  0441  160A  158A  21B5  120A  118A  	fcall	_spi
  6574  0446  00F6               	movwf	??_read_buff
  6575  0447  0876               	movf	??_read_buff,w
  6576  0448  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0449  1303               	bcf	3,6	;RP1=0, select bank0
  6578  044A  00DF               	movwf	_udp_tx+4
  6579                           
  6580                           ;main.c: 621: udp_tx.length[1] = spi(0,0) - 8;
  6581  044B  01F0               	clrf	spi@rw
  6582  044C  3000               	movlw	0
  6583  044D  160A  158A  21B5  120A  118A  	fcall	_spi
  6584  0452  3EF8               	addlw	248
  6585  0453  00F6               	movwf	??_read_buff
  6586  0454  0876               	movf	??_read_buff,w
  6587  0455  1283               	bcf	3,5	;RP0=0, select bank0
  6588  0456  1303               	bcf	3,6	;RP1=0, select bank0
  6589  0457  00E0               	movwf	_udp_tx+5
  6590                           
  6591                           ;main.c: 622: spi(0,0);
  6592  0458  01F0               	clrf	spi@rw
  6593  0459  3000               	movlw	0
  6594  045A  160A  158A  21B5  120A  118A  	fcall	_spi
  6595                           
  6596                           ;main.c: 623: spi(0,0);
  6597  045F  01F0               	clrf	spi@rw
  6598  0460  3000               	movlw	0
  6599  0461  160A  158A  21B5  120A  118A  	fcall	_spi
  6600                           
  6601                           ;main.c: 624: for (char i=0;i<udp_tx.length[1];i++) {
  6602  0466  1283               	bcf	3,5	;RP0=0, select bank0
  6603  0467  1303               	bcf	3,6	;RP1=0, select bank0
  6604  0468  01AB               	clrf	read_buff@i_759
  6605  0469                     i1l3500:	
  6606  0469  0860               	movf	_udp_tx+5,w
  6607  046A  022B               	subwf	read_buff@i_759,w
  6608  046B  1803               	btfsc	3,0
  6609  046C  2C82               	goto	i1l238
  6610                           
  6611                           ;main.c: 625: payload[i] = spi(0,0);
  6612  046D  01F0               	clrf	spi@rw
  6613  046E  3000               	movlw	0
  6614  046F  160A  158A  21B5  120A  118A  	fcall	_spi
  6615  0474  00F6               	movwf	??_read_buff
  6616  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6618  0477  082B               	movf	read_buff@i_759,w
  6619  0478  3E10               	addlw	(low (_payload| (0+256)))& (0+255)
  6620  0479  0084               	movwf	4
  6621  047A  0876               	movf	??_read_buff,w
  6622  047B  1783               	bsf	3,7	;select IRP bank2
  6623  047C  0080               	movwf	0
  6624  047D  3001               	movlw	1
  6625  047E  00F6               	movwf	??_read_buff
  6626  047F  0876               	movf	??_read_buff,w
  6627  0480  07AB               	addwf	read_buff@i_759,f
  6628  0481  2C69               	goto	i1l3500
  6629  0482                     i1l238:	
  6630                           
  6631                           ;main.c: 626: }
  6632                           ;main.c: 627: udp_tx.flag = 1;
  6633  0482  01E1               	clrf	_udp_tx+6
  6634  0483  0AE1               	incf	_udp_tx+6,f
  6635                           
  6636                           ;main.c: 629: }
  6637                           
  6638                           ;main.c: 628: break;
  6639  0484  2D81               	goto	i1l239
  6640  0485                     i1l3504:	
  6641  0485  1683               	bsf	3,5	;RP0=1, select bank3
  6642  0486  1703               	bsf	3,6	;RP1=1, select bank3
  6643  0487  0847               	movf	(_ip_rx^(0+384)+9),w
  6644                           
  6645                           ; Switch size 1, requested type "space"
  6646                           ; Number of cases is 3, Range of values is 1 to 17
  6647                           ; switch strategies available:
  6648                           ; Name         Instructions Cycles
  6649                           ; simple_byte           10     6 (average)
  6650                           ; direct_byte           62    11 (fixed)
  6651                           ; jumptable            263     9 (fixed)
  6652                           ;	Chosen strategy is simple_byte
  6653  0488  3A01               	xorlw	1	; case 1
  6654  0489  1903               	skipnz
  6655  048A  29DA               	goto	i1l3328
  6656  048B  3A07               	xorlw	7	; case 6
  6657  048C  1903               	skipnz
  6658  048D  2A41               	goto	i1l3350
  6659  048E  3A17               	xorlw	23	; case 17
  6660  048F  1903               	skipnz
  6661  0490  2C0F               	goto	i1l3492
  6662  0491  2D81               	goto	i1l239
  6663                           
  6664                           ;main.c: 630: break;
  6665  0492  2D81               	goto	i1l239
  6666  0493                     i1l3506:	
  6667                           ;main.c: 631: case 0x0806:
  6668                           
  6669                           
  6670                           ;main.c: 632: inH = spi(0,0);
  6671  0493  01F0               	clrf	spi@rw
  6672  0494  3000               	movlw	0
  6673  0495  160A  158A  21B5  120A  118A  	fcall	_spi
  6674  049A  00F6               	movwf	??_read_buff
  6675  049B  0876               	movf	??_read_buff,w
  6676  049C  1283               	bcf	3,5	;RP0=0, select bank0
  6677  049D  1303               	bcf	3,6	;RP1=0, select bank0
  6678  049E  00BA               	movwf	read_buff@inH
  6679                           
  6680                           ;main.c: 633: inL = spi(0,0);
  6681  049F  01F0               	clrf	spi@rw
  6682  04A0  3000               	movlw	0
  6683  04A1  160A  158A  21B5  120A  118A  	fcall	_spi
  6684  04A6  00F6               	movwf	??_read_buff
  6685  04A7  0876               	movf	??_read_buff,w
  6686  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  6687  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  6688  04AA  00BB               	movwf	read_buff@inL
  6689                           
  6690                           ;main.c: 634: if (inH == 0 && inL == 1) {
  6691  04AB  083A               	movf	read_buff@inH,w
  6692  04AC  1D03               	btfss	3,2
  6693  04AD  2D81               	goto	i1l239
  6694  04AE  033B               	decf	read_buff@inL,w
  6695  04AF  1D03               	btfss	3,2
  6696  04B0  2D81               	goto	i1l239
  6697                           
  6698                           ;main.c: 635: inH = spi(0,0);
  6699  04B1  01F0               	clrf	spi@rw
  6700  04B2  3000               	movlw	0
  6701  04B3  160A  158A  21B5  120A  118A  	fcall	_spi
  6702  04B8  00F6               	movwf	??_read_buff
  6703  04B9  0876               	movf	??_read_buff,w
  6704  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  6705  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  6706  04BC  00BA               	movwf	read_buff@inH
  6707                           
  6708                           ;main.c: 636: inL = spi(0,0);
  6709  04BD  01F0               	clrf	spi@rw
  6710  04BE  3000               	movlw	0
  6711  04BF  160A  158A  21B5  120A  118A  	fcall	_spi
  6712  04C4  00F6               	movwf	??_read_buff
  6713  04C5  0876               	movf	??_read_buff,w
  6714  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  6715  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  6716  04C8  00BB               	movwf	read_buff@inL
  6717                           
  6718                           ;main.c: 637: if (inH == 0x08 && inL == 0x00) {
  6719  04C9  3008               	movlw	8
  6720  04CA  063A               	xorwf	read_buff@inH,w
  6721  04CB  1D03               	btfss	3,2
  6722  04CC  2D81               	goto	i1l239
  6723  04CD  083B               	movf	read_buff@inL,w
  6724  04CE  1D03               	btfss	3,2
  6725  04CF  2D81               	goto	i1l239
  6726                           
  6727                           ;main.c: 638: inL = spi(0,0);
  6728  04D0  01F0               	clrf	spi@rw
  6729  04D1  3000               	movlw	0
  6730  04D2  160A  158A  21B5  120A  118A  	fcall	_spi
  6731  04D7  00F6               	movwf	??_read_buff
  6732  04D8  0876               	movf	??_read_buff,w
  6733  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  6734  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  6735  04DB  00BB               	movwf	read_buff@inL
  6736                           
  6737                           ;main.c: 639: inL = spi(0,0);
  6738  04DC  01F0               	clrf	spi@rw
  6739  04DD  3000               	movlw	0
  6740  04DE  160A  158A  21B5  120A  118A  	fcall	_spi
  6741  04E3  00F6               	movwf	??_read_buff
  6742  04E4  0876               	movf	??_read_buff,w
  6743  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  6744  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  6745  04E7  00BB               	movwf	read_buff@inL
  6746                           
  6747                           ;main.c: 640: inL = spi(0,0);
  6748  04E8  01F0               	clrf	spi@rw
  6749  04E9  3000               	movlw	0
  6750  04EA  160A  158A  21B5  120A  118A  	fcall	_spi
  6751  04EF  00F6               	movwf	??_read_buff
  6752  04F0  0876               	movf	??_read_buff,w
  6753  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6754  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6755  04F3  00BB               	movwf	read_buff@inL
  6756                           
  6757                           ;main.c: 641: arp_type = spi(0,0);
  6758  04F4  01F0               	clrf	spi@rw
  6759  04F5  3000               	movlw	0
  6760  04F6  160A  158A  21B5  120A  118A  	fcall	_spi
  6761  04FB  00F6               	movwf	??_read_buff
  6762  04FC  0876               	movf	??_read_buff,w
  6763  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  6764  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  6765  04FF  00EA               	movwf	_arp_type
  6766                           
  6767                           ;main.c: 642: if (arp_type > 0) {
  6768  0500  086A               	movf	_arp_type,w
  6769  0501  1903               	btfsc	3,2
  6770  0502  2D81               	goto	i1l239
  6771                           
  6772                           ;main.c: 643: for (char i=0;i<6;i++) {
  6773  0503  01B1               	clrf	read_buff@i_760
  6774  0504  3006               	movlw	6
  6775  0505  0231               	subwf	read_buff@i_760,w
  6776  0506  1803               	btfsc	3,0
  6777  0507  2D20               	goto	i1l3534
  6778  0508                     i1l3528:	
  6779                           
  6780                           ;main.c: 644: link_rx.MAC_s[i] = spi(0,0);
  6781  0508  01F0               	clrf	spi@rw
  6782  0509  3000               	movlw	0
  6783  050A  160A  158A  21B5  120A  118A  	fcall	_spi
  6784  050F  00F6               	movwf	??_read_buff
  6785  0510  1283               	bcf	3,5	;RP0=0, select bank0
  6786  0511  1303               	bcf	3,6	;RP1=0, select bank0
  6787  0512  0831               	movf	read_buff@i_760,w
  6788  0513  3ED8               	addlw	(low ((_link_rx| (0+256)+6)))& (0+255)
  6789  0514  0084               	movwf	4
  6790  0515  0876               	movf	??_read_buff,w
  6791  0516  1783               	bsf	3,7	;select IRP bank3
  6792  0517  0080               	movwf	0
  6793  0518  3001               	movlw	1
  6794  0519  00F6               	movwf	??_read_buff
  6795  051A  0876               	movf	??_read_buff,w
  6796  051B  07B1               	addwf	read_buff@i_760,f
  6797  051C  3006               	movlw	6
  6798  051D  0231               	subwf	read_buff@i_760,w
  6799  051E  1C03               	skipc
  6800  051F  2D08               	goto	i1l3528
  6801  0520                     i1l3534:	
  6802                           
  6803                           ;main.c: 645: }
  6804                           ;main.c: 646: for (char i=0;i<4;i++) {
  6805  0520  01B2               	clrf	read_buff@i_761
  6806  0521  3004               	movlw	4
  6807  0522  0232               	subwf	read_buff@i_761,w
  6808  0523  1803               	btfsc	3,0
  6809  0524  2D3D               	goto	i1l3546
  6810  0525                     i1l3540:	
  6811                           
  6812                           ;main.c: 647: ip_rx.IP_s[i] = spi(0,0);
  6813  0525  01F0               	clrf	spi@rw
  6814  0526  3000               	movlw	0
  6815  0527  160A  158A  21B5  120A  118A  	fcall	_spi
  6816  052C  00F6               	movwf	??_read_buff
  6817  052D  1283               	bcf	3,5	;RP0=0, select bank0
  6818  052E  1303               	bcf	3,6	;RP1=0, select bank0
  6819  052F  0832               	movf	read_buff@i_761,w
  6820  0530  3ECA               	addlw	(low ((_ip_rx| (0+256)+12)))& (0+255)
  6821  0531  0084               	movwf	4
  6822  0532  0876               	movf	??_read_buff,w
  6823  0533  1783               	bsf	3,7	;select IRP bank3
  6824  0534  0080               	movwf	0
  6825  0535  3001               	movlw	1
  6826  0536  00F6               	movwf	??_read_buff
  6827  0537  0876               	movf	??_read_buff,w
  6828  0538  07B2               	addwf	read_buff@i_761,f
  6829  0539  3004               	movlw	4
  6830  053A  0232               	subwf	read_buff@i_761,w
  6831  053B  1C03               	skipc
  6832  053C  2D25               	goto	i1l3540
  6833  053D                     i1l3546:	
  6834                           
  6835                           ;main.c: 648: }
  6836                           ;main.c: 649: for (char i=0;i<6;i++) {
  6837  053D  01B3               	clrf	read_buff@i_762
  6838  053E  3006               	movlw	6
  6839  053F  0233               	subwf	read_buff@i_762,w
  6840  0540  1803               	btfsc	3,0
  6841  0541  2D5A               	goto	i1l3558
  6842  0542                     i1l3552:	
  6843                           
  6844                           ;main.c: 650: link_rx.MAC_d[i] = spi(0,0);
  6845  0542  01F0               	clrf	spi@rw
  6846  0543  3000               	movlw	0
  6847  0544  160A  158A  21B5  120A  118A  	fcall	_spi
  6848  0549  00F6               	movwf	??_read_buff
  6849  054A  1283               	bcf	3,5	;RP0=0, select bank0
  6850  054B  1303               	bcf	3,6	;RP1=0, select bank0
  6851  054C  0833               	movf	read_buff@i_762,w
  6852  054D  3ED2               	addlw	(low (_link_rx| (0+256)))& (0+255)
  6853  054E  0084               	movwf	4
  6854  054F  0876               	movf	??_read_buff,w
  6855  0550  1783               	bsf	3,7	;select IRP bank3
  6856  0551  0080               	movwf	0
  6857  0552  3001               	movlw	1
  6858  0553  00F6               	movwf	??_read_buff
  6859  0554  0876               	movf	??_read_buff,w
  6860  0555  07B3               	addwf	read_buff@i_762,f
  6861  0556  3006               	movlw	6
  6862  0557  0233               	subwf	read_buff@i_762,w
  6863  0558  1C03               	skipc
  6864  0559  2D42               	goto	i1l3552
  6865  055A                     i1l3558:	
  6866                           
  6867                           ;main.c: 651: }
  6868                           ;main.c: 652: for (char i=0;i<4;i++) {
  6869  055A  01B4               	clrf	read_buff@i_763
  6870  055B                     L14:	
  6871  055B  3004               	movlw	4
  6872  055C  0234               	subwf	read_buff@i_763,w
  6873  055D  1803               	btfsc	3,0
  6874  055E  2D81               	goto	i1l239
  6875                           
  6876                           ;main.c: 653: ip_rx.IP_d[i] = spi(0,0);
  6877  055F  01F0               	clrf	spi@rw
  6878  0560  3000               	movlw	0
  6879  0561  160A  158A  21B5  120A  118A  	fcall	_spi
  6880  0566  00F6               	movwf	??_read_buff
  6881  0567  1283               	bcf	3,5	;RP0=0, select bank0
  6882  0568  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0569  0834               	movf	read_buff@i_763,w
  6884  056A  3ECE               	addlw	(low ((_ip_rx| (0+256)+16)))& (0+255)
  6885  056B  0084               	movwf	4
  6886  056C  0876               	movf	??_read_buff,w
  6887  056D  1783               	bsf	3,7	;select IRP bank3
  6888  056E  0080               	movwf	0
  6889  056F  3001               	movlw	1
  6890  0570  00F6               	movwf	??_read_buff
  6891  0571  0876               	movf	??_read_buff,w
  6892  0572  07B4               	addwf	read_buff@i_763,f
  6893  0573  2D5B               	goto	L14
  6894  0574                     i1l3572:	
  6895                           ;main.c: 659: }
  6896                           
  6897                           ;main.c: 654: }
  6898                           ;main.c: 655: }
  6899                           ;main.c: 656: }
  6900                           ;main.c: 657: }
  6901                           ;main.c: 658: break;
  6902                           
  6903                           
  6904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6905                           ; Switch size 1, requested type "space"
  6906                           ; Number of cases is 1, Range of values is 8 to 8
  6907                           ; switch strategies available:
  6908                           ; Name         Instructions Cycles
  6909                           ; simple_byte            4     3 (average)
  6910                           ; direct_byte           14    11 (fixed)
  6911                           ; jumptable            263     9 (fixed)
  6912                           ;	Chosen strategy is simple_byte
  6913  0574  0822               	movf	read_buff@aux+1,w
  6914  0575  3A08               	xorlw	8	; case 8
  6915  0576  1903               	skipnz
  6916  0577  2D79               	goto	i1l5262
  6917  0578  2D81               	goto	i1l239
  6918  0579                     i1l5262:	
  6919                           
  6920                           ; Switch size 1, requested type "space"
  6921                           ; Number of cases is 2, Range of values is 0 to 6
  6922                           ; switch strategies available:
  6923                           ; Name         Instructions Cycles
  6924                           ; simple_byte            7     4 (average)
  6925                           ; direct_byte           29     8 (fixed)
  6926                           ; jumptable            260     6 (fixed)
  6927                           ;	Chosen strategy is simple_byte
  6928  0579  0821               	movf	read_buff@aux,w
  6929  057A  3A00               	xorlw	0	; case 0
  6930  057B  1903               	skipnz
  6931  057C  28F4               	goto	i1l3262
  6932  057D  3A06               	xorlw	6	; case 6
  6933  057E  1903               	skipnz
  6934  057F  2C93               	goto	i1l3506
  6935  0580  2D81               	goto	i1l239
  6936  0581                     i1l239:	
  6937                           
  6938                           ;main.c: 660: PORTBbits.RB2 = 1;
  6939  0581  1283               	bcf	3,5	;RP0=0, select bank0
  6940  0582  1303               	bcf	3,6	;RP1=0, select bank0
  6941  0583  1506               	bsf	6,2	;volatile
  6942                           
  6943                           ;main.c: 661: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6944  0584  3006               	movlw	6
  6945  0585  00F6               	movwf	??_read_buff
  6946  0586                     u483_27:	
  6947  0586  0BF6               	decfsz	??_read_buff,f
  6948  0587  2D86               	goto	u483_27
  6949  0588  0000               	nop
  6950                           
  6951                           ;main.c: 662: PORTBbits.RB2 = 0;
  6952  0589  1283               	bcf	3,5	;RP0=0, select bank0
  6953  058A  1303               	bcf	3,6	;RP1=0, select bank0
  6954  058B  1106               	bcf	6,2	;volatile
  6955                           
  6956                           ;main.c: 663: spi(0x1F | 0xA0,1);
  6957  058C  01F0               	clrf	spi@rw
  6958  058D  0AF0               	incf	spi@rw,f
  6959  058E  30BF               	movlw	191
  6960  058F  160A  158A  21B5  120A  118A  	fcall	_spi
  6961                           
  6962                           ;main.c: 664: spi(0x03,1);
  6963  0594  01F0               	clrf	spi@rw
  6964  0595  0AF0               	incf	spi@rw,f
  6965  0596  3003               	movlw	3
  6966  0597  160A  158A  21B5  120A  118A  	fcall	_spi
  6967                           
  6968                           ;main.c: 665: PORTBbits.RB2 = 1;
  6969  059C  1283               	bcf	3,5	;RP0=0, select bank0
  6970  059D  1303               	bcf	3,6	;RP1=0, select bank0
  6971  059E  1506               	bsf	6,2	;volatile
  6972                           
  6973                           ;main.c: 666: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6974  059F  3006               	movlw	6
  6975  05A0  00F6               	movwf	??_read_buff
  6976  05A1                     u484_27:	
  6977  05A1  0BF6               	decfsz	??_read_buff,f
  6978  05A2  2DA1               	goto	u484_27
  6979  05A3  0000               	nop
  6980                           
  6981                           ;main.c: 667: PORTBbits.RB2 = 0;
  6982  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  6983  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  6984  05A6  1106               	bcf	6,2	;volatile
  6985                           
  6986                           ;main.c: 668: spi(0x00 | 0x40,1);
  6987  05A7  01F0               	clrf	spi@rw
  6988  05A8  0AF0               	incf	spi@rw,f
  6989  05A9  3040               	movlw	64
  6990  05AA  160A  158A  21B5  120A  118A  	fcall	_spi
  6991                           
  6992                           ;main.c: 669: spi(ptrL,1);
  6993  05AF  01F0               	clrf	spi@rw
  6994  05B0  0AF0               	incf	spi@rw,f
  6995  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  6996  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  6997  05B3  0827               	movf	read_buff@ptrL,w
  6998  05B4  160A  158A  21B5  120A  118A  	fcall	_spi
  6999                           
  7000                           ;main.c: 670: PORTBbits.RB2 = 1;
  7001  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  7002  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  7003  05BB  1506               	bsf	6,2	;volatile
  7004                           
  7005                           ;main.c: 671: _delay((unsigned long)((10)*(8000000/4000000.0)));
  7006  05BC  3006               	movlw	6
  7007  05BD  00F6               	movwf	??_read_buff
  7008  05BE                     u485_27:	
  7009  05BE  0BF6               	decfsz	??_read_buff,f
  7010  05BF  2DBE               	goto	u485_27
  7011  05C0  0000               	nop
  7012                           
  7013                           ;main.c: 672: PORTBbits.RB2 = 0;
  7014  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  7015  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  7016  05C3  1106               	bcf	6,2	;volatile
  7017                           
  7018                           ;main.c: 673: spi(0x01 | 0x40,1);
  7019  05C4  01F0               	clrf	spi@rw
  7020  05C5  0AF0               	incf	spi@rw,f
  7021  05C6  3041               	movlw	65
  7022  05C7  160A  158A  21B5  120A  118A  	fcall	_spi
  7023                           
  7024                           ;main.c: 674: spi(ptrH,1);
  7025  05CC  01F0               	clrf	spi@rw
  7026  05CD  0AF0               	incf	spi@rw,f
  7027  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  7028  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  7029  05D0  0828               	movf	read_buff@ptrH,w
  7030  05D1  160A  158A  21B5  120A  118A  	fcall	_spi
  7031                           
  7032                           ;main.c: 675: PORTBbits.RB2 = 1;
  7033  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  7034  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  7035  05D8  1506               	bsf	6,2	;volatile
  7036                           
  7037                           ;main.c: 676: _delay((unsigned long)((10)*(8000000/4000000.0)));
  7038  05D9  3006               	movlw	6
  7039  05DA  00F6               	movwf	??_read_buff
  7040  05DB                     u486_27:	
  7041  05DB  0BF6               	decfsz	??_read_buff,f
  7042  05DC  2DDB               	goto	u486_27
  7043  05DD  0000               	nop
  7044                           
  7045                           ;main.c: 677: PORTBbits.RB2 = 0;
  7046  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  7047  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  7048  05E0  1106               	bcf	6,2	;volatile
  7049                           
  7050                           ;main.c: 678: spi(0x0C | 0x40,1);
  7051  05E1  01F0               	clrf	spi@rw
  7052  05E2  0AF0               	incf	spi@rw,f
  7053  05E3  304C               	movlw	76
  7054  05E4  160A  158A  21B5  120A  118A  	fcall	_spi
  7055                           
  7056                           ;main.c: 679: spi(ptrL,1);
  7057  05E9  01F0               	clrf	spi@rw
  7058  05EA  0AF0               	incf	spi@rw,f
  7059  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  7060  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  7061  05ED  0827               	movf	read_buff@ptrL,w
  7062  05EE  160A  158A  21B5  120A  118A  	fcall	_spi
  7063                           
  7064                           ;main.c: 680: PORTBbits.RB2 = 1;
  7065  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  7066  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  7067  05F5  1506               	bsf	6,2	;volatile
  7068                           
  7069                           ;main.c: 681: _delay((unsigned long)((10)*(8000000/4000000.0)));
  7070  05F6  3006               	movlw	6
  7071  05F7  00F6               	movwf	??_read_buff
  7072  05F8                     u487_27:	
  7073  05F8  0BF6               	decfsz	??_read_buff,f
  7074  05F9  2DF8               	goto	u487_27
  7075  05FA  0000               	nop
  7076                           
  7077                           ;main.c: 682: PORTBbits.RB2 = 0;
  7078  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  7079  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  7080  05FD  1106               	bcf	6,2	;volatile
  7081                           
  7082                           ;main.c: 683: spi(0x0D | 0x40,1);
  7083  05FE  01F0               	clrf	spi@rw
  7084  05FF  0AF0               	incf	spi@rw,f
  7085  0600  304D               	movlw	77
  7086  0601  160A  158A  21B5  120A  118A  	fcall	_spi
  7087                           
  7088                           ;main.c: 684: spi(ptrH,1);
  7089  0606  01F0               	clrf	spi@rw
  7090  0607  0AF0               	incf	spi@rw,f
  7091  0608  1283               	bcf	3,5	;RP0=0, select bank0
  7092  0609  1303               	bcf	3,6	;RP1=0, select bank0
  7093  060A  0828               	movf	read_buff@ptrH,w
  7094  060B  160A  158A  21B5  120A  118A  	fcall	_spi
  7095                           
  7096                           ;main.c: 685: PORTBbits.RB2 = 1;
  7097  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7098  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7099  0612  1506               	bsf	6,2	;volatile
  7100                           
  7101                           ;main.c: 686: _delay((unsigned long)((10)*(8000000/4000000.0)));
  7102  0613  3006               	movlw	6
  7103  0614  00F6               	movwf	??_read_buff
  7104  0615                     u488_27:	
  7105  0615  0BF6               	decfsz	??_read_buff,f
  7106  0616  2E15               	goto	u488_27
  7107  0617  0000               	nop
  7108                           
  7109                           ;main.c: 687: PORTBbits.RB2 = 0;
  7110  0618  1283               	bcf	3,5	;RP0=0, select bank0
  7111  0619  1303               	bcf	3,6	;RP1=0, select bank0
  7112  061A  1106               	bcf	6,2	;volatile
  7113                           
  7114                           ;main.c: 688: spi(0x1E | 0x80,1);
  7115  061B  01F0               	clrf	spi@rw
  7116  061C  0AF0               	incf	spi@rw,f
  7117  061D  309E               	movlw	158
  7118  061E  160A  158A  21B5  120A  118A  	fcall	_spi
  7119                           
  7120                           ;main.c: 689: spi(0b01000000,1);
  7121  0623  01F0               	clrf	spi@rw
  7122  0624  0AF0               	incf	spi@rw,f
  7123  0625  3040               	movlw	64
  7124  0626  160A  158A  21B5   	fcall	_spi
  7125                           
  7126                           ;main.c: 690: PORTBbits.RB2 = 1;
  7127  0629  1283               	bcf	3,5	;RP0=0, select bank0
  7128  062A  1303               	bcf	3,6	;RP1=0, select bank0
  7129  062B  1506               	bsf	6,2	;volatile
  7130  062C  0008               	return
  7131  062D                     __end_of_read_buff:	
  7132                           
  7133                           	psect	text12
  7134  18E1                     __ptext12:	
  7135 ;; *************** function _rw_eeprom *****************
  7136 ;; Defined at:
  7137 ;;		line 137 in file "main.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  addr            1    wreg     unsigned char 
  7140 ;;  data            1    0[COMMON] unsigned char 
  7141 ;;  rw              1    1[COMMON] unsigned char 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  addr            1    2[COMMON] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      unsigned char 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7153 ;;      Params:         2       0       0       0       0
  7154 ;;      Locals:         1       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0
  7156 ;;      Totals:         3       0       0       0       0
  7157 ;;Total ram usage:        3 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_isr
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           
  7167                           ;psect for function _rw_eeprom
  7168  18E1                     _rw_eeprom:	
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _rw_eeprom: [wreg+status,2+status,0]
  7172                           ;rw_eeprom@addr stored from wreg
  7173  18E1  00F2               	movwf	rw_eeprom@addr
  7174                           
  7175                           ;main.c: 139: if (rw) {
  7176  18E2  0871               	movf	rw_eeprom@rw,w
  7177  18E3  1903               	btfsc	3,2
  7178  18E4  28FB               	goto	i1l3868
  7179                           
  7180                           ;main.c: 140: EEADR = addr;
  7181  18E5  0872               	movf	rw_eeprom@addr,w
  7182  18E6  1283               	bcf	3,5	;RP0=0, select bank2
  7183  18E7  1703               	bsf	3,6	;RP1=1, select bank2
  7184  18E8  008D               	movwf	13	;volatile
  7185                           
  7186                           ;main.c: 141: EEDAT = data;
  7187  18E9  0870               	movf	rw_eeprom@data,w
  7188  18EA  008C               	movwf	12	;volatile
  7189                           
  7190                           ;main.c: 142: EECON1bits.EEPGD = 0;
  7191  18EB  1683               	bsf	3,5	;RP0=1, select bank3
  7192  18EC  1703               	bsf	3,6	;RP1=1, select bank3
  7193  18ED  138C               	bcf	12,7	;volsfr
  7194                           
  7195                           ;main.c: 143: EECON1bits.WREN = 1;
  7196  18EE  150C               	bsf	12,2	;volsfr
  7197                           
  7198                           ;main.c: 144: EECON2 = 0x55;
  7199  18EF  3055               	movlw	85
  7200  18F0  008D               	movwf	13	;volsfr
  7201                           
  7202                           ;main.c: 145: EECON2 = 0xAA;
  7203  18F1  30AA               	movlw	170
  7204  18F2  008D               	movwf	13	;volsfr
  7205                           
  7206                           ;main.c: 146: EECON1bits.WR = 1;
  7207  18F3  148C               	bsf	12,1	;volsfr
  7208  18F4                     i1l129:	
  7209                           ;main.c: 147: while (!PIR2bits.EEIF);
  7210                           
  7211  18F4  1283               	bcf	3,5	;RP0=0, select bank0
  7212  18F5  1303               	bcf	3,6	;RP1=0, select bank0
  7213  18F6  1E0D               	btfss	13,4	;volatile
  7214  18F7  28F4               	goto	i1l129
  7215                           
  7216                           ;main.c: 148: PIR2bits.EEIF = 0;
  7217  18F8  120D               	bcf	13,4	;volatile
  7218                           
  7219                           ;main.c: 149: return 0;
  7220  18F9  3000               	movlw	0
  7221                           
  7222                           ;main.c: 150: }
  7223  18FA  0008               	return
  7224  18FB                     i1l3868:	
  7225                           
  7226                           ;main.c: 151: else {
  7227                           ;main.c: 152: EEADR = addr;
  7228  18FB  0872               	movf	rw_eeprom@addr,w
  7229  18FC  1283               	bcf	3,5	;RP0=0, select bank2
  7230  18FD  1703               	bsf	3,6	;RP1=1, select bank2
  7231  18FE  008D               	movwf	13	;volatile
  7232                           
  7233                           ;main.c: 153: EECON1bits.EEPGD = 0;
  7234  18FF  1683               	bsf	3,5	;RP0=1, select bank3
  7235  1900  1703               	bsf	3,6	;RP1=1, select bank3
  7236  1901  138C               	bcf	12,7	;volsfr
  7237                           
  7238                           ;main.c: 154: EECON1bits.RD = 1;
  7239  1902  140C               	bsf	12,0	;volsfr
  7240                           
  7241                           ;main.c: 155: return EEDAT;
  7242  1903  1283               	bcf	3,5	;RP0=0, select bank2
  7243  1904  1703               	bsf	3,6	;RP1=1, select bank2
  7244  1905  080C               	movf	12,w	;volatile
  7245  1906  0008               	return
  7246  1907                     __end_of_rw_eeprom:	
  7247                           
  7248                           	psect	text13
  7249  1C22                     __ptext13:	
  7250 ;; *************** function _printf *****************
  7251 ;; Defined at:
  7252 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  f               1    wreg     PTR const unsigned char 
  7255 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  7258 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(4), 
  7259 ;;  idx             1    1[BANK0 ] unsigned char 
  7260 ;;  tmpval          4    0        struct .
  7261 ;;  val             2    3[BANK0 ] unsigned int 
  7262 ;;  cp              2    0        PTR const unsigned char 
  7263 ;;  len             2    0        unsigned int 
  7264 ;;  c               1    7[BANK0 ] char 
  7265 ;;  prec            1    5[BANK0 ] char 
  7266 ;;  ap              1    2[BANK0 ] PTR void [1]
  7267 ;;		 -> ?_printf(2), 
  7268 ;;  flag            1    0[BANK0 ] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2    8[COMMON] int 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7278 ;;      Params:         2       0       0       0       0
  7279 ;;      Locals:         0       8       0       0       0
  7280 ;;      Temps:          3       0       0       0       0
  7281 ;;      Totals:         5       8       0       0       0
  7282 ;;Total ram usage:       13 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    1
  7285 ;; This function calls:
  7286 ;;		___lwdiv
  7287 ;;		_putch
  7288 ;; This function is called by:
  7289 ;;		_isr
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           
  7294                           ;psect for function _printf
  7295  1C22                     _printf:	
  7296                           
  7297                           ;incstack = 0
  7298                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7299                           ;printf@f stored from wreg
  7300  1C22  1283               	bcf	3,5	;RP0=0, select bank0
  7301  1C23  1303               	bcf	3,6	;RP1=0, select bank0
  7302  1C24  00A6               	movwf	printf@f
  7303                           
  7304                           ;doprnt.c: 466: va_list ap;
  7305                           ;doprnt.c: 499: signed char c;
  7306                           ;doprnt.c: 506: signed char prec;
  7307                           ;doprnt.c: 508: unsigned char flag;
  7308                           ;doprnt.c: 523: union {
  7309                           ;doprnt.c: 524: unsigned long vd;
  7310                           ;doprnt.c: 525: double integ;
  7311                           ;doprnt.c: 526: } tmpval;
  7312                           ;doprnt.c: 528: unsigned int val;
  7313                           ;doprnt.c: 529: unsigned len;
  7314                           ;doprnt.c: 530: const char * cp;
  7315                           ;doprnt.c: 533: *ap = __va_start();
  7316  1C25  3078               	movlw	(low (?_printf| 0))& (0+255)
  7317  1C26  00FA               	movwf	??_printf
  7318  1C27  087A               	movf	??_printf,w
  7319  1C28  00A2               	movwf	printf@ap
  7320  1C29                     i1l4654:	
  7321                           ;doprnt.c: 536: while(c = *f++) {
  7322                           
  7323  1C29  3001               	movlw	1
  7324  1C2A  1283               	bcf	3,5	;RP0=0, select bank0
  7325  1C2B  1303               	bcf	3,6	;RP1=0, select bank0
  7326  1C2C  07A6               	addwf	printf@f,f
  7327  1C2D  30FF               	movlw	-1
  7328  1C2E  0726               	addwf	printf@f,w
  7329  1C2F  0084               	movwf	4
  7330  1C30  120A  158A  2000  160A  158A  	fcall	stringdir
  7331  1C35  00FA               	movwf	??_printf
  7332  1C36  087A               	movf	??_printf,w
  7333  1C37  00A7               	movwf	printf@c
  7334  1C38  0827               	movf	printf@c,w
  7335  1C39  1903               	btfsc	3,2
  7336  1C3A  0008               	return
  7337                           
  7338                           ;doprnt.c: 538: if(c != '%')
  7339  1C3B  3025               	movlw	37
  7340  1C3C  0627               	xorwf	printf@c,w
  7341  1C3D  1903               	btfsc	3,2
  7342  1C3E  2C46               	goto	i1l4622
  7343                           
  7344                           ;doprnt.c: 540: {
  7345                           ;doprnt.c: 541: (putch(c) );
  7346  1C3F  0827               	movf	printf@c,w
  7347  1C40  160A  158A  2056  160A  158A  	fcall	_putch
  7348                           
  7349                           ;doprnt.c: 542: continue;
  7350  1C45  2C29               	goto	i1l4654
  7351  1C46                     i1l4622:	
  7352                           
  7353                           ;doprnt.c: 543: }
  7354                           ;doprnt.c: 548: flag = 0;
  7355  1C46  1283               	bcf	3,5	;RP0=0, select bank0
  7356  1C47  1303               	bcf	3,6	;RP1=0, select bank0
  7357  1C48  01A0               	clrf	printf@flag
  7358                           
  7359                           ;doprnt.c: 822: }
  7360                           
  7361                           ;doprnt.c: 813: continue;
  7362                           
  7363                           ;doprnt.c: 802: default:
  7364                           
  7365                           ;doprnt.c: 718: case 'x':
  7366                           ;doprnt.c: 723: break;
  7367                           
  7368                           ;doprnt.c: 712: case 'X':
  7369                           
  7370                           ;doprnt.c: 638: goto alldone;
  7371                           
  7372                           ;doprnt.c: 637: case 0:
  7373                           
  7374                           ;doprnt.c: 635: switch(c = *f++) {
  7375  1C49  3001               	movlw	1
  7376  1C4A  07A6               	addwf	printf@f,f
  7377  1C4B  30FF               	movlw	-1
  7378  1C4C  0726               	addwf	printf@f,w
  7379  1C4D  0084               	movwf	4
  7380  1C4E  120A  158A  2000  160A  158A  	fcall	stringdir
  7381  1C53  00A7               	movwf	printf@c
  7382                           
  7383                           ; Switch size 1, requested type "space"
  7384                           ; Number of cases is 3, Range of values is 0 to 120
  7385                           ; switch strategies available:
  7386                           ; Name         Instructions Cycles
  7387                           ; simple_byte           10     6 (average)
  7388                           ; jumptable            260     6 (fixed)
  7389                           ;	Chosen strategy is simple_byte
  7390  1C54  3A00               	xorlw	0	; case 0
  7391  1C55  1903               	skipnz
  7392  1C56  2CD0               	goto	i1l478
  7393  1C57  3A58               	xorlw	88	; case 88
  7394  1C58  1903               	skipnz
  7395  1C59  2C5E               	goto	i1l4628
  7396  1C5A  3A20               	xorlw	32	; case 120
  7397  1C5B  1903               	skipnz
  7398  1C5C  2C5E               	goto	i1l4628
  7399  1C5D  2C29               	goto	i1l4654
  7400  1C5E                     i1l4628:	
  7401                           
  7402                           ;doprnt.c: 1273: {
  7403                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7404  1C5E  0822               	movf	printf@ap,w
  7405  1C5F  0084               	movwf	4
  7406  1C60  0800               	movf	0,w
  7407  1C61  00A3               	movwf	printf@val
  7408  1C62  0A84               	incf	4,f
  7409  1C63  0800               	movf	0,w
  7410  1C64  00A4               	movwf	printf@val+1
  7411  1C65  3002               	movlw	2
  7412  1C66  00FA               	movwf	??_printf
  7413  1C67  087A               	movf	??_printf,w
  7414  1C68  07A2               	addwf	printf@ap,f
  7415                           
  7416                           ;doprnt.c: 1287: }
  7417                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7418  1C69  01A7               	clrf	printf@c
  7419  1C6A  0AA7               	incf	printf@c,f
  7420  1C6B  3004               	movlw	4
  7421  1C6C  0627               	xorwf	printf@c,w
  7422  1C6D  1903               	btfsc	3,2
  7423  1C6E  2C90               	goto	i1l4644
  7424  1C6F                     i1l4638:	
  7425                           
  7426                           ;doprnt.c: 1317: if(val < hexpowers[c])
  7427  1C6F  0827               	movf	printf@c,w
  7428  1C70  00FA               	movwf	??_printf
  7429  1C71  077A               	addwf	??_printf,w
  7430  1C72  3E01               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  7431  1C73  0084               	movwf	4
  7432  1C74  120A  158A  2000  160A  158A  	fcall	stringdir
  7433  1C79  00FB               	movwf	??_printf+1
  7434  1C7A  120A  158A  2000  160A  158A  	fcall	stringdir
  7435  1C7F  00FC               	movwf	??_printf+2
  7436  1C80  087C               	movf	??_printf+2,w
  7437  1C81  0224               	subwf	printf@val+1,w
  7438  1C82  1D03               	skipz
  7439  1C83  2C86               	goto	u384_25
  7440  1C84  087B               	movf	??_printf+1,w
  7441  1C85  0223               	subwf	printf@val,w
  7442  1C86                     u384_25:	
  7443  1C86  1C03               	btfss	3,0
  7444  1C87  2C90               	goto	i1l4644
  7445                           
  7446                           ;doprnt.c: 1318: break;
  7447  1C88  3001               	movlw	1
  7448  1C89  00FA               	movwf	??_printf
  7449  1C8A  087A               	movf	??_printf,w
  7450  1C8B  07A7               	addwf	printf@c,f
  7451  1C8C  3004               	movlw	4
  7452  1C8D  0627               	xorwf	printf@c,w
  7453  1C8E  1D03               	btfss	3,2
  7454  1C8F  2C6F               	goto	i1l4638
  7455  1C90                     i1l4644:	
  7456                           
  7457                           ;doprnt.c: 1422: {
  7458                           ;doprnt.c: 1469: }
  7459                           ;doprnt.c: 1472: prec = c;
  7460  1C90  0827               	movf	printf@c,w
  7461  1C91  00FA               	movwf	??_printf
  7462  1C92  087A               	movf	??_printf,w
  7463  1C93  00A5               	movwf	printf@prec
  7464  1C94                     i1l4652:	
  7465                           ;doprnt.c: 1474: while(prec--) {
  7466                           
  7467  1C94  30FF               	movlw	255
  7468  1C95  00FA               	movwf	??_printf
  7469  1C96  087A               	movf	??_printf,w
  7470  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  7471  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  7472  1C99  07A5               	addwf	printf@prec,f
  7473  1C9A  0A25               	incf	printf@prec,w
  7474  1C9B  1903               	btfsc	3,2
  7475  1C9C  2C29               	goto	i1l4654
  7476                           
  7477                           ;doprnt.c: 1478: {
  7478                           ;doprnt.c: 1499: {
  7479                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7480  1C9D  0825               	movf	printf@prec,w
  7481  1C9E  00FA               	movwf	??_printf
  7482  1C9F  077A               	addwf	??_printf,w
  7483  1CA0  3E01               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  7484  1CA1  0084               	movwf	4
  7485  1CA2  120A  158A  2000  160A  158A  	fcall	stringdir
  7486  1CA7  00F0               	movwf	___lwdiv@divisor
  7487  1CA8  120A  158A  2000  160A  158A  	fcall	stringdir
  7488  1CAD  00F1               	movwf	___lwdiv@divisor+1
  7489  1CAE  0824               	movf	printf@val+1,w
  7490  1CAF  00F3               	movwf	___lwdiv@dividend+1
  7491  1CB0  0823               	movf	printf@val,w
  7492  1CB1  00F2               	movwf	___lwdiv@dividend
  7493  1CB2  160A  158A  2131  160A  158A  	fcall	___lwdiv
  7494  1CB7  0870               	movf	?___lwdiv,w
  7495  1CB8  390F               	andlw	15
  7496  1CB9  00FB               	movwf	??_printf+1
  7497  1CBA  087B               	movf	??_printf+1,w
  7498  1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  7499  1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  7500  1CBD  00A1               	movwf	printf@idx
  7501                           
  7502                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  7503  1CBE  0821               	movf	printf@idx,w
  7504  1CBF  3E09               	addlw	low ((STR_5-__stringbase)| (0+32768))
  7505  1CC0  0084               	movwf	4
  7506  1CC1  120A  158A  2000  160A  158A  	fcall	stringdir
  7507  1CC6  00FA               	movwf	??_printf
  7508  1CC7  087A               	movf	??_printf,w
  7509  1CC8  00A7               	movwf	printf@c
  7510                           
  7511                           ;doprnt.c: 1508: }
  7512                           ;doprnt.c: 1523: }
  7513                           ;doprnt.c: 1524: (putch(c) );
  7514  1CC9  0827               	movf	printf@c,w
  7515  1CCA  160A  158A  2056  160A  158A  	fcall	_putch
  7516  1CCF  2C94               	goto	i1l4652
  7517  1CD0                     i1l478:	
  7518                           ;doprnt.c: 1540: return 0;
  7519                           ;	Return value of _printf is never used
  7520                           
  7521                           ;doprnt.c: 1525: }
  7522                           ;doprnt.c: 1533: }
  7523                           ;doprnt.c: 1535: alldone:
  7524                           
  7525  1CD0  0008               	return
  7526  1CD1                     __end_of_printf:	
  7527                           
  7528                           	psect	text14
  7529  1856                     __ptext14:	
  7530 ;; *************** function _putch *****************
  7531 ;; Defined at:
  7532 ;;		line 120 in file "main.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  data            1    wreg     unsigned char 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  data            1    0[COMMON] unsigned char 
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		wreg
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7546 ;;      Params:         0       0       0       0       0
  7547 ;;      Locals:         1       0       0       0       0
  7548 ;;      Temps:          0       0       0       0       0
  7549 ;;      Totals:         1       0       0       0       0
  7550 ;;Total ram usage:        1 bytes
  7551 ;; Hardware stack levels used:    1
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_isr
  7556 ;;		_printf
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           
  7561                           ;psect for function _putch
  7562  1856                     _putch:	
  7563                           
  7564                           ;incstack = 0
  7565                           ; Regs used in _putch: [wreg]
  7566                           ;putch@data stored from wreg
  7567  1856  00F0               	movwf	putch@data
  7568  1857                     i1l119:	
  7569                           ;main.c: 122: continue;
  7570                           
  7571                           ;main.c: 121: while(!PIR1bits.TXIF)
  7572                           
  7573  1857  1283               	bcf	3,5	;RP0=0, select bank0
  7574  1858  1303               	bcf	3,6	;RP1=0, select bank0
  7575  1859  1E0C               	btfss	12,4	;volatile
  7576  185A  2857               	goto	i1l119
  7577                           
  7578                           ;main.c: 123: TXREG = data;
  7579  185B  0870               	movf	putch@data,w
  7580  185C  0099               	movwf	25	;volatile
  7581  185D  0008               	return
  7582  185E                     __end_of_putch:	
  7583                           
  7584                           	psect	text15
  7585  1931                     __ptext15:	
  7586 ;; *************** function ___lwdiv *****************
  7587 ;; Defined at:
  7588 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  divisor         2    0[COMMON] unsigned int 
  7591 ;;  dividend        2    2[COMMON] unsigned int 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  quotient        2    5[COMMON] unsigned int 
  7594 ;;  counter         1    7[COMMON] unsigned char 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  2    0[COMMON] unsigned int 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7604 ;;      Params:         4       0       0       0       0
  7605 ;;      Locals:         3       0       0       0       0
  7606 ;;      Temps:          1       0       0       0       0
  7607 ;;      Totals:         8       0       0       0       0
  7608 ;;Total ram usage:        8 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_printf
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function ___lwdiv
  7619  1931                     ___lwdiv:	
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7623  1931  01F5               	clrf	___lwdiv@quotient
  7624  1932  01F6               	clrf	___lwdiv@quotient+1
  7625  1933  0870               	movf	___lwdiv@divisor,w
  7626  1934  0471               	iorwf	___lwdiv@divisor+1,w
  7627  1935  1903               	btfsc	3,2
  7628  1936  2968               	goto	i1l3782
  7629  1937  01F7               	clrf	___lwdiv@counter
  7630  1938  0AF7               	incf	___lwdiv@counter,f
  7631  1939                     i1l3770:	
  7632  1939  1BF1               	btfsc	___lwdiv@divisor+1,7
  7633  193A  2947               	goto	i1l3772
  7634  193B  3001               	movlw	1
  7635  193C                     u337_25:	
  7636  193C  1003               	clrc
  7637  193D  0DF0               	rlf	___lwdiv@divisor,f
  7638  193E  0DF1               	rlf	___lwdiv@divisor+1,f
  7639  193F  3EFF               	addlw	-1
  7640  1940  1D03               	skipz
  7641  1941  293C               	goto	u337_25
  7642  1942  3001               	movlw	1
  7643  1943  00F4               	movwf	??___lwdiv
  7644  1944  0874               	movf	??___lwdiv,w
  7645  1945  07F7               	addwf	___lwdiv@counter,f
  7646  1946  2939               	goto	i1l3770
  7647  1947                     i1l3772:	
  7648  1947  3001               	movlw	1
  7649  1948                     u339_25:	
  7650  1948  1003               	clrc
  7651  1949  0DF5               	rlf	___lwdiv@quotient,f
  7652  194A  0DF6               	rlf	___lwdiv@quotient+1,f
  7653  194B  3EFF               	addlw	-1
  7654  194C  1D03               	skipz
  7655  194D  2948               	goto	u339_25
  7656  194E  0871               	movf	___lwdiv@divisor+1,w
  7657  194F  0273               	subwf	___lwdiv@dividend+1,w
  7658  1950  1D03               	skipz
  7659  1951  2954               	goto	u340_25
  7660  1952  0870               	movf	___lwdiv@divisor,w
  7661  1953  0272               	subwf	___lwdiv@dividend,w
  7662  1954                     u340_25:	
  7663  1954  1C03               	skipc
  7664  1955  295D               	goto	i1l3778
  7665  1956  0870               	movf	___lwdiv@divisor,w
  7666  1957  02F2               	subwf	___lwdiv@dividend,f
  7667  1958  0871               	movf	___lwdiv@divisor+1,w
  7668  1959  1C03               	skipc
  7669  195A  03F3               	decf	___lwdiv@dividend+1,f
  7670  195B  02F3               	subwf	___lwdiv@dividend+1,f
  7671  195C  1475               	bsf	___lwdiv@quotient,0
  7672  195D                     i1l3778:	
  7673  195D  3001               	movlw	1
  7674  195E                     u341_25:	
  7675  195E  1003               	clrc
  7676  195F  0CF1               	rrf	___lwdiv@divisor+1,f
  7677  1960  0CF0               	rrf	___lwdiv@divisor,f
  7678  1961  3EFF               	addlw	-1
  7679  1962  1D03               	skipz
  7680  1963  295E               	goto	u341_25
  7681  1964  3001               	movlw	1
  7682  1965  02F7               	subwf	___lwdiv@counter,f
  7683  1966  1D03               	btfss	3,2
  7684  1967  2947               	goto	i1l3772
  7685  1968                     i1l3782:	
  7686  1968  0876               	movf	___lwdiv@quotient+1,w
  7687  1969  00F1               	movwf	?___lwdiv+1
  7688  196A  0875               	movf	___lwdiv@quotient,w
  7689  196B  00F0               	movwf	?___lwdiv
  7690  196C  0008               	return
  7691  196D                     __end_of___lwdiv:	
  7692                           
  7693                           	psect	text16
  7694  1E6B                     __ptext16:	
  7695 ;; *************** function _echo_ping *****************
  7696 ;; Defined at:
  7697 ;;		line 855 in file "main.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  pchk            4   25[BANK0 ] unsigned long 
  7702 ;;  chk             2   23[BANK0 ] unsigned int 
  7703 ;;  aux2            1   22[BANK0 ] unsigned char 
  7704 ;;  endptr2         1    0        unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      void 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7714 ;;      Params:         0       0       0       0       0
  7715 ;;      Locals:         0       7       0       0       0
  7716 ;;      Temps:          0       8       0       0       0
  7717 ;;      Totals:         0      15       0       0       0
  7718 ;;Total ram usage:       15 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    2
  7721 ;; This function calls:
  7722 ;;		_IP_chksum
  7723 ;;		_close_tx
  7724 ;;		_join
  7725 ;;		_set_IP
  7726 ;;		_set_MAC
  7727 ;;		_spi
  7728 ;;		_start_tx
  7729 ;; This function is called by:
  7730 ;;		_isr
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function _echo_ping
  7736  1E6B                     _echo_ping:	
  7737                           
  7738                           ;main.c: 856: unsigned int chk;
  7739                           ;main.c: 857: char aux2, endptr2;
  7740                           ;main.c: 858: unsigned long pchk = 0;
  7741                           
  7742                           ;incstack = 0
  7743                           ; Regs used in _echo_ping: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7744  1E6B  3000               	movlw	0
  7745  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  7746  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
  7747  1E6E  00BC               	movwf	echo_ping@pchk+3
  7748  1E6F  3000               	movlw	0
  7749  1E70  00BB               	movwf	echo_ping@pchk+2
  7750  1E71  3000               	movlw	0
  7751  1E72  00BA               	movwf	echo_ping@pchk+1
  7752  1E73  3000               	movlw	0
  7753  1E74  00B9               	movwf	echo_ping@pchk
  7754                           
  7755                           ;main.c: 861: ping = 0;
  7756  1E75  10EC               	bcf	_ping/(0+8),_ping& (0+7)
  7757                           
  7758                           ;main.c: 863: ping_echo.checksum = 0;
  7759  1E76  1683               	bsf	3,5	;RP0=1, select bank1
  7760  1E77  1303               	bcf	3,6	;RP1=0, select bank1
  7761  1E78  01D7               	clrf	_ping_echo^(0+128)
  7762  1E79  01D8               	clrf	(_ping_echo+1)^(0+128)
  7763                           
  7764                           ;main.c: 864: pchk += join(&ping_echo.id[0],&ping_echo.id[1]);
  7765  1E7A  30DA               	movlw	(low ((_ping_echo| 0+3)))& (0+255)
  7766  1E7B  1283               	bcf	3,5	;RP0=0, select bank0
  7767  1E7C  1303               	bcf	3,6	;RP1=0, select bank0
  7768  1E7D  00AE               	movwf	??_echo_ping
  7769  1E7E  082E               	movf	??_echo_ping,w
  7770  1E7F  00F0               	movwf	join@lower
  7771  1E80  30D9               	movlw	(low ((_ping_echo| 0+2)))& (0+255)
  7772  1E81  160A  158A  20BF  160A  158A  	fcall	_join
  7773  1E86  0870               	movf	?_join,w
  7774  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7775  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7776  1E89  00AF               	movwf	??_echo_ping+1
  7777  1E8A  0871               	movf	?_join+1,w
  7778  1E8B  00B0               	movwf	??_echo_ping+2
  7779  1E8C  01B1               	clrf	??_echo_ping+3
  7780  1E8D  01B2               	clrf	??_echo_ping+4
  7781  1E8E  082F               	movf	??_echo_ping+1,w
  7782  1E8F  07B9               	addwf	echo_ping@pchk,f
  7783  1E90  0830               	movf	??_echo_ping+2,w
  7784  1E91  1103               	clrz
  7785  1E92  1803               	skipnc
  7786  1E93  3E01               	addlw	1
  7787  1E94  1D03               	btfss	3,2
  7788  1E95  07BA               	addwf	echo_ping@pchk+1,f
  7789  1E96  0831               	movf	??_echo_ping+3,w
  7790  1E97  1103               	clrz
  7791  1E98  1803               	skipnc
  7792  1E99  3E01               	addlw	1
  7793  1E9A  1D03               	btfss	3,2
  7794  1E9B  07BB               	addwf	echo_ping@pchk+2,f
  7795  1E9C  0832               	movf	??_echo_ping+4,w
  7796  1E9D  1103               	clrz
  7797  1E9E  1803               	skipnc
  7798  1E9F  3E01               	addlw	1
  7799  1EA0  1D03               	btfss	3,2
  7800  1EA1  07BC               	addwf	echo_ping@pchk+3,f
  7801                           
  7802                           ;main.c: 865: pchk += join(&ping_echo.seq_num[0],&ping_echo.seq_num[1]);
  7803  1EA2  30DC               	movlw	(low ((_ping_echo| 0+5)))& (0+255)
  7804  1EA3  00AE               	movwf	??_echo_ping
  7805  1EA4  082E               	movf	??_echo_ping,w
  7806  1EA5  00F0               	movwf	join@lower
  7807  1EA6  30DB               	movlw	(low ((_ping_echo| 0+4)))& (0+255)
  7808  1EA7  160A  158A  20BF  160A  158A  	fcall	_join
  7809  1EAC  0870               	movf	?_join,w
  7810  1EAD  1283               	bcf	3,5	;RP0=0, select bank0
  7811  1EAE  1303               	bcf	3,6	;RP1=0, select bank0
  7812  1EAF  00AF               	movwf	??_echo_ping+1
  7813  1EB0  0871               	movf	?_join+1,w
  7814  1EB1  00B0               	movwf	??_echo_ping+2
  7815  1EB2  01B1               	clrf	??_echo_ping+3
  7816  1EB3  01B2               	clrf	??_echo_ping+4
  7817  1EB4  082F               	movf	??_echo_ping+1,w
  7818  1EB5  07B9               	addwf	echo_ping@pchk,f
  7819  1EB6  0830               	movf	??_echo_ping+2,w
  7820  1EB7  1103               	clrz
  7821  1EB8  1803               	skipnc
  7822  1EB9  3E01               	addlw	1
  7823  1EBA  1D03               	btfss	3,2
  7824  1EBB  07BA               	addwf	echo_ping@pchk+1,f
  7825  1EBC  0831               	movf	??_echo_ping+3,w
  7826  1EBD  1103               	clrz
  7827  1EBE  1803               	skipnc
  7828  1EBF  3E01               	addlw	1
  7829  1EC0  1D03               	btfss	3,2
  7830  1EC1  07BB               	addwf	echo_ping@pchk+2,f
  7831  1EC2  0832               	movf	??_echo_ping+4,w
  7832  1EC3  1103               	clrz
  7833  1EC4  1803               	skipnc
  7834  1EC5  3E01               	addlw	1
  7835  1EC6  1D03               	btfss	3,2
  7836  1EC7  07BC               	addwf	echo_ping@pchk+3,f
  7837                           
  7838                           ;main.c: 866: pchk += join(&ping_echo.payload,0);
  7839  1EC8  01F0               	clrf	join@lower
  7840  1EC9  30DD               	movlw	(low ((_ping_echo| 0+6)))& (0+255)
  7841  1ECA  160A  158A  20BF  160A  158A  	fcall	_join
  7842  1ECF  0870               	movf	?_join,w
  7843  1ED0  1283               	bcf	3,5	;RP0=0, select bank0
  7844  1ED1  1303               	bcf	3,6	;RP1=0, select bank0
  7845  1ED2  00AE               	movwf	??_echo_ping
  7846  1ED3  0871               	movf	?_join+1,w
  7847  1ED4  00AF               	movwf	??_echo_ping+1
  7848  1ED5  01B0               	clrf	??_echo_ping+2
  7849  1ED6  01B1               	clrf	??_echo_ping+3
  7850  1ED7  082E               	movf	??_echo_ping,w
  7851  1ED8  07B9               	addwf	echo_ping@pchk,f
  7852  1ED9  082F               	movf	??_echo_ping+1,w
  7853  1EDA  1103               	clrz
  7854  1EDB  1803               	skipnc
  7855  1EDC  3E01               	addlw	1
  7856  1EDD  1D03               	btfss	3,2
  7857  1EDE  07BA               	addwf	echo_ping@pchk+1,f
  7858  1EDF  0830               	movf	??_echo_ping+2,w
  7859  1EE0  1103               	clrz
  7860  1EE1  1803               	skipnc
  7861  1EE2  3E01               	addlw	1
  7862  1EE3  1D03               	btfss	3,2
  7863  1EE4  07BB               	addwf	echo_ping@pchk+2,f
  7864  1EE5  0831               	movf	??_echo_ping+3,w
  7865  1EE6  1103               	clrz
  7866  1EE7  1803               	skipnc
  7867  1EE8  3E01               	addlw	1
  7868  1EE9  1D03               	btfss	3,2
  7869  1EEA  07BC               	addwf	echo_ping@pchk+3,f
  7870  1EEB                     i1l4352:	
  7871                           ;main.c: 867: while (pchk > 0x0000FFFF) {
  7872                           
  7873  1EEB  083C               	movf	echo_ping@pchk+3,w
  7874  1EEC  1D03               	btfss	3,2
  7875  1EED  2EFC               	goto	i1l4348
  7876  1EEE  3001               	movlw	1
  7877  1EEF  023B               	subwf	echo_ping@pchk+2,w
  7878  1EF0  1D03               	skipz
  7879  1EF1  2EFA               	goto	u369_23
  7880  1EF2  3000               	movlw	0
  7881  1EF3  023A               	subwf	echo_ping@pchk+1,w
  7882  1EF4  1D03               	skipz
  7883  1EF5  2EFA               	goto	u369_23
  7884  1EF6  3000               	movlw	0
  7885  1EF7  0239               	subwf	echo_ping@pchk,w
  7886  1EF8  1D03               	skipz
  7887  1EF9  2EFA               	goto	u369_23
  7888  1EFA                     u369_23:	
  7889  1EFA  1C03               	btfss	3,0
  7890  1EFB  2F3E               	goto	i1l4354
  7891  1EFC                     i1l4348:	
  7892                           
  7893                           ;main.c: 868: chk = pchk >> 16;
  7894  1EFC  0839               	movf	echo_ping@pchk,w
  7895  1EFD  00AE               	movwf	??_echo_ping
  7896  1EFE  083A               	movf	echo_ping@pchk+1,w
  7897  1EFF  00AF               	movwf	??_echo_ping+1
  7898  1F00  083B               	movf	echo_ping@pchk+2,w
  7899  1F01  00B0               	movwf	??_echo_ping+2
  7900  1F02  083C               	movf	echo_ping@pchk+3,w
  7901  1F03  00B1               	movwf	??_echo_ping+3
  7902  1F04  3010               	movlw	16
  7903  1F05                     u367_25:	
  7904  1F05  1003               	clrc
  7905  1F06  0CB1               	rrf	??_echo_ping+3,f
  7906  1F07  0CB0               	rrf	??_echo_ping+2,f
  7907  1F08  0CAF               	rrf	??_echo_ping+1,f
  7908  1F09  0CAE               	rrf	??_echo_ping,f
  7909  1F0A  3EFF               	addlw	-1
  7910  1F0B  1D03               	skipz
  7911  1F0C  2F05               	goto	u367_25
  7912  1F0D  082F               	movf	??_echo_ping+1,w
  7913  1F0E  00B8               	movwf	echo_ping@chk+1
  7914  1F0F  082E               	movf	??_echo_ping,w
  7915  1F10  00B7               	movwf	echo_ping@chk
  7916                           
  7917                           ;main.c: 869: pchk = (pchk & 0x0000FFFF) + chk;
  7918  1F11  0837               	movf	echo_ping@chk,w
  7919  1F12  00AE               	movwf	??_echo_ping
  7920  1F13  0838               	movf	echo_ping@chk+1,w
  7921  1F14  00AF               	movwf	??_echo_ping+1
  7922  1F15  01B0               	clrf	??_echo_ping+2
  7923  1F16  01B1               	clrf	??_echo_ping+3
  7924  1F17  30FF               	movlw	255
  7925  1F18  0539               	andwf	echo_ping@pchk,w
  7926  1F19  00B2               	movwf	??_echo_ping+4
  7927  1F1A  30FF               	movlw	255
  7928  1F1B  053A               	andwf	echo_ping@pchk+1,w
  7929  1F1C  00B3               	movwf	??_echo_ping+5
  7930  1F1D  3000               	movlw	0
  7931  1F1E  053B               	andwf	echo_ping@pchk+2,w
  7932  1F1F  00B4               	movwf	??_echo_ping+6
  7933  1F20  3000               	movlw	0
  7934  1F21  053C               	andwf	echo_ping@pchk+3,w
  7935  1F22  00B5               	movwf	??_echo_ping+7
  7936  1F23  0832               	movf	??_echo_ping+4,w
  7937  1F24  07AE               	addwf	??_echo_ping,f
  7938  1F25  0833               	movf	??_echo_ping+5,w
  7939  1F26  1803               	skipnc
  7940  1F27  0F33               	incfsz	??_echo_ping+5,w
  7941  1F28  2F2A               	goto	u368_20
  7942  1F29  2F2B               	goto	u368_21
  7943  1F2A                     u368_20:	
  7944  1F2A  07AF               	addwf	??_echo_ping+1,f
  7945  1F2B                     u368_21:	
  7946  1F2B  0834               	movf	??_echo_ping+6,w
  7947  1F2C  1803               	skipnc
  7948  1F2D  0F34               	incfsz	??_echo_ping+6,w
  7949  1F2E  2F30               	goto	u368_22
  7950  1F2F  2F31               	goto	u368_23
  7951  1F30                     u368_22:	
  7952  1F30  07B0               	addwf	??_echo_ping+2,f
  7953  1F31                     u368_23:	
  7954  1F31  0835               	movf	??_echo_ping+7,w
  7955  1F32  1803               	skipnc
  7956  1F33  0A35               	incf	??_echo_ping+7,w
  7957  1F34  07B1               	addwf	??_echo_ping+3,f
  7958  1F35  0831               	movf	??_echo_ping+3,w
  7959  1F36  00BC               	movwf	echo_ping@pchk+3
  7960  1F37  0830               	movf	??_echo_ping+2,w
  7961  1F38  00BB               	movwf	echo_ping@pchk+2
  7962  1F39  082F               	movf	??_echo_ping+1,w
  7963  1F3A  00BA               	movwf	echo_ping@pchk+1
  7964  1F3B  082E               	movf	??_echo_ping,w
  7965  1F3C  00B9               	movwf	echo_ping@pchk
  7966  1F3D  2EEB               	goto	i1l4352
  7967  1F3E                     i1l4354:	
  7968                           
  7969                           ;main.c: 870: }
  7970                           ;main.c: 871: ping_echo.checksum = pchk;
  7971  1F3E  083A               	movf	echo_ping@pchk+1,w
  7972  1F3F  1683               	bsf	3,5	;RP0=1, select bank1
  7973  1F40  1303               	bcf	3,6	;RP1=0, select bank1
  7974  1F41  00D8               	movwf	(_ping_echo+1)^(0+128)
  7975  1F42  1283               	bcf	3,5	;RP0=0, select bank0
  7976  1F43  1303               	bcf	3,6	;RP1=0, select bank0
  7977  1F44  0839               	movf	echo_ping@pchk,w
  7978  1F45  1683               	bsf	3,5	;RP0=1, select bank1
  7979  1F46  1303               	bcf	3,6	;RP1=0, select bank1
  7980  1F47  00D7               	movwf	_ping_echo^(0+128)
  7981                           
  7982                           ;main.c: 872: ping_echo.checksum = ~ping_echo.checksum;
  7983  1F48  09D7               	comf	_ping_echo^(0+128),f
  7984  1F49  09D8               	comf	(_ping_echo+1)^(0+128),f
  7985                           
  7986                           ;main.c: 873: ip_tx.total_length[1] = 29;
  7987  1F4A  301D               	movlw	29
  7988  1F4B  1283               	bcf	3,5	;RP0=0, select bank0
  7989  1F4C  1303               	bcf	3,6	;RP1=0, select bank0
  7990  1F4D  00AE               	movwf	??_echo_ping
  7991  1F4E  082E               	movf	??_echo_ping,w
  7992  1F4F  1683               	bsf	3,5	;RP0=1, select bank1
  7993  1F50  1303               	bcf	3,6	;RP1=0, select bank1
  7994  1F51  00C6               	movwf	(_ip_tx^(0+128)+3)
  7995                           
  7996                           ;main.c: 874: if (ip_tx.id[1] == 255) {
  7997  1F52  0A48               	incf	(_ip_tx^(0+128)+5),w
  7998  1F53  1D03               	btfss	3,2
  7999  1F54  2F5E               	goto	i1l4362
  8000                           
  8001                           ;main.c: 875: ip_tx.id[0]++;
  8002  1F55  3001               	movlw	1
  8003  1F56  1283               	bcf	3,5	;RP0=0, select bank0
  8004  1F57  1303               	bcf	3,6	;RP1=0, select bank0
  8005  1F58  00AE               	movwf	??_echo_ping
  8006  1F59  082E               	movf	??_echo_ping,w
  8007  1F5A  1683               	bsf	3,5	;RP0=1, select bank1
  8008  1F5B  1303               	bcf	3,6	;RP1=0, select bank1
  8009  1F5C  07C7               	addwf	(_ip_tx^(0+128)+4),f
  8010                           
  8011                           ;main.c: 876: } else {
  8012  1F5D  2F66               	goto	i1l4364
  8013  1F5E                     i1l4362:	
  8014                           
  8015                           ;main.c: 877: ip_tx.id[1]++;
  8016  1F5E  3001               	movlw	1
  8017  1F5F  1283               	bcf	3,5	;RP0=0, select bank0
  8018  1F60  1303               	bcf	3,6	;RP1=0, select bank0
  8019  1F61  00AE               	movwf	??_echo_ping
  8020  1F62  082E               	movf	??_echo_ping,w
  8021  1F63  1683               	bsf	3,5	;RP0=1, select bank1
  8022  1F64  1303               	bcf	3,6	;RP1=0, select bank1
  8023  1F65  07C8               	addwf	(_ip_tx^(0+128)+5),f
  8024  1F66                     i1l4364:	
  8025                           
  8026                           ;main.c: 878: }
  8027                           ;main.c: 879: ip_tx.protocol = 1;
  8028  1F66  01CC               	clrf	(_ip_tx^(0+128)+9)
  8029  1F67  0ACC               	incf	(_ip_tx^(0+128)+9),f
  8030                           
  8031                           ;main.c: 880: chk = IP_chksum();
  8032  1F68  120A  118A  262D  160A  158A  	fcall	_IP_chksum
  8033  1F6D  0878               	movf	?_IP_chksum+1,w
  8034  1F6E  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1F6F  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1F70  00B8               	movwf	echo_ping@chk+1
  8037  1F71  0877               	movf	?_IP_chksum,w
  8038  1F72  00B7               	movwf	echo_ping@chk
  8039                           
  8040                           ;main.c: 881: ip_tx.chksum[1] = chk & 0x00FF;
  8041  1F73  0837               	movf	echo_ping@chk,w
  8042  1F74  00AE               	movwf	??_echo_ping
  8043  1F75  082E               	movf	??_echo_ping,w
  8044  1F76  1683               	bsf	3,5	;RP0=1, select bank1
  8045  1F77  1303               	bcf	3,6	;RP1=0, select bank1
  8046  1F78  00CE               	movwf	(_ip_tx^(0+128)+11)
  8047                           
  8048                           ;main.c: 882: ip_tx.chksum[0] = (chk >> 8) & 0x00FF;
  8049  1F79  1283               	bcf	3,5	;RP0=0, select bank0
  8050  1F7A  1303               	bcf	3,6	;RP1=0, select bank0
  8051  1F7B  0838               	movf	echo_ping@chk+1,w
  8052  1F7C  00AE               	movwf	??_echo_ping
  8053  1F7D  082E               	movf	??_echo_ping,w
  8054  1F7E  1683               	bsf	3,5	;RP0=1, select bank1
  8055  1F7F  1303               	bcf	3,6	;RP1=0, select bank1
  8056  1F80  00CD               	movwf	(_ip_tx^(0+128)+10)
  8057                           
  8058                           ;main.c: 884: link_tx.eth_type[0] = 0x08;
  8059  1F81  3008               	movlw	8
  8060  1F82  1283               	bcf	3,5	;RP0=0, select bank0
  8061  1F83  1303               	bcf	3,6	;RP1=0, select bank0
  8062  1F84  00AE               	movwf	??_echo_ping
  8063  1F85  082E               	movf	??_echo_ping,w
  8064  1F86  1683               	bsf	3,5	;RP0=1, select bank1
  8065  1F87  1303               	bcf	3,6	;RP1=0, select bank1
  8066  1F88  00AC               	movwf	(_link_tx^(0+128)+12)
  8067                           
  8068                           ;main.c: 885: link_tx.eth_type[1] = 0x00;
  8069  1F89  01AD               	clrf	(_link_tx^(0+128)+13)
  8070                           
  8071                           ;main.c: 887: start_tx();
  8072  1F8A  160A  158A  22A7  160A  158A  	fcall	_start_tx
  8073                           
  8074                           ;main.c: 889: set_MAC();
  8075  1F8F  160A  158A  216D  160A  158A  	fcall	_set_MAC
  8076                           
  8077                           ;main.c: 891: set_IP();
  8078  1F94  160A  158A  237F  160A  158A  	fcall	_set_IP
  8079                           
  8080                           ;main.c: 893: spi(0,1);
  8081  1F99  01F0               	clrf	spi@rw
  8082  1F9A  0AF0               	incf	spi@rw,f
  8083  1F9B  3000               	movlw	0
  8084  1F9C  160A  158A  21B5  160A  158A  	fcall	_spi
  8085                           
  8086                           ;main.c: 894: spi(0,1);
  8087  1FA1  01F0               	clrf	spi@rw
  8088  1FA2  0AF0               	incf	spi@rw,f
  8089  1FA3  3000               	movlw	0
  8090  1FA4  160A  158A  21B5  160A  158A  	fcall	_spi
  8091                           
  8092                           ;main.c: 895: aux2 = (ping_echo.checksum >> 8) & 0x00FF;
  8093  1FA9  1683               	bsf	3,5	;RP0=1, select bank1
  8094  1FAA  1303               	bcf	3,6	;RP1=0, select bank1
  8095  1FAB  0858               	movf	(_ping_echo+1)^(0+128),w
  8096  1FAC  1283               	bcf	3,5	;RP0=0, select bank0
  8097  1FAD  1303               	bcf	3,6	;RP1=0, select bank0
  8098  1FAE  00AE               	movwf	??_echo_ping
  8099  1FAF  082E               	movf	??_echo_ping,w
  8100  1FB0  00B6               	movwf	echo_ping@aux2
  8101                           
  8102                           ;main.c: 896: spi(aux2,1);
  8103  1FB1  01F0               	clrf	spi@rw
  8104  1FB2  0AF0               	incf	spi@rw,f
  8105  1FB3  0836               	movf	echo_ping@aux2,w
  8106  1FB4  160A  158A  21B5  160A  158A  	fcall	_spi
  8107                           
  8108                           ;main.c: 897: aux2 = ping_echo.checksum & 0x00FF;
  8109  1FB9  1683               	bsf	3,5	;RP0=1, select bank1
  8110  1FBA  1303               	bcf	3,6	;RP1=0, select bank1
  8111  1FBB  0857               	movf	_ping_echo^(0+128),w
  8112  1FBC  1283               	bcf	3,5	;RP0=0, select bank0
  8113  1FBD  1303               	bcf	3,6	;RP1=0, select bank0
  8114  1FBE  00AE               	movwf	??_echo_ping
  8115  1FBF  082E               	movf	??_echo_ping,w
  8116  1FC0  00B6               	movwf	echo_ping@aux2
  8117                           
  8118                           ;main.c: 898: spi(aux2,1);
  8119  1FC1  01F0               	clrf	spi@rw
  8120  1FC2  0AF0               	incf	spi@rw,f
  8121  1FC3  0836               	movf	echo_ping@aux2,w
  8122  1FC4  160A  158A  21B5  160A  158A  	fcall	_spi
  8123                           
  8124                           ;main.c: 899: spi(ping_echo.id[0],1);
  8125  1FC9  01F0               	clrf	spi@rw
  8126  1FCA  0AF0               	incf	spi@rw,f
  8127  1FCB  1683               	bsf	3,5	;RP0=1, select bank1
  8128  1FCC  1303               	bcf	3,6	;RP1=0, select bank1
  8129  1FCD  0859               	movf	(_ping_echo^(0+128)+2),w
  8130  1FCE  160A  158A  21B5  160A  158A  	fcall	_spi
  8131                           
  8132                           ;main.c: 900: spi(ping_echo.id[1],1);
  8133  1FD3  01F0               	clrf	spi@rw
  8134  1FD4  0AF0               	incf	spi@rw,f
  8135  1FD5  1683               	bsf	3,5	;RP0=1, select bank1
  8136  1FD6  1303               	bcf	3,6	;RP1=0, select bank1
  8137  1FD7  085A               	movf	(_ping_echo^(0+128)+3),w
  8138  1FD8  160A  158A  21B5  160A  158A  	fcall	_spi
  8139                           
  8140                           ;main.c: 901: spi(ping_echo.seq_num[0],1);
  8141  1FDD  01F0               	clrf	spi@rw
  8142  1FDE  0AF0               	incf	spi@rw,f
  8143  1FDF  1683               	bsf	3,5	;RP0=1, select bank1
  8144  1FE0  1303               	bcf	3,6	;RP1=0, select bank1
  8145  1FE1  085B               	movf	(_ping_echo^(0+128)+4),w
  8146  1FE2  160A  158A  21B5  160A  158A  	fcall	_spi
  8147                           
  8148                           ;main.c: 902: spi(ping_echo.seq_num[1],1);
  8149  1FE7  01F0               	clrf	spi@rw
  8150  1FE8  0AF0               	incf	spi@rw,f
  8151  1FE9  1683               	bsf	3,5	;RP0=1, select bank1
  8152  1FEA  1303               	bcf	3,6	;RP1=0, select bank1
  8153  1FEB  085C               	movf	(_ping_echo^(0+128)+5),w
  8154  1FEC  160A  158A  21B5  160A  158A  	fcall	_spi
  8155                           
  8156                           ;main.c: 903: spi(ping_echo.payload,1);
  8157  1FF1  01F0               	clrf	spi@rw
  8158  1FF2  0AF0               	incf	spi@rw,f
  8159  1FF3  1683               	bsf	3,5	;RP0=1, select bank1
  8160  1FF4  1303               	bcf	3,6	;RP1=0, select bank1
  8161  1FF5  085D               	movf	(_ping_echo^(0+128)+6),w
  8162  1FF6  160A  158A  21B5  160A  158A  	fcall	_spi
  8163                           
  8164                           ;main.c: 904: close_tx(43);
  8165  1FFB  302B               	movlw	43
  8166  1FFC  160A  158A  2310   	fcall	_close_tx
  8167  1FFF  0008               	return
  8168  2000                     __end_of_echo_ping:	
  8169                           
  8170                           	psect	text17
  8171  1AA7                     __ptext17:	
  8172 ;; *************** function _start_tx *****************
  8173 ;; Defined at:
  8174 ;;		line 693 in file "main.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8188 ;;      Params:         0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0
  8190 ;;      Temps:          1       0       0       0       0
  8191 ;;      Totals:         1       0       0       0       0
  8192 ;;Total ram usage:        1 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    1
  8195 ;; This function calls:
  8196 ;;		_spi
  8197 ;; This function is called by:
  8198 ;;		_echo_ping
  8199 ;;		_udp_msg
  8200 ;;		_tcp_msg
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function _start_tx
  8206  1AA7                     _start_tx:	
  8207                           
  8208                           ;main.c: 694: ppcontrol = 0b00000111;
  8209                           
  8210                           ;incstack = 0
  8211                           ; Regs used in _start_tx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8212  1AA7  3007               	movlw	7
  8213  1AA8  00F6               	movwf	??_start_tx
  8214  1AA9  0876               	movf	??_start_tx,w
  8215  1AAA  1283               	bcf	3,5	;RP0=0, select bank0
  8216  1AAB  1303               	bcf	3,6	;RP1=0, select bank0
  8217  1AAC  00E8               	movwf	_ppcontrol
  8218                           
  8219                           ;main.c: 695: PORTBbits.RB2 = 0;
  8220  1AAD  1106               	bcf	6,2	;volatile
  8221                           
  8222                           ;main.c: 696: spi(0x1F | 0xA0,1);
  8223  1AAE  01F0               	clrf	spi@rw
  8224  1AAF  0AF0               	incf	spi@rw,f
  8225  1AB0  30BF               	movlw	191
  8226  1AB1  160A  158A  21B5  160A  158A  	fcall	_spi
  8227                           
  8228                           ;main.c: 697: spi(0x03,1);
  8229  1AB6  01F0               	clrf	spi@rw
  8230  1AB7  0AF0               	incf	spi@rw,f
  8231  1AB8  3003               	movlw	3
  8232  1AB9  160A  158A  21B5  160A  158A  	fcall	_spi
  8233                           
  8234                           ;main.c: 698: PORTBbits.RB2 = 1;
  8235  1ABE  1283               	bcf	3,5	;RP0=0, select bank0
  8236  1ABF  1303               	bcf	3,6	;RP1=0, select bank0
  8237  1AC0  1506               	bsf	6,2	;volatile
  8238                           
  8239                           ;main.c: 699: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8240  1AC1  3006               	movlw	6
  8241  1AC2  00F6               	movwf	??_start_tx
  8242  1AC3                     u489_27:	
  8243  1AC3  0BF6               	decfsz	??_start_tx,f
  8244  1AC4  2AC3               	goto	u489_27
  8245  1AC5  0000               	nop
  8246                           
  8247                           ;main.c: 700: PORTBbits.RB2 = 0;
  8248  1AC6  1283               	bcf	3,5	;RP0=0, select bank0
  8249  1AC7  1303               	bcf	3,6	;RP1=0, select bank0
  8250  1AC8  1106               	bcf	6,2	;volatile
  8251                           
  8252                           ;main.c: 701: spi(0x02 | 0x40,1);
  8253  1AC9  01F0               	clrf	spi@rw
  8254  1ACA  0AF0               	incf	spi@rw,f
  8255  1ACB  3042               	movlw	66
  8256  1ACC  160A  158A  21B5  160A  158A  	fcall	_spi
  8257                           
  8258                           ;main.c: 702: spi(0x00,1);
  8259  1AD1  01F0               	clrf	spi@rw
  8260  1AD2  0AF0               	incf	spi@rw,f
  8261  1AD3  3000               	movlw	0
  8262  1AD4  160A  158A  21B5  160A  158A  	fcall	_spi
  8263                           
  8264                           ;main.c: 703: PORTBbits.RB2 = 1;
  8265  1AD9  1283               	bcf	3,5	;RP0=0, select bank0
  8266  1ADA  1303               	bcf	3,6	;RP1=0, select bank0
  8267  1ADB  1506               	bsf	6,2	;volatile
  8268                           
  8269                           ;main.c: 704: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8270  1ADC  3006               	movlw	6
  8271  1ADD  00F6               	movwf	??_start_tx
  8272  1ADE                     u490_27:	
  8273  1ADE  0BF6               	decfsz	??_start_tx,f
  8274  1ADF  2ADE               	goto	u490_27
  8275  1AE0  0000               	nop
  8276                           
  8277                           ;main.c: 705: PORTBbits.RB2 = 0;
  8278  1AE1  1283               	bcf	3,5	;RP0=0, select bank0
  8279  1AE2  1303               	bcf	3,6	;RP1=0, select bank0
  8280  1AE3  1106               	bcf	6,2	;volatile
  8281                           
  8282                           ;main.c: 706: spi(0x03 | 0x40,1);
  8283  1AE4  01F0               	clrf	spi@rw
  8284  1AE5  0AF0               	incf	spi@rw,f
  8285  1AE6  3043               	movlw	67
  8286  1AE7  160A  158A  21B5  160A  158A  	fcall	_spi
  8287                           
  8288                           ;main.c: 707: spi(0x1F,1);
  8289  1AEC  01F0               	clrf	spi@rw
  8290  1AED  0AF0               	incf	spi@rw,f
  8291  1AEE  301F               	movlw	31
  8292  1AEF  160A  158A  21B5  160A  158A  	fcall	_spi
  8293                           
  8294                           ;main.c: 708: PORTBbits.RB2 = 1;
  8295  1AF4  1283               	bcf	3,5	;RP0=0, select bank0
  8296  1AF5  1303               	bcf	3,6	;RP1=0, select bank0
  8297  1AF6  1506               	bsf	6,2	;volatile
  8298                           
  8299                           ;main.c: 709: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8300  1AF7  3006               	movlw	6
  8301  1AF8  00F6               	movwf	??_start_tx
  8302  1AF9                     u491_27:	
  8303  1AF9  0BF6               	decfsz	??_start_tx,f
  8304  1AFA  2AF9               	goto	u491_27
  8305  1AFB  0000               	nop
  8306                           
  8307                           ;main.c: 710: PORTBbits.RB2 = 0;
  8308  1AFC  1283               	bcf	3,5	;RP0=0, select bank0
  8309  1AFD  1303               	bcf	3,6	;RP1=0, select bank0
  8310  1AFE  1106               	bcf	6,2	;volatile
  8311                           
  8312                           ;main.c: 711: spi(0x7A,1);
  8313  1AFF  01F0               	clrf	spi@rw
  8314  1B00  0AF0               	incf	spi@rw,f
  8315  1B01  307A               	movlw	122
  8316  1B02  160A  158A  21B5  160A  158A  	fcall	_spi
  8317                           
  8318                           ;main.c: 712: spi(ppcontrol,1);
  8319  1B07  01F0               	clrf	spi@rw
  8320  1B08  0AF0               	incf	spi@rw,f
  8321  1B09  1283               	bcf	3,5	;RP0=0, select bank0
  8322  1B0A  1303               	bcf	3,6	;RP1=0, select bank0
  8323  1B0B  0868               	movf	_ppcontrol,w
  8324  1B0C  160A  158A  21B5   	fcall	_spi
  8325  1B0F  0008               	return
  8326  1B10                     __end_of_start_tx:	
  8327                           
  8328                           	psect	text18
  8329  196D                     __ptext18:	
  8330 ;; *************** function _set_MAC *****************
  8331 ;; Defined at:
  8332 ;;		line 739 in file "main.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  i               1    9[COMMON] unsigned char 
  8337 ;;  i               1    8[COMMON] unsigned char 
  8338 ;;  i               1    7[COMMON] unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      void 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8348 ;;      Params:         0       0       0       0       0
  8349 ;;      Locals:         3       0       0       0       0
  8350 ;;      Temps:          1       0       0       0       0
  8351 ;;      Totals:         4       0       0       0       0
  8352 ;;Total ram usage:        4 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    1
  8355 ;; This function calls:
  8356 ;;		_spi
  8357 ;; This function is called by:
  8358 ;;		_echo_ping
  8359 ;;		_udp_msg
  8360 ;;		_tcp_msg
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           
  8365                           ;psect for function _set_MAC
  8366  196D                     _set_MAC:	
  8367                           
  8368                           ;main.c: 740: for (char i=0;i<6;i++) {
  8369                           
  8370                           ;incstack = 0
  8371                           ; Regs used in _set_MAC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8372  196D  01F7               	clrf	set_MAC@i
  8373  196E  3006               	movlw	6
  8374  196F  0277               	subwf	set_MAC@i,w
  8375  1970  1803               	btfsc	3,0
  8376  1971  2986               	goto	i1l3710
  8377  1972                     i1l3704:	
  8378                           
  8379                           ;main.c: 741: spi(link_tx.MAC_d[i],1);
  8380  1972  01F0               	clrf	spi@rw
  8381  1973  0AF0               	incf	spi@rw,f
  8382  1974  0877               	movf	set_MAC@i,w
  8383  1975  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
  8384  1976  0084               	movwf	4
  8385  1977  1383               	bcf	3,7	;select IRP bank1
  8386  1978  0800               	movf	0,w
  8387  1979  160A  158A  21B5  160A  158A  	fcall	_spi
  8388  197E  3001               	movlw	1
  8389  197F  00F6               	movwf	??_set_MAC
  8390  1980  0876               	movf	??_set_MAC,w
  8391  1981  07F7               	addwf	set_MAC@i,f
  8392  1982  3006               	movlw	6
  8393  1983  0277               	subwf	set_MAC@i,w
  8394  1984  1C03               	skipc
  8395  1985  2972               	goto	i1l3704
  8396  1986                     i1l3710:	
  8397                           
  8398                           ;main.c: 742: }
  8399                           ;main.c: 743: for (char i=0;i<6;i++) {
  8400  1986  01F8               	clrf	set_MAC@i_769
  8401  1987  3006               	movlw	6
  8402  1988  0278               	subwf	set_MAC@i_769,w
  8403  1989  1803               	btfsc	3,0
  8404  198A  299F               	goto	i1l3722
  8405  198B                     i1l3716:	
  8406                           
  8407                           ;main.c: 744: spi(link_tx.MAC_s[i],1);
  8408  198B  01F0               	clrf	spi@rw
  8409  198C  0AF0               	incf	spi@rw,f
  8410  198D  0878               	movf	set_MAC@i_769,w
  8411  198E  3EA6               	addlw	(low ((_link_tx| 0+6)))& (0+255)
  8412  198F  0084               	movwf	4
  8413  1990  1383               	bcf	3,7	;select IRP bank1
  8414  1991  0800               	movf	0,w
  8415  1992  160A  158A  21B5  160A  158A  	fcall	_spi
  8416  1997  3001               	movlw	1
  8417  1998  00F6               	movwf	??_set_MAC
  8418  1999  0876               	movf	??_set_MAC,w
  8419  199A  07F8               	addwf	set_MAC@i_769,f
  8420  199B  3006               	movlw	6
  8421  199C  0278               	subwf	set_MAC@i_769,w
  8422  199D  1C03               	skipc
  8423  199E  298B               	goto	i1l3716
  8424  199F                     i1l3722:	
  8425                           
  8426                           ;main.c: 745: }
  8427                           ;main.c: 746: for (char i=0;i<2;i++) {
  8428  199F  01F9               	clrf	set_MAC@i_770
  8429  19A0                     L17:	
  8430  19A0  3002               	movlw	2
  8431  19A1  0279               	subwf	set_MAC@i_770,w
  8432  19A2  1803               	btfsc	3,0
  8433  19A3  0008               	return
  8434                           
  8435                           ;main.c: 747: spi(link_tx.eth_type[i],1);
  8436  19A4  01F0               	clrf	spi@rw
  8437  19A5  0AF0               	incf	spi@rw,f
  8438  19A6  0879               	movf	set_MAC@i_770,w
  8439  19A7  3EAC               	addlw	(low ((_link_tx| 0+12)))& (0+255)
  8440  19A8  0084               	movwf	4
  8441  19A9  1383               	bcf	3,7	;select IRP bank1
  8442  19AA  0800               	movf	0,w
  8443  19AB  160A  158A  21B5  160A  158A  	fcall	_spi
  8444  19B0  3001               	movlw	1
  8445  19B1  00F6               	movwf	??_set_MAC
  8446  19B2  0876               	movf	??_set_MAC,w
  8447  19B3  07F9               	addwf	set_MAC@i_770,f
  8448  19B4  29A0               	goto	L17
  8449  19B5                     __end_of_set_MAC:	
  8450                           
  8451                           	psect	text19
  8452  1B7F                     __ptext19:	
  8453 ;; *************** function _set_IP *****************
  8454 ;; Defined at:
  8455 ;;		line 751 in file "main.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  i               1    8[COMMON] unsigned char 
  8460 ;;  i               1    7[COMMON] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8470 ;;      Params:         0       0       0       0       0
  8471 ;;      Locals:         2       0       0       0       0
  8472 ;;      Temps:          1       0       0       0       0
  8473 ;;      Totals:         3       0       0       0       0
  8474 ;;Total ram usage:        3 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:    1
  8477 ;; This function calls:
  8478 ;;		_spi
  8479 ;; This function is called by:
  8480 ;;		_echo_ping
  8481 ;;		_udp_msg
  8482 ;;		_tcp_msg
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           
  8487                           ;psect for function _set_IP
  8488  1B7F                     _set_IP:	
  8489                           
  8490                           ;main.c: 752: spi(ip_tx.ver_ihl,1);
  8491                           
  8492                           ;incstack = 0
  8493                           ; Regs used in _set_IP: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8494  1B7F  01F0               	clrf	spi@rw
  8495  1B80  0AF0               	incf	spi@rw,f
  8496  1B81  1683               	bsf	3,5	;RP0=1, select bank1
  8497  1B82  1303               	bcf	3,6	;RP1=0, select bank1
  8498  1B83  0843               	movf	_ip_tx^(0+128),w
  8499  1B84  160A  158A  21B5  160A  158A  	fcall	_spi
  8500                           
  8501                           ;main.c: 753: spi(ip_tx.dscp_ecn,1);
  8502  1B89  01F0               	clrf	spi@rw
  8503  1B8A  0AF0               	incf	spi@rw,f
  8504  1B8B  1683               	bsf	3,5	;RP0=1, select bank1
  8505  1B8C  1303               	bcf	3,6	;RP1=0, select bank1
  8506  1B8D  0844               	movf	(_ip_tx^(0+128)+1),w
  8507  1B8E  160A  158A  21B5  160A  158A  	fcall	_spi
  8508                           
  8509                           ;main.c: 754: spi(ip_tx.total_length[0],1);
  8510  1B93  01F0               	clrf	spi@rw
  8511  1B94  0AF0               	incf	spi@rw,f
  8512  1B95  1683               	bsf	3,5	;RP0=1, select bank1
  8513  1B96  1303               	bcf	3,6	;RP1=0, select bank1
  8514  1B97  0845               	movf	(_ip_tx^(0+128)+2),w
  8515  1B98  160A  158A  21B5  160A  158A  	fcall	_spi
  8516                           
  8517                           ;main.c: 755: spi(ip_tx.total_length[1],1);
  8518  1B9D  01F0               	clrf	spi@rw
  8519  1B9E  0AF0               	incf	spi@rw,f
  8520  1B9F  1683               	bsf	3,5	;RP0=1, select bank1
  8521  1BA0  1303               	bcf	3,6	;RP1=0, select bank1
  8522  1BA1  0846               	movf	(_ip_tx^(0+128)+3),w
  8523  1BA2  160A  158A  21B5  160A  158A  	fcall	_spi
  8524                           
  8525                           ;main.c: 756: spi(ip_tx.id[0],1);
  8526  1BA7  01F0               	clrf	spi@rw
  8527  1BA8  0AF0               	incf	spi@rw,f
  8528  1BA9  1683               	bsf	3,5	;RP0=1, select bank1
  8529  1BAA  1303               	bcf	3,6	;RP1=0, select bank1
  8530  1BAB  0847               	movf	(_ip_tx^(0+128)+4),w
  8531  1BAC  160A  158A  21B5  160A  158A  	fcall	_spi
  8532                           
  8533                           ;main.c: 757: spi(ip_tx.id[1],1);
  8534  1BB1  01F0               	clrf	spi@rw
  8535  1BB2  0AF0               	incf	spi@rw,f
  8536  1BB3  1683               	bsf	3,5	;RP0=1, select bank1
  8537  1BB4  1303               	bcf	3,6	;RP1=0, select bank1
  8538  1BB5  0848               	movf	(_ip_tx^(0+128)+5),w
  8539  1BB6  160A  158A  21B5  160A  158A  	fcall	_spi
  8540                           
  8541                           ;main.c: 758: spi(0,1);
  8542  1BBB  01F0               	clrf	spi@rw
  8543  1BBC  0AF0               	incf	spi@rw,f
  8544  1BBD  3000               	movlw	0
  8545  1BBE  160A  158A  21B5  160A  158A  	fcall	_spi
  8546                           
  8547                           ;main.c: 759: spi(0,1);
  8548  1BC3  01F0               	clrf	spi@rw
  8549  1BC4  0AF0               	incf	spi@rw,f
  8550  1BC5  3000               	movlw	0
  8551  1BC6  160A  158A  21B5  160A  158A  	fcall	_spi
  8552                           
  8553                           ;main.c: 760: spi(ip_tx.ttl,1);
  8554  1BCB  01F0               	clrf	spi@rw
  8555  1BCC  0AF0               	incf	spi@rw,f
  8556  1BCD  1683               	bsf	3,5	;RP0=1, select bank1
  8557  1BCE  1303               	bcf	3,6	;RP1=0, select bank1
  8558  1BCF  084B               	movf	(_ip_tx^(0+128)+8),w
  8559  1BD0  160A  158A  21B5  160A  158A  	fcall	_spi
  8560                           
  8561                           ;main.c: 761: spi(ip_tx.protocol,1);
  8562  1BD5  01F0               	clrf	spi@rw
  8563  1BD6  0AF0               	incf	spi@rw,f
  8564  1BD7  1683               	bsf	3,5	;RP0=1, select bank1
  8565  1BD8  1303               	bcf	3,6	;RP1=0, select bank1
  8566  1BD9  084C               	movf	(_ip_tx^(0+128)+9),w
  8567  1BDA  160A  158A  21B5  160A  158A  	fcall	_spi
  8568                           
  8569                           ;main.c: 762: spi(ip_tx.chksum[0],1);
  8570  1BDF  01F0               	clrf	spi@rw
  8571  1BE0  0AF0               	incf	spi@rw,f
  8572  1BE1  1683               	bsf	3,5	;RP0=1, select bank1
  8573  1BE2  1303               	bcf	3,6	;RP1=0, select bank1
  8574  1BE3  084D               	movf	(_ip_tx^(0+128)+10),w
  8575  1BE4  160A  158A  21B5  160A  158A  	fcall	_spi
  8576                           
  8577                           ;main.c: 763: spi(ip_tx.chksum[1],1);
  8578  1BE9  01F0               	clrf	spi@rw
  8579  1BEA  0AF0               	incf	spi@rw,f
  8580  1BEB  1683               	bsf	3,5	;RP0=1, select bank1
  8581  1BEC  1303               	bcf	3,6	;RP1=0, select bank1
  8582  1BED  084E               	movf	(_ip_tx^(0+128)+11),w
  8583  1BEE  160A  158A  21B5  160A  158A  	fcall	_spi
  8584                           
  8585                           ;main.c: 764: for (char i=0;i<4;i++) {
  8586  1BF3  01F7               	clrf	set_IP@i
  8587  1BF4  3004               	movlw	4
  8588  1BF5  0277               	subwf	set_IP@i,w
  8589  1BF6  1803               	btfsc	3,0
  8590  1BF7  2C0C               	goto	i1l3748
  8591  1BF8                     i1l3742:	
  8592                           
  8593                           ;main.c: 765: spi(ip_tx.IP_s[i],1);
  8594  1BF8  01F0               	clrf	spi@rw
  8595  1BF9  0AF0               	incf	spi@rw,f
  8596  1BFA  0877               	movf	set_IP@i,w
  8597  1BFB  3ECF               	addlw	(low ((_ip_tx| 0+12)))& (0+255)
  8598  1BFC  0084               	movwf	4
  8599  1BFD  1383               	bcf	3,7	;select IRP bank1
  8600  1BFE  0800               	movf	0,w
  8601  1BFF  160A  158A  21B5  160A  158A  	fcall	_spi
  8602  1C04  3001               	movlw	1
  8603  1C05  00F6               	movwf	??_set_IP
  8604  1C06  0876               	movf	??_set_IP,w
  8605  1C07  07F7               	addwf	set_IP@i,f
  8606  1C08  3004               	movlw	4
  8607  1C09  0277               	subwf	set_IP@i,w
  8608  1C0A  1C03               	skipc
  8609  1C0B  2BF8               	goto	i1l3742
  8610  1C0C                     i1l3748:	
  8611                           
  8612                           ;main.c: 766: }
  8613                           ;main.c: 767: for (char i=0;i<4;i++) {
  8614  1C0C  01F8               	clrf	set_IP@i_773
  8615  1C0D                     L18:	
  8616  1C0D  3004               	movlw	4
  8617  1C0E  0278               	subwf	set_IP@i_773,w
  8618  1C0F  1803               	btfsc	3,0
  8619  1C10  0008               	return
  8620                           
  8621                           ;main.c: 768: spi(ip_tx.IP_d[i],1);
  8622  1C11  01F0               	clrf	spi@rw
  8623  1C12  0AF0               	incf	spi@rw,f
  8624  1C13  0878               	movf	set_IP@i_773,w
  8625  1C14  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
  8626  1C15  0084               	movwf	4
  8627  1C16  1383               	bcf	3,7	;select IRP bank1
  8628  1C17  0800               	movf	0,w
  8629  1C18  160A  158A  21B5  160A  158A  	fcall	_spi
  8630  1C1D  3001               	movlw	1
  8631  1C1E  00F6               	movwf	??_set_IP
  8632  1C1F  0876               	movf	??_set_IP,w
  8633  1C20  07F8               	addwf	set_IP@i_773,f
  8634  1C21  2C0D               	goto	L18
  8635  1C22                     __end_of_set_IP:	
  8636                           
  8637                           	psect	text20
  8638  1B10                     __ptext20:	
  8639 ;; *************** function _close_tx *****************
  8640 ;; Defined at:
  8641 ;;		line 715 in file "main.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  aux             1    wreg     unsigned char 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  aux             1    7[COMMON] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      void 
  8648 ;; Registers used:
  8649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8655 ;;      Params:         0       0       0       0       0
  8656 ;;      Locals:         1       0       0       0       0
  8657 ;;      Temps:          1       0       0       0       0
  8658 ;;      Totals:         2       0       0       0       0
  8659 ;;Total ram usage:        2 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    1
  8662 ;; This function calls:
  8663 ;;		_spi
  8664 ;; This function is called by:
  8665 ;;		_echo_ping
  8666 ;;		_udp_msg
  8667 ;;		_tcp_msg
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _close_tx
  8673  1B10                     _close_tx:	
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _close_tx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8677                           ;close_tx@aux stored from wreg
  8678  1B10  00F7               	movwf	close_tx@aux
  8679                           
  8680                           ;main.c: 716: PORTBbits.RB2 = 1;
  8681  1B11  1283               	bcf	3,5	;RP0=0, select bank0
  8682  1B12  1303               	bcf	3,6	;RP1=0, select bank0
  8683  1B13  1506               	bsf	6,2	;volatile
  8684                           
  8685                           ;main.c: 717: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8686  1B14  3006               	movlw	6
  8687  1B15  00F6               	movwf	??_close_tx
  8688  1B16                     u492_27:	
  8689  1B16  0BF6               	decfsz	??_close_tx,f
  8690  1B17  2B16               	goto	u492_27
  8691  1B18  0000               	nop
  8692                           
  8693                           ;main.c: 718: PORTBbits.RB2 = 0;
  8694  1B19  1283               	bcf	3,5	;RP0=0, select bank0
  8695  1B1A  1303               	bcf	3,6	;RP1=0, select bank0
  8696  1B1B  1106               	bcf	6,2	;volatile
  8697                           
  8698                           ;main.c: 719: spi(0x06 | 0x40,1);
  8699  1B1C  01F0               	clrf	spi@rw
  8700  1B1D  0AF0               	incf	spi@rw,f
  8701  1B1E  3046               	movlw	70
  8702  1B1F  160A  158A  21B5  160A  158A  	fcall	_spi
  8703                           
  8704                           ;main.c: 720: spi(aux,1);
  8705  1B24  01F0               	clrf	spi@rw
  8706  1B25  0AF0               	incf	spi@rw,f
  8707  1B26  0877               	movf	close_tx@aux,w
  8708  1B27  160A  158A  21B5  160A  158A  	fcall	_spi
  8709                           
  8710                           ;main.c: 721: PORTBbits.RB2 = 1;
  8711  1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  8712  1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  8713  1B2E  1506               	bsf	6,2	;volatile
  8714                           
  8715                           ;main.c: 722: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8716  1B2F  3006               	movlw	6
  8717  1B30  00F6               	movwf	??_close_tx
  8718  1B31                     u493_27:	
  8719  1B31  0BF6               	decfsz	??_close_tx,f
  8720  1B32  2B31               	goto	u493_27
  8721  1B33  0000               	nop
  8722                           
  8723                           ;main.c: 723: PORTBbits.RB2 = 0;
  8724  1B34  1283               	bcf	3,5	;RP0=0, select bank0
  8725  1B35  1303               	bcf	3,6	;RP1=0, select bank0
  8726  1B36  1106               	bcf	6,2	;volatile
  8727                           
  8728                           ;main.c: 724: spi(0x07 | 0x40,1);
  8729  1B37  01F0               	clrf	spi@rw
  8730  1B38  0AF0               	incf	spi@rw,f
  8731  1B39  3047               	movlw	71
  8732  1B3A  160A  158A  21B5  160A  158A  	fcall	_spi
  8733                           
  8734                           ;main.c: 725: spi(0x1F,1);
  8735  1B3F  01F0               	clrf	spi@rw
  8736  1B40  0AF0               	incf	spi@rw,f
  8737  1B41  301F               	movlw	31
  8738  1B42  160A  158A  21B5  160A  158A  	fcall	_spi
  8739                           
  8740                           ;main.c: 726: PORTBbits.RB2 = 1;
  8741  1B47  1283               	bcf	3,5	;RP0=0, select bank0
  8742  1B48  1303               	bcf	3,6	;RP1=0, select bank0
  8743  1B49  1506               	bsf	6,2	;volatile
  8744                           
  8745                           ;main.c: 727: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8746  1B4A  3006               	movlw	6
  8747  1B4B  00F6               	movwf	??_close_tx
  8748  1B4C                     u494_27:	
  8749  1B4C  0BF6               	decfsz	??_close_tx,f
  8750  1B4D  2B4C               	goto	u494_27
  8751  1B4E  0000               	nop
  8752                           
  8753                           ;main.c: 728: PORTBbits.RB2 = 0;
  8754  1B4F  1283               	bcf	3,5	;RP0=0, select bank0
  8755  1B50  1303               	bcf	3,6	;RP1=0, select bank0
  8756  1B51  1106               	bcf	6,2	;volatile
  8757                           
  8758                           ;main.c: 729: spi(0x1C | 0xA0,1);
  8759  1B52  01F0               	clrf	spi@rw
  8760  1B53  0AF0               	incf	spi@rw,f
  8761  1B54  30BC               	movlw	188
  8762  1B55  160A  158A  21B5  160A  158A  	fcall	_spi
  8763                           
  8764                           ;main.c: 730: spi(0x08,1);
  8765  1B5A  01F0               	clrf	spi@rw
  8766  1B5B  0AF0               	incf	spi@rw,f
  8767  1B5C  3008               	movlw	8
  8768  1B5D  160A  158A  21B5  160A  158A  	fcall	_spi
  8769                           
  8770                           ;main.c: 731: PORTBbits.RB2 = 1;
  8771  1B62  1283               	bcf	3,5	;RP0=0, select bank0
  8772  1B63  1303               	bcf	3,6	;RP1=0, select bank0
  8773  1B64  1506               	bsf	6,2	;volatile
  8774                           
  8775                           ;main.c: 732: _delay((unsigned long)((10)*(8000000/4000000.0)));
  8776  1B65  3006               	movlw	6
  8777  1B66  00F6               	movwf	??_close_tx
  8778  1B67                     u495_27:	
  8779  1B67  0BF6               	decfsz	??_close_tx,f
  8780  1B68  2B67               	goto	u495_27
  8781  1B69  0000               	nop
  8782                           
  8783                           ;main.c: 733: PORTBbits.RB2 = 0;
  8784  1B6A  1283               	bcf	3,5	;RP0=0, select bank0
  8785  1B6B  1303               	bcf	3,6	;RP1=0, select bank0
  8786  1B6C  1106               	bcf	6,2	;volatile
  8787                           
  8788                           ;main.c: 734: spi(0x1F | 0x80,1);
  8789  1B6D  01F0               	clrf	spi@rw
  8790  1B6E  0AF0               	incf	spi@rw,f
  8791  1B6F  309F               	movlw	159
  8792  1B70  160A  158A  21B5  160A  158A  	fcall	_spi
  8793                           
  8794                           ;main.c: 735: spi(0x08,1);
  8795  1B75  01F0               	clrf	spi@rw
  8796  1B76  0AF0               	incf	spi@rw,f
  8797  1B77  3008               	movlw	8
  8798  1B78  160A  158A  21B5   	fcall	_spi
  8799                           
  8800                           ;main.c: 736: PORTBbits.RB2 = 1;
  8801  1B7B  1283               	bcf	3,5	;RP0=0, select bank0
  8802  1B7C  1303               	bcf	3,6	;RP1=0, select bank0
  8803  1B7D  1506               	bsf	6,2	;volatile
  8804  1B7E  0008               	return
  8805  1B7F                     __end_of_close_tx:	
  8806                           
  8807                           	psect	text21
  8808  062D                     __ptext21:	
  8809 ;; *************** function _IP_chksum *****************
  8810 ;; Defined at:
  8811 ;;		line 411 in file "main.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;  sum             4   10[BANK0 ] unsigned long 
  8816 ;;  aux3            2    8[BANK0 ] unsigned int 
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  2    7[COMMON] unsigned int 
  8819 ;; Registers used:
  8820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8826 ;;      Params:         2       0       0       0       0
  8827 ;;      Locals:         0       6       0       0       0
  8828 ;;      Temps:          0       8       0       0       0
  8829 ;;      Totals:         2      14       0       0       0
  8830 ;;Total ram usage:       16 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:    1
  8833 ;; This function calls:
  8834 ;;		_join
  8835 ;; This function is called by:
  8836 ;;		_echo_ping
  8837 ;;		_udp_msg
  8838 ;;		_tcp_msg
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           
  8843                           ;psect for function _IP_chksum
  8844  062D                     _IP_chksum:	
  8845                           
  8846                           ;main.c: 412: unsigned long sum = 0;
  8847                           
  8848                           ;incstack = 0
  8849                           ; Regs used in _IP_chksum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8850  062D  3000               	movlw	0
  8851  062E  1283               	bcf	3,5	;RP0=0, select bank0
  8852  062F  1303               	bcf	3,6	;RP1=0, select bank0
  8853  0630  00AD               	movwf	IP_chksum@sum+3
  8854  0631  3000               	movlw	0
  8855  0632  00AC               	movwf	IP_chksum@sum+2
  8856  0633  3000               	movlw	0
  8857  0634  00AB               	movwf	IP_chksum@sum+1
  8858  0635  3000               	movlw	0
  8859  0636  00AA               	movwf	IP_chksum@sum
  8860                           
  8861                           ;main.c: 413: unsigned int aux3;
  8862                           ;main.c: 414: sum += join(&ip_tx.ver_ihl,&ip_tx.dscp_ecn);
  8863  0637  30C4               	movlw	(low ((_ip_tx| 0+1)))& (0+255)
  8864  0638  00A0               	movwf	??_IP_chksum
  8865  0639  0820               	movf	??_IP_chksum,w
  8866  063A  00F0               	movwf	join@lower
  8867  063B  30C3               	movlw	(low (_ip_tx| 0))& (0+255)
  8868  063C  160A  158A  20BF  120A  118A  	fcall	_join
  8869  0641  0870               	movf	?_join,w
  8870  0642  1283               	bcf	3,5	;RP0=0, select bank0
  8871  0643  1303               	bcf	3,6	;RP1=0, select bank0
  8872  0644  00A1               	movwf	??_IP_chksum+1
  8873  0645  0871               	movf	?_join+1,w
  8874  0646  00A2               	movwf	??_IP_chksum+2
  8875  0647  01A3               	clrf	??_IP_chksum+3
  8876  0648  01A4               	clrf	??_IP_chksum+4
  8877  0649  0821               	movf	??_IP_chksum+1,w
  8878  064A  07AA               	addwf	IP_chksum@sum,f
  8879  064B  0822               	movf	??_IP_chksum+2,w
  8880  064C  1103               	clrz
  8881  064D  1803               	skipnc
  8882  064E  3E01               	addlw	1
  8883  064F  1D03               	btfss	3,2
  8884  0650  07AB               	addwf	IP_chksum@sum+1,f
  8885  0651  0823               	movf	??_IP_chksum+3,w
  8886  0652  1103               	clrz
  8887  0653  1803               	skipnc
  8888  0654  3E01               	addlw	1
  8889  0655  1D03               	btfss	3,2
  8890  0656  07AC               	addwf	IP_chksum@sum+2,f
  8891  0657  0824               	movf	??_IP_chksum+4,w
  8892  0658  1103               	clrz
  8893  0659  1803               	skipnc
  8894  065A  3E01               	addlw	1
  8895  065B  1D03               	btfss	3,2
  8896  065C  07AD               	addwf	IP_chksum@sum+3,f
  8897                           
  8898                           ;main.c: 415: sum += join(&ip_tx.total_length[0],&ip_tx.total_length[1]);
  8899  065D  30C6               	movlw	(low ((_ip_tx| 0+3)))& (0+255)
  8900  065E  00A0               	movwf	??_IP_chksum
  8901  065F  0820               	movf	??_IP_chksum,w
  8902  0660  00F0               	movwf	join@lower
  8903  0661  30C5               	movlw	(low ((_ip_tx| 0+2)))& (0+255)
  8904  0662  160A  158A  20BF  120A  118A  	fcall	_join
  8905  0667  0870               	movf	?_join,w
  8906  0668  1283               	bcf	3,5	;RP0=0, select bank0
  8907  0669  1303               	bcf	3,6	;RP1=0, select bank0
  8908  066A  00A1               	movwf	??_IP_chksum+1
  8909  066B  0871               	movf	?_join+1,w
  8910  066C  00A2               	movwf	??_IP_chksum+2
  8911  066D  01A3               	clrf	??_IP_chksum+3
  8912  066E  01A4               	clrf	??_IP_chksum+4
  8913  066F  0821               	movf	??_IP_chksum+1,w
  8914  0670  07AA               	addwf	IP_chksum@sum,f
  8915  0671  0822               	movf	??_IP_chksum+2,w
  8916  0672  1103               	clrz
  8917  0673  1803               	skipnc
  8918  0674  3E01               	addlw	1
  8919  0675  1D03               	btfss	3,2
  8920  0676  07AB               	addwf	IP_chksum@sum+1,f
  8921  0677  0823               	movf	??_IP_chksum+3,w
  8922  0678  1103               	clrz
  8923  0679  1803               	skipnc
  8924  067A  3E01               	addlw	1
  8925  067B  1D03               	btfss	3,2
  8926  067C  07AC               	addwf	IP_chksum@sum+2,f
  8927  067D  0824               	movf	??_IP_chksum+4,w
  8928  067E  1103               	clrz
  8929  067F  1803               	skipnc
  8930  0680  3E01               	addlw	1
  8931  0681  1D03               	btfss	3,2
  8932  0682  07AD               	addwf	IP_chksum@sum+3,f
  8933                           
  8934                           ;main.c: 416: sum += join(&ip_tx.id[0],&ip_tx.id[1]);
  8935  0683  30C8               	movlw	(low ((_ip_tx| 0+5)))& (0+255)
  8936  0684  00A0               	movwf	??_IP_chksum
  8937  0685  0820               	movf	??_IP_chksum,w
  8938  0686  00F0               	movwf	join@lower
  8939  0687  30C7               	movlw	(low ((_ip_tx| 0+4)))& (0+255)
  8940  0688  160A  158A  20BF  120A  118A  	fcall	_join
  8941  068D  0870               	movf	?_join,w
  8942  068E  1283               	bcf	3,5	;RP0=0, select bank0
  8943  068F  1303               	bcf	3,6	;RP1=0, select bank0
  8944  0690  00A1               	movwf	??_IP_chksum+1
  8945  0691  0871               	movf	?_join+1,w
  8946  0692  00A2               	movwf	??_IP_chksum+2
  8947  0693  01A3               	clrf	??_IP_chksum+3
  8948  0694  01A4               	clrf	??_IP_chksum+4
  8949  0695  0821               	movf	??_IP_chksum+1,w
  8950  0696  07AA               	addwf	IP_chksum@sum,f
  8951  0697  0822               	movf	??_IP_chksum+2,w
  8952  0698  1103               	clrz
  8953  0699  1803               	skipnc
  8954  069A  3E01               	addlw	1
  8955  069B  1D03               	btfss	3,2
  8956  069C  07AB               	addwf	IP_chksum@sum+1,f
  8957  069D  0823               	movf	??_IP_chksum+3,w
  8958  069E  1103               	clrz
  8959  069F  1803               	skipnc
  8960  06A0  3E01               	addlw	1
  8961  06A1  1D03               	btfss	3,2
  8962  06A2  07AC               	addwf	IP_chksum@sum+2,f
  8963  06A3  0824               	movf	??_IP_chksum+4,w
  8964  06A4  1103               	clrz
  8965  06A5  1803               	skipnc
  8966  06A6  3E01               	addlw	1
  8967  06A7  1D03               	btfss	3,2
  8968  06A8  07AD               	addwf	IP_chksum@sum+3,f
  8969                           
  8970                           ;main.c: 417: sum += join(&ip_tx.ttl,&ip_tx.protocol);
  8971  06A9  30CC               	movlw	(low ((_ip_tx| 0+9)))& (0+255)
  8972  06AA  00A0               	movwf	??_IP_chksum
  8973  06AB  0820               	movf	??_IP_chksum,w
  8974  06AC  00F0               	movwf	join@lower
  8975  06AD  30CB               	movlw	(low ((_ip_tx| 0+8)))& (0+255)
  8976  06AE  160A  158A  20BF  120A  118A  	fcall	_join
  8977  06B3  0870               	movf	?_join,w
  8978  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  8979  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  8980  06B6  00A1               	movwf	??_IP_chksum+1
  8981  06B7  0871               	movf	?_join+1,w
  8982  06B8  00A2               	movwf	??_IP_chksum+2
  8983  06B9  01A3               	clrf	??_IP_chksum+3
  8984  06BA  01A4               	clrf	??_IP_chksum+4
  8985  06BB  0821               	movf	??_IP_chksum+1,w
  8986  06BC  07AA               	addwf	IP_chksum@sum,f
  8987  06BD  0822               	movf	??_IP_chksum+2,w
  8988  06BE  1103               	clrz
  8989  06BF  1803               	skipnc
  8990  06C0  3E01               	addlw	1
  8991  06C1  1D03               	btfss	3,2
  8992  06C2  07AB               	addwf	IP_chksum@sum+1,f
  8993  06C3  0823               	movf	??_IP_chksum+3,w
  8994  06C4  1103               	clrz
  8995  06C5  1803               	skipnc
  8996  06C6  3E01               	addlw	1
  8997  06C7  1D03               	btfss	3,2
  8998  06C8  07AC               	addwf	IP_chksum@sum+2,f
  8999  06C9  0824               	movf	??_IP_chksum+4,w
  9000  06CA  1103               	clrz
  9001  06CB  1803               	skipnc
  9002  06CC  3E01               	addlw	1
  9003  06CD  1D03               	btfss	3,2
  9004  06CE  07AD               	addwf	IP_chksum@sum+3,f
  9005                           
  9006                           ;main.c: 418: sum += join(&ip_tx.IP_s[0],&ip_tx.IP_s[1]);
  9007  06CF  30D0               	movlw	(low ((_ip_tx| 0+13)))& (0+255)
  9008  06D0  00A0               	movwf	??_IP_chksum
  9009  06D1  0820               	movf	??_IP_chksum,w
  9010  06D2  00F0               	movwf	join@lower
  9011  06D3  30CF               	movlw	(low ((_ip_tx| 0+12)))& (0+255)
  9012  06D4  160A  158A  20BF  120A  118A  	fcall	_join
  9013  06D9  0870               	movf	?_join,w
  9014  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  9015  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  9016  06DC  00A1               	movwf	??_IP_chksum+1
  9017  06DD  0871               	movf	?_join+1,w
  9018  06DE  00A2               	movwf	??_IP_chksum+2
  9019  06DF  01A3               	clrf	??_IP_chksum+3
  9020  06E0  01A4               	clrf	??_IP_chksum+4
  9021  06E1  0821               	movf	??_IP_chksum+1,w
  9022  06E2  07AA               	addwf	IP_chksum@sum,f
  9023  06E3  0822               	movf	??_IP_chksum+2,w
  9024  06E4  1103               	clrz
  9025  06E5  1803               	skipnc
  9026  06E6  3E01               	addlw	1
  9027  06E7  1D03               	btfss	3,2
  9028  06E8  07AB               	addwf	IP_chksum@sum+1,f
  9029  06E9  0823               	movf	??_IP_chksum+3,w
  9030  06EA  1103               	clrz
  9031  06EB  1803               	skipnc
  9032  06EC  3E01               	addlw	1
  9033  06ED  1D03               	btfss	3,2
  9034  06EE  07AC               	addwf	IP_chksum@sum+2,f
  9035  06EF  0824               	movf	??_IP_chksum+4,w
  9036  06F0  1103               	clrz
  9037  06F1  1803               	skipnc
  9038  06F2  3E01               	addlw	1
  9039  06F3  1D03               	btfss	3,2
  9040  06F4  07AD               	addwf	IP_chksum@sum+3,f
  9041                           
  9042                           ;main.c: 419: sum += join(&ip_tx.IP_s[2],&ip_tx.IP_s[3]);
  9043  06F5  30D2               	movlw	(low ((_ip_tx| 0+15)))& (0+255)
  9044  06F6  00A0               	movwf	??_IP_chksum
  9045  06F7  0820               	movf	??_IP_chksum,w
  9046  06F8  00F0               	movwf	join@lower
  9047  06F9  30D1               	movlw	(low ((_ip_tx| 0+14)))& (0+255)
  9048  06FA  160A  158A  20BF  120A  118A  	fcall	_join
  9049  06FF  0870               	movf	?_join,w
  9050  0700  1283               	bcf	3,5	;RP0=0, select bank0
  9051  0701  1303               	bcf	3,6	;RP1=0, select bank0
  9052  0702  00A1               	movwf	??_IP_chksum+1
  9053  0703  0871               	movf	?_join+1,w
  9054  0704  00A2               	movwf	??_IP_chksum+2
  9055  0705  01A3               	clrf	??_IP_chksum+3
  9056  0706  01A4               	clrf	??_IP_chksum+4
  9057  0707  0821               	movf	??_IP_chksum+1,w
  9058  0708  07AA               	addwf	IP_chksum@sum,f
  9059  0709  0822               	movf	??_IP_chksum+2,w
  9060  070A  1103               	clrz
  9061  070B  1803               	skipnc
  9062  070C  3E01               	addlw	1
  9063  070D  1D03               	btfss	3,2
  9064  070E  07AB               	addwf	IP_chksum@sum+1,f
  9065  070F  0823               	movf	??_IP_chksum+3,w
  9066  0710  1103               	clrz
  9067  0711  1803               	skipnc
  9068  0712  3E01               	addlw	1
  9069  0713  1D03               	btfss	3,2
  9070  0714  07AC               	addwf	IP_chksum@sum+2,f
  9071  0715  0824               	movf	??_IP_chksum+4,w
  9072  0716  1103               	clrz
  9073  0717  1803               	skipnc
  9074  0718  3E01               	addlw	1
  9075  0719  1D03               	btfss	3,2
  9076  071A  07AD               	addwf	IP_chksum@sum+3,f
  9077                           
  9078                           ;main.c: 420: sum += join(&ip_tx.IP_d[0],&ip_tx.IP_d[1]);
  9079  071B  30D4               	movlw	(low ((_ip_tx| 0+17)))& (0+255)
  9080  071C  00A0               	movwf	??_IP_chksum
  9081  071D  0820               	movf	??_IP_chksum,w
  9082  071E  00F0               	movwf	join@lower
  9083  071F  30D3               	movlw	(low ((_ip_tx| 0+16)))& (0+255)
  9084  0720  160A  158A  20BF  120A  118A  	fcall	_join
  9085  0725  0870               	movf	?_join,w
  9086  0726  1283               	bcf	3,5	;RP0=0, select bank0
  9087  0727  1303               	bcf	3,6	;RP1=0, select bank0
  9088  0728  00A1               	movwf	??_IP_chksum+1
  9089  0729  0871               	movf	?_join+1,w
  9090  072A  00A2               	movwf	??_IP_chksum+2
  9091  072B  01A3               	clrf	??_IP_chksum+3
  9092  072C  01A4               	clrf	??_IP_chksum+4
  9093  072D  0821               	movf	??_IP_chksum+1,w
  9094  072E  07AA               	addwf	IP_chksum@sum,f
  9095  072F  0822               	movf	??_IP_chksum+2,w
  9096  0730  1103               	clrz
  9097  0731  1803               	skipnc
  9098  0732  3E01               	addlw	1
  9099  0733  1D03               	btfss	3,2
  9100  0734  07AB               	addwf	IP_chksum@sum+1,f
  9101  0735  0823               	movf	??_IP_chksum+3,w
  9102  0736  1103               	clrz
  9103  0737  1803               	skipnc
  9104  0738  3E01               	addlw	1
  9105  0739  1D03               	btfss	3,2
  9106  073A  07AC               	addwf	IP_chksum@sum+2,f
  9107  073B  0824               	movf	??_IP_chksum+4,w
  9108  073C  1103               	clrz
  9109  073D  1803               	skipnc
  9110  073E  3E01               	addlw	1
  9111  073F  1D03               	btfss	3,2
  9112  0740  07AD               	addwf	IP_chksum@sum+3,f
  9113                           
  9114                           ;main.c: 421: sum += join(&ip_tx.IP_d[2],&ip_tx.IP_d[3]);
  9115  0741  30D6               	movlw	(low ((_ip_tx| 0+19)))& (0+255)
  9116  0742  00A0               	movwf	??_IP_chksum
  9117  0743  0820               	movf	??_IP_chksum,w
  9118  0744  00F0               	movwf	join@lower
  9119  0745  30D5               	movlw	(low ((_ip_tx| 0+18)))& (0+255)
  9120  0746  160A  158A  20BF  120A  118A  	fcall	_join
  9121  074B  0870               	movf	?_join,w
  9122  074C  1283               	bcf	3,5	;RP0=0, select bank0
  9123  074D  1303               	bcf	3,6	;RP1=0, select bank0
  9124  074E  00A1               	movwf	??_IP_chksum+1
  9125  074F  0871               	movf	?_join+1,w
  9126  0750  00A2               	movwf	??_IP_chksum+2
  9127  0751  01A3               	clrf	??_IP_chksum+3
  9128  0752  01A4               	clrf	??_IP_chksum+4
  9129  0753  0821               	movf	??_IP_chksum+1,w
  9130  0754  07AA               	addwf	IP_chksum@sum,f
  9131  0755  0822               	movf	??_IP_chksum+2,w
  9132  0756  1103               	clrz
  9133  0757  1803               	skipnc
  9134  0758  3E01               	addlw	1
  9135  0759  1D03               	btfss	3,2
  9136  075A  07AB               	addwf	IP_chksum@sum+1,f
  9137  075B  0823               	movf	??_IP_chksum+3,w
  9138  075C  1103               	clrz
  9139  075D  1803               	skipnc
  9140  075E  3E01               	addlw	1
  9141  075F  1D03               	btfss	3,2
  9142  0760  07AC               	addwf	IP_chksum@sum+2,f
  9143  0761  0824               	movf	??_IP_chksum+4,w
  9144  0762  1103               	clrz
  9145  0763  1803               	skipnc
  9146  0764  3E01               	addlw	1
  9147  0765  1D03               	btfss	3,2
  9148  0766  07AD               	addwf	IP_chksum@sum+3,f
  9149  0767                     i1l3160:	
  9150                           ;main.c: 422: while (sum > 0x0000FFFF) {
  9151                           
  9152  0767  082D               	movf	IP_chksum@sum+3,w
  9153  0768  1D03               	btfss	3,2
  9154  0769  2F78               	goto	i1l3156
  9155  076A  3001               	movlw	1
  9156  076B  022C               	subwf	IP_chksum@sum+2,w
  9157  076C  1D03               	skipz
  9158  076D  2F76               	goto	u251_23
  9159  076E  3000               	movlw	0
  9160  076F  022B               	subwf	IP_chksum@sum+1,w
  9161  0770  1D03               	skipz
  9162  0771  2F76               	goto	u251_23
  9163  0772  3000               	movlw	0
  9164  0773  022A               	subwf	IP_chksum@sum,w
  9165  0774  1D03               	skipz
  9166  0775  2F76               	goto	u251_23
  9167  0776                     u251_23:	
  9168  0776  1C03               	btfss	3,0
  9169  0777  2FBA               	goto	i1l3162
  9170  0778                     i1l3156:	
  9171                           
  9172                           ;main.c: 423: aux3 = sum >> 16;
  9173  0778  082A               	movf	IP_chksum@sum,w
  9174  0779  00A0               	movwf	??_IP_chksum
  9175  077A  082B               	movf	IP_chksum@sum+1,w
  9176  077B  00A1               	movwf	??_IP_chksum+1
  9177  077C  082C               	movf	IP_chksum@sum+2,w
  9178  077D  00A2               	movwf	??_IP_chksum+2
  9179  077E  082D               	movf	IP_chksum@sum+3,w
  9180  077F  00A3               	movwf	??_IP_chksum+3
  9181  0780  3010               	movlw	16
  9182  0781                     u249_25:	
  9183  0781  1003               	clrc
  9184  0782  0CA3               	rrf	??_IP_chksum+3,f
  9185  0783  0CA2               	rrf	??_IP_chksum+2,f
  9186  0784  0CA1               	rrf	??_IP_chksum+1,f
  9187  0785  0CA0               	rrf	??_IP_chksum,f
  9188  0786  3EFF               	addlw	-1
  9189  0787  1D03               	skipz
  9190  0788  2F81               	goto	u249_25
  9191  0789  0821               	movf	??_IP_chksum+1,w
  9192  078A  00A9               	movwf	IP_chksum@aux3+1
  9193  078B  0820               	movf	??_IP_chksum,w
  9194  078C  00A8               	movwf	IP_chksum@aux3
  9195                           
  9196                           ;main.c: 424: sum = (sum & 0x0000FFFF) + aux3;
  9197  078D  0828               	movf	IP_chksum@aux3,w
  9198  078E  00A0               	movwf	??_IP_chksum
  9199  078F  0829               	movf	IP_chksum@aux3+1,w
  9200  0790  00A1               	movwf	??_IP_chksum+1
  9201  0791  01A2               	clrf	??_IP_chksum+2
  9202  0792  01A3               	clrf	??_IP_chksum+3
  9203  0793  30FF               	movlw	255
  9204  0794  052A               	andwf	IP_chksum@sum,w
  9205  0795  00A4               	movwf	??_IP_chksum+4
  9206  0796  30FF               	movlw	255
  9207  0797  052B               	andwf	IP_chksum@sum+1,w
  9208  0798  00A5               	movwf	??_IP_chksum+5
  9209  0799  3000               	movlw	0
  9210  079A  052C               	andwf	IP_chksum@sum+2,w
  9211  079B  00A6               	movwf	??_IP_chksum+6
  9212  079C  3000               	movlw	0
  9213  079D  052D               	andwf	IP_chksum@sum+3,w
  9214  079E  00A7               	movwf	??_IP_chksum+7
  9215  079F  0824               	movf	??_IP_chksum+4,w
  9216  07A0  07A0               	addwf	??_IP_chksum,f
  9217  07A1  0825               	movf	??_IP_chksum+5,w
  9218  07A2  1803               	skipnc
  9219  07A3  0F25               	incfsz	??_IP_chksum+5,w
  9220  07A4  2FA6               	goto	u250_20
  9221  07A5  2FA7               	goto	u250_21
  9222  07A6                     u250_20:	
  9223  07A6  07A1               	addwf	??_IP_chksum+1,f
  9224  07A7                     u250_21:	
  9225  07A7  0826               	movf	??_IP_chksum+6,w
  9226  07A8  1803               	skipnc
  9227  07A9  0F26               	incfsz	??_IP_chksum+6,w
  9228  07AA  2FAC               	goto	u250_22
  9229  07AB  2FAD               	goto	u250_23
  9230  07AC                     u250_22:	
  9231  07AC  07A2               	addwf	??_IP_chksum+2,f
  9232  07AD                     u250_23:	
  9233  07AD  0827               	movf	??_IP_chksum+7,w
  9234  07AE  1803               	skipnc
  9235  07AF  0A27               	incf	??_IP_chksum+7,w
  9236  07B0  07A3               	addwf	??_IP_chksum+3,f
  9237  07B1  0823               	movf	??_IP_chksum+3,w
  9238  07B2  00AD               	movwf	IP_chksum@sum+3
  9239  07B3  0822               	movf	??_IP_chksum+2,w
  9240  07B4  00AC               	movwf	IP_chksum@sum+2
  9241  07B5  0821               	movf	??_IP_chksum+1,w
  9242  07B6  00AB               	movwf	IP_chksum@sum+1
  9243  07B7  0820               	movf	??_IP_chksum,w
  9244  07B8  00AA               	movwf	IP_chksum@sum
  9245  07B9  2F67               	goto	i1l3160
  9246  07BA                     i1l3162:	
  9247                           
  9248                           ;main.c: 425: }
  9249                           ;main.c: 426: aux3 = sum;
  9250  07BA  082B               	movf	IP_chksum@sum+1,w
  9251  07BB  00A9               	movwf	IP_chksum@aux3+1
  9252  07BC  082A               	movf	IP_chksum@sum,w
  9253  07BD  00A8               	movwf	IP_chksum@aux3
  9254                           
  9255                           ;main.c: 427: aux3 = ~aux3;
  9256  07BE  09A8               	comf	IP_chksum@aux3,f
  9257  07BF  09A9               	comf	IP_chksum@aux3+1,f
  9258                           
  9259                           ;main.c: 429: return aux3;
  9260  07C0  0829               	movf	IP_chksum@aux3+1,w
  9261  07C1  00F8               	movwf	?_IP_chksum+1
  9262  07C2  0828               	movf	IP_chksum@aux3,w
  9263  07C3  00F7               	movwf	?_IP_chksum
  9264  07C4  0008               	return
  9265  07C5                     __end_of_IP_chksum:	
  9266                           
  9267                           	psect	text22
  9268  18BF                     __ptext22:	
  9269 ;; *************** function _join *****************
  9270 ;; Defined at:
  9271 ;;		line 205 in file "main.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  upper           1    wreg     PTR unsigned char 
  9274 ;;		 -> tcp_tx.ack_num(4), ip_tx.IP_d(4), tcp_tx.seq_num(4), tcp_tx(21), 
  9275 ;;		 -> ping_echo(7), ip_tx.IP_s(4), ip_tx(20), 
  9276 ;;  lower           1    0[COMMON] PTR unsigned char 
  9277 ;;		 -> NULL(0), ping_echo.seq_num(2), ping_echo.id(2), tcp_tx.ack_num(4), 
  9278 ;;		 -> tcp_tx.PORT_d(2), ip_tx.IP_d(4), tcp_tx.offset_n_flags(2), tcp_tx.seq_num(4), 
  9279 ;;		 -> tcp_tx.PORT_s(2), tcp_tx(21), ping_echo(7), ip_tx.IP_s(4), 
  9280 ;;		 -> ip_tx.id(2), ip_tx.total_length(2), ip_tx(20), 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  upper           1    6[COMMON] PTR unsigned char 
  9283 ;;		 -> tcp_tx.ack_num(4), ip_tx.IP_d(4), tcp_tx.seq_num(4), tcp_tx(21), 
  9284 ;;		 -> ping_echo(7), ip_tx.IP_s(4), ip_tx(20), 
  9285 ;;  aux             2    4[COMMON] unsigned int 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  2    0[COMMON] unsigned int 
  9288 ;; Registers used:
  9289 ;;		wreg, fsr0l, fsr0h
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9295 ;;      Params:         2       0       0       0       0
  9296 ;;      Locals:         3       0       0       0       0
  9297 ;;      Temps:          2       0       0       0       0
  9298 ;;      Totals:         7       0       0       0       0
  9299 ;;Total ram usage:        7 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; This function calls:
  9302 ;;		Nothing
  9303 ;; This function is called by:
  9304 ;;		_IP_chksum
  9305 ;;		_TCP_chksum
  9306 ;;		_echo_ping
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _join
  9312  18BF                     _join:	
  9313                           
  9314                           ;incstack = 0
  9315                           ; Regs used in _join: [wregfsr0]
  9316                           ;join@upper stored from wreg
  9317  18BF  00F6               	movwf	join@upper
  9318                           
  9319                           ;main.c: 206: unsigned int aux;
  9320                           ;main.c: 208: aux = *upper;
  9321  18C0  0876               	movf	join@upper,w
  9322  18C1  0084               	movwf	4
  9323  18C2  1383               	bcf	3,7	;select IRP bank0
  9324  18C3  0800               	movf	0,w
  9325  18C4  00F2               	movwf	??_join
  9326  18C5  01F3               	clrf	??_join+1
  9327  18C6  0872               	movf	??_join,w
  9328  18C7  00F4               	movwf	join@aux
  9329  18C8  0873               	movf	??_join+1,w
  9330  18C9  00F5               	movwf	join@aux+1
  9331                           
  9332                           ;main.c: 209: aux = aux << 8;
  9333  18CA  0874               	movf	join@aux,w
  9334  18CB  00F3               	movwf	??_join+1
  9335  18CC  01F2               	clrf	??_join
  9336  18CD  0872               	movf	??_join,w
  9337  18CE  00F4               	movwf	join@aux
  9338  18CF  0873               	movf	??_join+1,w
  9339  18D0  00F5               	movwf	join@aux+1
  9340                           
  9341                           ;main.c: 210: aux += *lower;
  9342  18D1  0870               	movf	join@lower,w
  9343  18D2  0084               	movwf	4
  9344  18D3  0800               	movf	0,w
  9345  18D4  00F2               	movwf	??_join
  9346  18D5  01F3               	clrf	??_join+1
  9347  18D6  0872               	movf	??_join,w
  9348  18D7  07F4               	addwf	join@aux,f
  9349  18D8  1803               	skipnc
  9350  18D9  0AF5               	incf	join@aux+1,f
  9351  18DA  0873               	movf	??_join+1,w
  9352  18DB  07F5               	addwf	join@aux+1,f
  9353                           
  9354                           ;main.c: 212: return aux;
  9355  18DC  0875               	movf	join@aux+1,w
  9356  18DD  00F1               	movwf	?_join+1
  9357  18DE  0874               	movf	join@aux,w
  9358  18DF  00F0               	movwf	?_join
  9359  18E0  0008               	return
  9360  18E1                     __end_of_join:	
  9361                           
  9362                           	psect	text23
  9363  141E                     __ptext23:	
  9364 ;; *************** function _config_eth *****************
  9365 ;; Defined at:
  9366 ;;		line 215 in file "main.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;		None
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;  ready           1    9[COMMON] unsigned char 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9380 ;;      Params:         0       0       0       0       0
  9381 ;;      Locals:         1       0       0       0       0
  9382 ;;      Temps:          3       0       0       0       0
  9383 ;;      Totals:         4       0       0       0       0
  9384 ;;Total ram usage:        4 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    1
  9387 ;; This function calls:
  9388 ;;		_spi
  9389 ;; This function is called by:
  9390 ;;		_isr
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           
  9395                           ;psect for function _config_eth
  9396  141E                     _config_eth:	
  9397                           
  9398                           ;main.c: 216: char ready = 0;
  9399                           
  9400                           ;incstack = 0
  9401                           ; Regs used in _config_eth: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9402  141E  01F9               	clrf	config_eth@ready
  9403                           
  9404                           ;main.c: 218: _delay((unsigned long)((100)*(8000000/4000.0)));
  9405  141F  3002               	movlw	2
  9406  1420  00F8               	movwf	??_config_eth+2
  9407  1421  3004               	movlw	4
  9408  1422  00F7               	movwf	??_config_eth+1
  9409  1423  30BA               	movlw	186
  9410  1424  00F6               	movwf	??_config_eth
  9411  1425                     u496_27:	
  9412  1425  0BF6               	decfsz	??_config_eth,f
  9413  1426  2C25               	goto	u496_27
  9414  1427  0BF7               	decfsz	??_config_eth+1,f
  9415  1428  2C25               	goto	u496_27
  9416  1429  0BF8               	decfsz	??_config_eth+2,f
  9417  142A  2C25               	goto	u496_27
  9418  142B  0000               	nop
  9419                           
  9420                           ;main.c: 219: PORTBbits.RB0 = 1;
  9421  142C  1283               	bcf	3,5	;RP0=0, select bank0
  9422  142D  1303               	bcf	3,6	;RP1=0, select bank0
  9423  142E  1406               	bsf	6,0	;volatile
  9424                           
  9425                           ;main.c: 220: _delay((unsigned long)((100)*(8000000/4000.0)));
  9426  142F  3002               	movlw	2
  9427  1430  00F8               	movwf	??_config_eth+2
  9428  1431  3004               	movlw	4
  9429  1432  00F7               	movwf	??_config_eth+1
  9430  1433  30BA               	movlw	186
  9431  1434  00F6               	movwf	??_config_eth
  9432  1435                     u497_27:	
  9433  1435  0BF6               	decfsz	??_config_eth,f
  9434  1436  2C35               	goto	u497_27
  9435  1437  0BF7               	decfsz	??_config_eth+1,f
  9436  1438  2C35               	goto	u497_27
  9437  1439  0BF8               	decfsz	??_config_eth+2,f
  9438  143A  2C35               	goto	u497_27
  9439  143B  0000               	nop
  9440  143C                     i1l3886:	
  9441                           ;main.c: 221: do {
  9442                           
  9443                           
  9444                           ;main.c: 222: PORTBbits.RB2 = 0;
  9445  143C  1283               	bcf	3,5	;RP0=0, select bank0
  9446  143D  1303               	bcf	3,6	;RP1=0, select bank0
  9447  143E  1106               	bcf	6,2	;volatile
  9448                           
  9449                           ;main.c: 223: spi(0x1D | 0x00,1);
  9450  143F  01F0               	clrf	spi@rw
  9451  1440  0AF0               	incf	spi@rw,f
  9452  1441  301D               	movlw	29
  9453  1442  160A  158A  21B5  160A  118A  	fcall	_spi
  9454                           
  9455                           ;main.c: 224: ready = spi(0,0) & 0x01;
  9456  1447  01F0               	clrf	spi@rw
  9457  1448  3000               	movlw	0
  9458  1449  160A  158A  21B5  160A  118A  	fcall	_spi
  9459  144E  3901               	andlw	1
  9460  144F  00F6               	movwf	??_config_eth
  9461  1450  0876               	movf	??_config_eth,w
  9462  1451  00F9               	movwf	config_eth@ready
  9463                           
  9464                           ;main.c: 225: PORTBbits.RB2 = 1;
  9465  1452  1283               	bcf	3,5	;RP0=0, select bank0
  9466  1453  1303               	bcf	3,6	;RP1=0, select bank0
  9467  1454  1506               	bsf	6,2	;volatile
  9468                           
  9469                           ;main.c: 226: _delay((unsigned long)((100)*(8000000/4000000.0)));
  9470  1455  3042               	movlw	66
  9471  1456  00F6               	movwf	??_config_eth
  9472  1457                     u498_27:	
  9473  1457  0BF6               	decfsz	??_config_eth,f
  9474  1458  2C57               	goto	u498_27
  9475  1459  0000               	nop
  9476                           
  9477                           ;main.c: 227: } while (ready == 0);
  9478  145A  0879               	movf	config_eth@ready,w
  9479  145B  1903               	btfsc	3,2
  9480  145C  2C3C               	goto	i1l3886
  9481                           
  9482                           ;main.c: 229: PORTBbits.RB2 = 0;
  9483  145D  1283               	bcf	3,5	;RP0=0, select bank0
  9484  145E  1303               	bcf	3,6	;RP1=0, select bank0
  9485  145F  1106               	bcf	6,2	;volatile
  9486                           
  9487                           ;main.c: 230: spi(0x1F | 0x40,1);
  9488  1460  01F0               	clrf	spi@rw
  9489  1461  0AF0               	incf	spi@rw,f
  9490  1462  305F               	movlw	95
  9491  1463  160A  158A  21B5  160A  118A  	fcall	_spi
  9492                           
  9493                           ;main.c: 231: spi(0b00000000,1);
  9494  1468  01F0               	clrf	spi@rw
  9495  1469  0AF0               	incf	spi@rw,f
  9496  146A  3000               	movlw	0
  9497  146B  160A  158A  21B5  160A  118A  	fcall	_spi
  9498                           
  9499                           ;main.c: 232: PORTBbits.RB2 = 1;
  9500  1470  1283               	bcf	3,5	;RP0=0, select bank0
  9501  1471  1303               	bcf	3,6	;RP1=0, select bank0
  9502  1472  1506               	bsf	6,2	;volatile
  9503                           
  9504                           ;main.c: 233: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9505  1473  3006               	movlw	6
  9506  1474  00F6               	movwf	??_config_eth
  9507  1475                     u499_27:	
  9508  1475  0BF6               	decfsz	??_config_eth,f
  9509  1476  2C75               	goto	u499_27
  9510  1477  0000               	nop
  9511                           
  9512                           ;main.c: 234: PORTBbits.RB2 = 0;
  9513  1478  1283               	bcf	3,5	;RP0=0, select bank0
  9514  1479  1303               	bcf	3,6	;RP1=0, select bank0
  9515  147A  1106               	bcf	6,2	;volatile
  9516                           
  9517                           ;main.c: 235: spi(0x1E | 0x40,1);
  9518  147B  01F0               	clrf	spi@rw
  9519  147C  0AF0               	incf	spi@rw,f
  9520  147D  305E               	movlw	94
  9521  147E  160A  158A  21B5  160A  118A  	fcall	_spi
  9522                           
  9523                           ;main.c: 236: spi(0b10000000,1);
  9524  1483  01F0               	clrf	spi@rw
  9525  1484  0AF0               	incf	spi@rw,f
  9526  1485  3080               	movlw	128
  9527  1486  160A  158A  21B5  160A  118A  	fcall	_spi
  9528                           
  9529                           ;main.c: 237: PORTBbits.RB2 = 1;
  9530  148B  1283               	bcf	3,5	;RP0=0, select bank0
  9531  148C  1303               	bcf	3,6	;RP1=0, select bank0
  9532  148D  1506               	bsf	6,2	;volatile
  9533                           
  9534                           ;main.c: 238: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9535  148E  3006               	movlw	6
  9536  148F  00F6               	movwf	??_config_eth
  9537  1490                     u500_27:	
  9538  1490  0BF6               	decfsz	??_config_eth,f
  9539  1491  2C90               	goto	u500_27
  9540  1492  0000               	nop
  9541                           
  9542                           ;main.c: 239: PORTBbits.RB2 = 0;
  9543  1493  1283               	bcf	3,5	;RP0=0, select bank0
  9544  1494  1303               	bcf	3,6	;RP1=0, select bank0
  9545  1495  1106               	bcf	6,2	;volatile
  9546                           
  9547                           ;main.c: 240: spi(0x1B | 0x40,1);
  9548  1496  01F0               	clrf	spi@rw
  9549  1497  0AF0               	incf	spi@rw,f
  9550  1498  305B               	movlw	91
  9551  1499  160A  158A  21B5  160A  118A  	fcall	_spi
  9552                           
  9553                           ;main.c: 241: spi(0b11001011,1);
  9554  149E  01F0               	clrf	spi@rw
  9555  149F  0AF0               	incf	spi@rw,f
  9556  14A0  30CB               	movlw	203
  9557  14A1  160A  158A  21B5  160A  118A  	fcall	_spi
  9558                           
  9559                           ;main.c: 242: PORTBbits.RB2 = 1;
  9560  14A6  1283               	bcf	3,5	;RP0=0, select bank0
  9561  14A7  1303               	bcf	3,6	;RP1=0, select bank0
  9562  14A8  1506               	bsf	6,2	;volatile
  9563                           
  9564                           ;main.c: 243: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9565  14A9  3006               	movlw	6
  9566  14AA  00F6               	movwf	??_config_eth
  9567  14AB                     u501_27:	
  9568  14AB  0BF6               	decfsz	??_config_eth,f
  9569  14AC  2CAB               	goto	u501_27
  9570  14AD  0000               	nop
  9571                           
  9572                           ;main.c: 244: PORTBbits.RB2 = 0;
  9573  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  9574  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  9575  14B0  1106               	bcf	6,2	;volatile
  9576                           
  9577                           ;main.c: 245: spi(0x08 | 0x40,1);
  9578  14B1  01F0               	clrf	spi@rw
  9579  14B2  0AF0               	incf	spi@rw,f
  9580  14B3  3048               	movlw	72
  9581  14B4  160A  158A  21B5  160A  118A  	fcall	_spi
  9582                           
  9583                           ;main.c: 246: spi(0x00,1);
  9584  14B9  01F0               	clrf	spi@rw
  9585  14BA  0AF0               	incf	spi@rw,f
  9586  14BB  3000               	movlw	0
  9587  14BC  160A  158A  21B5  160A  118A  	fcall	_spi
  9588                           
  9589                           ;main.c: 247: PORTBbits.RB2 = 1;
  9590  14C1  1283               	bcf	3,5	;RP0=0, select bank0
  9591  14C2  1303               	bcf	3,6	;RP1=0, select bank0
  9592  14C3  1506               	bsf	6,2	;volatile
  9593                           
  9594                           ;main.c: 248: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9595  14C4  3006               	movlw	6
  9596  14C5  00F6               	movwf	??_config_eth
  9597  14C6                     u502_27:	
  9598  14C6  0BF6               	decfsz	??_config_eth,f
  9599  14C7  2CC6               	goto	u502_27
  9600  14C8  0000               	nop
  9601                           
  9602                           ;main.c: 249: PORTBbits.RB2 = 0;
  9603  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  9604  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  9605  14CB  1106               	bcf	6,2	;volatile
  9606                           
  9607                           ;main.c: 250: spi(0x09 | 0x40,1);
  9608  14CC  01F0               	clrf	spi@rw
  9609  14CD  0AF0               	incf	spi@rw,f
  9610  14CE  3049               	movlw	73
  9611  14CF  160A  158A  21B5  160A  118A  	fcall	_spi
  9612                           
  9613                           ;main.c: 251: spi(0x00,1);
  9614  14D4  01F0               	clrf	spi@rw
  9615  14D5  0AF0               	incf	spi@rw,f
  9616  14D6  3000               	movlw	0
  9617  14D7  160A  158A  21B5  160A  118A  	fcall	_spi
  9618                           
  9619                           ;main.c: 252: PORTBbits.RB2 = 1;
  9620  14DC  1283               	bcf	3,5	;RP0=0, select bank0
  9621  14DD  1303               	bcf	3,6	;RP1=0, select bank0
  9622  14DE  1506               	bsf	6,2	;volatile
  9623                           
  9624                           ;main.c: 253: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9625  14DF  3006               	movlw	6
  9626  14E0  00F6               	movwf	??_config_eth
  9627  14E1                     u503_27:	
  9628  14E1  0BF6               	decfsz	??_config_eth,f
  9629  14E2  2CE1               	goto	u503_27
  9630  14E3  0000               	nop
  9631                           
  9632                           ;main.c: 254: PORTBbits.RB2 = 0;
  9633  14E4  1283               	bcf	3,5	;RP0=0, select bank0
  9634  14E5  1303               	bcf	3,6	;RP1=0, select bank0
  9635  14E6  1106               	bcf	6,2	;volatile
  9636                           
  9637                           ;main.c: 255: spi(0x0A | 0x40,1);
  9638  14E7  01F0               	clrf	spi@rw
  9639  14E8  0AF0               	incf	spi@rw,f
  9640  14E9  304A               	movlw	74
  9641  14EA  160A  158A  21B5  160A  118A  	fcall	_spi
  9642                           
  9643                           ;main.c: 256: spi(0xFF,1);
  9644  14EF  01F0               	clrf	spi@rw
  9645  14F0  0AF0               	incf	spi@rw,f
  9646  14F1  30FF               	movlw	255
  9647  14F2  160A  158A  21B5  160A  118A  	fcall	_spi
  9648                           
  9649                           ;main.c: 257: PORTBbits.RB2 = 1;
  9650  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  9651  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  9652  14F9  1506               	bsf	6,2	;volatile
  9653                           
  9654                           ;main.c: 258: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9655  14FA  3006               	movlw	6
  9656  14FB  00F6               	movwf	??_config_eth
  9657  14FC                     u504_27:	
  9658  14FC  0BF6               	decfsz	??_config_eth,f
  9659  14FD  2CFC               	goto	u504_27
  9660  14FE  0000               	nop
  9661                           
  9662                           ;main.c: 259: PORTBbits.RB2 = 0;
  9663  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  9664  1500  1303               	bcf	3,6	;RP1=0, select bank0
  9665  1501  1106               	bcf	6,2	;volatile
  9666                           
  9667                           ;main.c: 260: spi(0x0B | 0x40,1);
  9668  1502  01F0               	clrf	spi@rw
  9669  1503  0AF0               	incf	spi@rw,f
  9670  1504  304B               	movlw	75
  9671  1505  160A  158A  21B5  160A  118A  	fcall	_spi
  9672                           
  9673                           ;main.c: 261: spi(0x1E,1);
  9674  150A  01F0               	clrf	spi@rw
  9675  150B  0AF0               	incf	spi@rw,f
  9676  150C  301E               	movlw	30
  9677  150D  160A  158A  21B5  160A  118A  	fcall	_spi
  9678                           
  9679                           ;main.c: 262: PORTBbits.RB2 = 1;
  9680  1512  1283               	bcf	3,5	;RP0=0, select bank0
  9681  1513  1303               	bcf	3,6	;RP1=0, select bank0
  9682  1514  1506               	bsf	6,2	;volatile
  9683                           
  9684                           ;main.c: 263: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9685  1515  3006               	movlw	6
  9686  1516  00F6               	movwf	??_config_eth
  9687  1517                     u505_27:	
  9688  1517  0BF6               	decfsz	??_config_eth,f
  9689  1518  2D17               	goto	u505_27
  9690  1519  0000               	nop
  9691                           
  9692                           ;main.c: 264: PORTBbits.RB2 = 0;
  9693  151A  1283               	bcf	3,5	;RP0=0, select bank0
  9694  151B  1303               	bcf	3,6	;RP1=0, select bank0
  9695  151C  1106               	bcf	6,2	;volatile
  9696                           
  9697                           ;main.c: 265: spi(0x00 | 0x40,1);
  9698  151D  01F0               	clrf	spi@rw
  9699  151E  0AF0               	incf	spi@rw,f
  9700  151F  3040               	movlw	64
  9701  1520  160A  158A  21B5  160A  118A  	fcall	_spi
  9702                           
  9703                           ;main.c: 266: spi(0x00,1);
  9704  1525  01F0               	clrf	spi@rw
  9705  1526  0AF0               	incf	spi@rw,f
  9706  1527  3000               	movlw	0
  9707  1528  160A  158A  21B5  160A  118A  	fcall	_spi
  9708                           
  9709                           ;main.c: 267: PORTBbits.RB2 = 1;
  9710  152D  1283               	bcf	3,5	;RP0=0, select bank0
  9711  152E  1303               	bcf	3,6	;RP1=0, select bank0
  9712  152F  1506               	bsf	6,2	;volatile
  9713                           
  9714                           ;main.c: 268: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9715  1530  3006               	movlw	6
  9716  1531  00F6               	movwf	??_config_eth
  9717  1532                     u506_27:	
  9718  1532  0BF6               	decfsz	??_config_eth,f
  9719  1533  2D32               	goto	u506_27
  9720  1534  0000               	nop
  9721                           
  9722                           ;main.c: 269: PORTBbits.RB2 = 0;
  9723  1535  1283               	bcf	3,5	;RP0=0, select bank0
  9724  1536  1303               	bcf	3,6	;RP1=0, select bank0
  9725  1537  1106               	bcf	6,2	;volatile
  9726                           
  9727                           ;main.c: 270: spi(0x01 | 0x40,1);
  9728  1538  01F0               	clrf	spi@rw
  9729  1539  0AF0               	incf	spi@rw,f
  9730  153A  3041               	movlw	65
  9731  153B  160A  158A  21B5  160A  118A  	fcall	_spi
  9732                           
  9733                           ;main.c: 271: spi(0x00,1);
  9734  1540  01F0               	clrf	spi@rw
  9735  1541  0AF0               	incf	spi@rw,f
  9736  1542  3000               	movlw	0
  9737  1543  160A  158A  21B5  160A  118A  	fcall	_spi
  9738                           
  9739                           ;main.c: 272: PORTBbits.RB2 = 1;
  9740  1548  1283               	bcf	3,5	;RP0=0, select bank0
  9741  1549  1303               	bcf	3,6	;RP1=0, select bank0
  9742  154A  1506               	bsf	6,2	;volatile
  9743                           
  9744                           ;main.c: 273: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9745  154B  3006               	movlw	6
  9746  154C  00F6               	movwf	??_config_eth
  9747  154D                     u507_27:	
  9748  154D  0BF6               	decfsz	??_config_eth,f
  9749  154E  2D4D               	goto	u507_27
  9750  154F  0000               	nop
  9751                           
  9752                           ;main.c: 274: PORTBbits.RB2 = 0;
  9753  1550  1283               	bcf	3,5	;RP0=0, select bank0
  9754  1551  1303               	bcf	3,6	;RP1=0, select bank0
  9755  1552  1106               	bcf	6,2	;volatile
  9756                           
  9757                           ;main.c: 275: spi(0x04 | 0x40,1);
  9758  1553  01F0               	clrf	spi@rw
  9759  1554  0AF0               	incf	spi@rw,f
  9760  1555  3044               	movlw	68
  9761  1556  160A  158A  21B5  160A  118A  	fcall	_spi
  9762                           
  9763                           ;main.c: 276: spi(0x00,1);
  9764  155B  01F0               	clrf	spi@rw
  9765  155C  0AF0               	incf	spi@rw,f
  9766  155D  3000               	movlw	0
  9767  155E  160A  158A  21B5  160A  118A  	fcall	_spi
  9768                           
  9769                           ;main.c: 277: PORTBbits.RB2 = 1;
  9770  1563  1283               	bcf	3,5	;RP0=0, select bank0
  9771  1564  1303               	bcf	3,6	;RP1=0, select bank0
  9772  1565  1506               	bsf	6,2	;volatile
  9773                           
  9774                           ;main.c: 278: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9775  1566  3006               	movlw	6
  9776  1567  00F6               	movwf	??_config_eth
  9777  1568                     u508_27:	
  9778  1568  0BF6               	decfsz	??_config_eth,f
  9779  1569  2D68               	goto	u508_27
  9780  156A  0000               	nop
  9781                           
  9782                           ;main.c: 279: PORTBbits.RB2 = 0;
  9783  156B  1283               	bcf	3,5	;RP0=0, select bank0
  9784  156C  1303               	bcf	3,6	;RP1=0, select bank0
  9785  156D  1106               	bcf	6,2	;volatile
  9786                           
  9787                           ;main.c: 280: spi(0x05 | 0x40,1);
  9788  156E  01F0               	clrf	spi@rw
  9789  156F  0AF0               	incf	spi@rw,f
  9790  1570  3045               	movlw	69
  9791  1571  160A  158A  21B5  160A  118A  	fcall	_spi
  9792                           
  9793                           ;main.c: 281: spi(0x1F,1);
  9794  1576  01F0               	clrf	spi@rw
  9795  1577  0AF0               	incf	spi@rw,f
  9796  1578  301F               	movlw	31
  9797  1579  160A  158A  21B5  160A  118A  	fcall	_spi
  9798                           
  9799                           ;main.c: 282: PORTBbits.RB2 = 1;
  9800  157E  1283               	bcf	3,5	;RP0=0, select bank0
  9801  157F  1303               	bcf	3,6	;RP1=0, select bank0
  9802  1580  1506               	bsf	6,2	;volatile
  9803                           
  9804                           ;main.c: 284: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9805  1581  3006               	movlw	6
  9806  1582  00F6               	movwf	??_config_eth
  9807  1583                     u509_27:	
  9808  1583  0BF6               	decfsz	??_config_eth,f
  9809  1584  2D83               	goto	u509_27
  9810  1585  0000               	nop
  9811                           
  9812                           ;main.c: 285: PORTBbits.RB2 = 0;
  9813  1586  1283               	bcf	3,5	;RP0=0, select bank0
  9814  1587  1303               	bcf	3,6	;RP1=0, select bank0
  9815  1588  1106               	bcf	6,2	;volatile
  9816                           
  9817                           ;main.c: 286: spi(0x1F | 0x80,1);
  9818  1589  01F0               	clrf	spi@rw
  9819  158A  0AF0               	incf	spi@rw,f
  9820  158B  309F               	movlw	159
  9821  158C  160A  158A  21B5  160A  118A  	fcall	_spi
  9822                           
  9823                           ;main.c: 287: spi(0x01,1);
  9824  1591  01F0               	clrf	spi@rw
  9825  1592  0AF0               	incf	spi@rw,f
  9826  1593  3001               	movlw	1
  9827  1594  160A  158A  21B5  160A  118A  	fcall	_spi
  9828                           
  9829                           ;main.c: 288: PORTBbits.RB2 = 1;
  9830  1599  1283               	bcf	3,5	;RP0=0, select bank0
  9831  159A  1303               	bcf	3,6	;RP1=0, select bank0
  9832  159B  1506               	bsf	6,2	;volatile
  9833                           
  9834                           ;main.c: 290: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9835  159C  3006               	movlw	6
  9836  159D  00F6               	movwf	??_config_eth
  9837  159E                     u510_27:	
  9838  159E  0BF6               	decfsz	??_config_eth,f
  9839  159F  2D9E               	goto	u510_27
  9840  15A0  0000               	nop
  9841                           
  9842                           ;main.c: 291: PORTBbits.RB2 = 0;
  9843  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9844  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  9845  15A3  1106               	bcf	6,2	;volatile
  9846                           
  9847                           ;main.c: 292: spi(0x18 | 0x40,1);
  9848  15A4  01F0               	clrf	spi@rw
  9849  15A5  0AF0               	incf	spi@rw,f
  9850  15A6  3058               	movlw	88
  9851  15A7  160A  158A  21B5  160A  118A  	fcall	_spi
  9852                           
  9853                           ;main.c: 293: spi(0b10100000,1);
  9854  15AC  01F0               	clrf	spi@rw
  9855  15AD  0AF0               	incf	spi@rw,f
  9856  15AE  30A0               	movlw	160
  9857  15AF  160A  158A  21B5  160A  118A  	fcall	_spi
  9858                           
  9859                           ;main.c: 294: PORTBbits.RB2 = 1;
  9860  15B4  1283               	bcf	3,5	;RP0=0, select bank0
  9861  15B5  1303               	bcf	3,6	;RP1=0, select bank0
  9862  15B6  1506               	bsf	6,2	;volatile
  9863                           
  9864                           ;main.c: 296: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9865  15B7  3006               	movlw	6
  9866  15B8  00F6               	movwf	??_config_eth
  9867  15B9                     u511_27:	
  9868  15B9  0BF6               	decfsz	??_config_eth,f
  9869  15BA  2DB9               	goto	u511_27
  9870  15BB  0000               	nop
  9871                           
  9872                           ;main.c: 297: PORTBbits.RB2 = 0;
  9873  15BC  1283               	bcf	3,5	;RP0=0, select bank0
  9874  15BD  1303               	bcf	3,6	;RP1=0, select bank0
  9875  15BE  1106               	bcf	6,2	;volatile
  9876                           
  9877                           ;main.c: 298: spi(0x1F | 0x80,1);
  9878  15BF  01F0               	clrf	spi@rw
  9879  15C0  0AF0               	incf	spi@rw,f
  9880  15C1  309F               	movlw	159
  9881  15C2  160A  158A  21B5  160A  118A  	fcall	_spi
  9882                           
  9883                           ;main.c: 299: spi(0x02,1);
  9884  15C7  01F0               	clrf	spi@rw
  9885  15C8  0AF0               	incf	spi@rw,f
  9886  15C9  3002               	movlw	2
  9887  15CA  160A  158A  21B5  160A  118A  	fcall	_spi
  9888                           
  9889                           ;main.c: 300: PORTBbits.RB2 = 1;
  9890  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  9891  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  9892  15D1  1506               	bsf	6,2	;volatile
  9893                           
  9894                           ;main.c: 302: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9895  15D2  3006               	movlw	6
  9896  15D3  00F6               	movwf	??_config_eth
  9897  15D4                     u512_27:	
  9898  15D4  0BF6               	decfsz	??_config_eth,f
  9899  15D5  2DD4               	goto	u512_27
  9900  15D6  0000               	nop
  9901                           
  9902                           ;main.c: 303: PORTBbits.RB2 = 0;
  9903  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  9904  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  9905  15D9  1106               	bcf	6,2	;volatile
  9906                           
  9907                           ;main.c: 304: spi(0x01 | 0x40,1);
  9908  15DA  01F0               	clrf	spi@rw
  9909  15DB  0AF0               	incf	spi@rw,f
  9910  15DC  3041               	movlw	65
  9911  15DD  160A  158A  21B5  160A  118A  	fcall	_spi
  9912                           
  9913                           ;main.c: 305: spi(link_tx.MAC_s[5],1);
  9914  15E2  01F0               	clrf	spi@rw
  9915  15E3  0AF0               	incf	spi@rw,f
  9916  15E4  1683               	bsf	3,5	;RP0=1, select bank1
  9917  15E5  1303               	bcf	3,6	;RP1=0, select bank1
  9918  15E6  082B               	movf	(_link_tx^(0+128)+11),w
  9919  15E7  160A  158A  21B5  160A  118A  	fcall	_spi
  9920                           
  9921                           ;main.c: 306: PORTBbits.RB2 = 1;
  9922  15EC  1283               	bcf	3,5	;RP0=0, select bank0
  9923  15ED  1303               	bcf	3,6	;RP1=0, select bank0
  9924  15EE  1506               	bsf	6,2	;volatile
  9925                           
  9926                           ;main.c: 307: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9927  15EF  3006               	movlw	6
  9928  15F0  00F6               	movwf	??_config_eth
  9929  15F1                     u513_27:	
  9930  15F1  0BF6               	decfsz	??_config_eth,f
  9931  15F2  2DF1               	goto	u513_27
  9932  15F3  0000               	nop
  9933                           
  9934                           ;main.c: 308: PORTBbits.RB2 = 0;
  9935  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  9936  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  9937  15F6  1106               	bcf	6,2	;volatile
  9938                           
  9939                           ;main.c: 309: spi(0x00 | 0x40,1);
  9940  15F7  01F0               	clrf	spi@rw
  9941  15F8  0AF0               	incf	spi@rw,f
  9942  15F9  3040               	movlw	64
  9943  15FA  160A  158A  21B5  160A  118A  	fcall	_spi
  9944                           
  9945                           ;main.c: 310: spi(link_tx.MAC_s[4],1);
  9946  15FF  01F0               	clrf	spi@rw
  9947  1600  0AF0               	incf	spi@rw,f
  9948  1601  1683               	bsf	3,5	;RP0=1, select bank1
  9949  1602  1303               	bcf	3,6	;RP1=0, select bank1
  9950  1603  082A               	movf	(_link_tx^(0+128)+10),w
  9951  1604  160A  158A  21B5  160A  118A  	fcall	_spi
  9952                           
  9953                           ;main.c: 311: PORTBbits.RB2 = 1;
  9954  1609  1283               	bcf	3,5	;RP0=0, select bank0
  9955  160A  1303               	bcf	3,6	;RP1=0, select bank0
  9956  160B  1506               	bsf	6,2	;volatile
  9957                           
  9958                           ;main.c: 312: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9959  160C  3006               	movlw	6
  9960  160D  00F6               	movwf	??_config_eth
  9961  160E                     u514_27:	
  9962  160E  0BF6               	decfsz	??_config_eth,f
  9963  160F  2E0E               	goto	u514_27
  9964  1610  0000               	nop
  9965                           
  9966                           ;main.c: 313: PORTBbits.RB2 = 0;
  9967  1611  1283               	bcf	3,5	;RP0=0, select bank0
  9968  1612  1303               	bcf	3,6	;RP1=0, select bank0
  9969  1613  1106               	bcf	6,2	;volatile
  9970                           
  9971                           ;main.c: 314: spi(0x03 | 0x40,1);
  9972  1614  01F0               	clrf	spi@rw
  9973  1615  0AF0               	incf	spi@rw,f
  9974  1616  3043               	movlw	67
  9975  1617  160A  158A  21B5  160A  118A  	fcall	_spi
  9976                           
  9977                           ;main.c: 315: spi(link_tx.MAC_s[3],1);
  9978  161C  01F0               	clrf	spi@rw
  9979  161D  0AF0               	incf	spi@rw,f
  9980  161E  1683               	bsf	3,5	;RP0=1, select bank1
  9981  161F  1303               	bcf	3,6	;RP1=0, select bank1
  9982  1620  0829               	movf	(_link_tx^(0+128)+9),w
  9983  1621  160A  158A  21B5  160A  118A  	fcall	_spi
  9984                           
  9985                           ;main.c: 316: PORTBbits.RB2 = 1;
  9986  1626  1283               	bcf	3,5	;RP0=0, select bank0
  9987  1627  1303               	bcf	3,6	;RP1=0, select bank0
  9988  1628  1506               	bsf	6,2	;volatile
  9989                           
  9990                           ;main.c: 317: _delay((unsigned long)((10)*(8000000/4000000.0)));
  9991  1629  3006               	movlw	6
  9992  162A  00F6               	movwf	??_config_eth
  9993  162B                     u515_27:	
  9994  162B  0BF6               	decfsz	??_config_eth,f
  9995  162C  2E2B               	goto	u515_27
  9996  162D  0000               	nop
  9997                           
  9998                           ;main.c: 318: PORTBbits.RB2 = 0;
  9999  162E  1283               	bcf	3,5	;RP0=0, select bank0
 10000  162F  1303               	bcf	3,6	;RP1=0, select bank0
 10001  1630  1106               	bcf	6,2	;volatile
 10002                           
 10003                           ;main.c: 319: spi(0x02 | 0x40,1);
 10004  1631  01F0               	clrf	spi@rw
 10005  1632  0AF0               	incf	spi@rw,f
 10006  1633  3042               	movlw	66
 10007  1634  160A  158A  21B5  160A  118A  	fcall	_spi
 10008                           
 10009                           ;main.c: 320: spi(link_tx.MAC_s[2],1);
 10010  1639  01F0               	clrf	spi@rw
 10011  163A  0AF0               	incf	spi@rw,f
 10012  163B  1683               	bsf	3,5	;RP0=1, select bank1
 10013  163C  1303               	bcf	3,6	;RP1=0, select bank1
 10014  163D  0828               	movf	(_link_tx^(0+128)+8),w
 10015  163E  160A  158A  21B5  160A  118A  	fcall	_spi
 10016                           
 10017                           ;main.c: 321: PORTBbits.RB2 = 1;
 10018  1643  1283               	bcf	3,5	;RP0=0, select bank0
 10019  1644  1303               	bcf	3,6	;RP1=0, select bank0
 10020  1645  1506               	bsf	6,2	;volatile
 10021                           
 10022                           ;main.c: 322: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10023  1646  3006               	movlw	6
 10024  1647  00F6               	movwf	??_config_eth
 10025  1648                     u516_27:	
 10026  1648  0BF6               	decfsz	??_config_eth,f
 10027  1649  2E48               	goto	u516_27
 10028  164A  0000               	nop
 10029                           
 10030                           ;main.c: 323: PORTBbits.RB2 = 0;
 10031  164B  1283               	bcf	3,5	;RP0=0, select bank0
 10032  164C  1303               	bcf	3,6	;RP1=0, select bank0
 10033  164D  1106               	bcf	6,2	;volatile
 10034                           
 10035                           ;main.c: 324: spi(0x05 | 0x40,1);
 10036  164E  01F0               	clrf	spi@rw
 10037  164F  0AF0               	incf	spi@rw,f
 10038  1650  3045               	movlw	69
 10039  1651  160A  158A  21B5  160A  118A  	fcall	_spi
 10040                           
 10041                           ;main.c: 325: spi(link_tx.MAC_s[1],1);
 10042  1656  01F0               	clrf	spi@rw
 10043  1657  0AF0               	incf	spi@rw,f
 10044  1658  1683               	bsf	3,5	;RP0=1, select bank1
 10045  1659  1303               	bcf	3,6	;RP1=0, select bank1
 10046  165A  0827               	movf	(_link_tx^(0+128)+7),w
 10047  165B  160A  158A  21B5  160A  118A  	fcall	_spi
 10048                           
 10049                           ;main.c: 326: PORTBbits.RB2 = 1;
 10050  1660  1283               	bcf	3,5	;RP0=0, select bank0
 10051  1661  1303               	bcf	3,6	;RP1=0, select bank0
 10052  1662  1506               	bsf	6,2	;volatile
 10053                           
 10054                           ;main.c: 327: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10055  1663  3006               	movlw	6
 10056  1664  00F6               	movwf	??_config_eth
 10057  1665                     u517_27:	
 10058  1665  0BF6               	decfsz	??_config_eth,f
 10059  1666  2E65               	goto	u517_27
 10060  1667  0000               	nop
 10061                           
 10062                           ;main.c: 328: PORTBbits.RB2 = 0;
 10063  1668  1283               	bcf	3,5	;RP0=0, select bank0
 10064  1669  1303               	bcf	3,6	;RP1=0, select bank0
 10065  166A  1106               	bcf	6,2	;volatile
 10066                           
 10067                           ;main.c: 329: spi(0x04 | 0x40,1);
 10068  166B  01F0               	clrf	spi@rw
 10069  166C  0AF0               	incf	spi@rw,f
 10070  166D  3044               	movlw	68
 10071  166E  160A  158A  21B5  160A  118A  	fcall	_spi
 10072                           
 10073                           ;main.c: 330: spi(link_tx.MAC_s[0],1);
 10074  1673  01F0               	clrf	spi@rw
 10075  1674  0AF0               	incf	spi@rw,f
 10076  1675  1683               	bsf	3,5	;RP0=1, select bank1
 10077  1676  1303               	bcf	3,6	;RP1=0, select bank1
 10078  1677  0826               	movf	(_link_tx^(0+128)+6),w
 10079  1678  160A  158A  21B5  160A  118A  	fcall	_spi
 10080                           
 10081                           ;main.c: 331: PORTBbits.RB2 = 1;
 10082  167D  1283               	bcf	3,5	;RP0=0, select bank0
 10083  167E  1303               	bcf	3,6	;RP1=0, select bank0
 10084  167F  1506               	bsf	6,2	;volatile
 10085                           
 10086                           ;main.c: 333: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10087  1680  3006               	movlw	6
 10088  1681  00F6               	movwf	??_config_eth
 10089  1682                     u518_27:	
 10090  1682  0BF6               	decfsz	??_config_eth,f
 10091  1683  2E82               	goto	u518_27
 10092  1684  0000               	nop
 10093                           
 10094                           ;main.c: 334: PORTBbits.RB2 = 0;
 10095  1685  1283               	bcf	3,5	;RP0=0, select bank0
 10096  1686  1303               	bcf	3,6	;RP1=0, select bank0
 10097  1687  1106               	bcf	6,2	;volatile
 10098                           
 10099                           ;main.c: 335: spi(0x1F | 0xA0,1);
 10100  1688  01F0               	clrf	spi@rw
 10101  1689  0AF0               	incf	spi@rw,f
 10102  168A  30BF               	movlw	191
 10103  168B  160A  158A  21B5  160A  118A  	fcall	_spi
 10104                           
 10105                           ;main.c: 336: spi(0x01,1);
 10106  1690  01F0               	clrf	spi@rw
 10107  1691  0AF0               	incf	spi@rw,f
 10108  1692  3001               	movlw	1
 10109  1693  160A  158A  21B5  160A  118A  	fcall	_spi
 10110                           
 10111                           ;main.c: 337: PORTBbits.RB2 = 1;
 10112  1698  1283               	bcf	3,5	;RP0=0, select bank0
 10113  1699  1303               	bcf	3,6	;RP1=0, select bank0
 10114  169A  1506               	bsf	6,2	;volatile
 10115                           
 10116                           ;main.c: 339: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10117  169B  3006               	movlw	6
 10118  169C  00F6               	movwf	??_config_eth
 10119  169D                     u519_27:	
 10120  169D  0BF6               	decfsz	??_config_eth,f
 10121  169E  2E9D               	goto	u519_27
 10122  169F  0000               	nop
 10123                           
 10124                           ;main.c: 340: PORTBbits.RB2 = 0;
 10125  16A0  1283               	bcf	3,5	;RP0=0, select bank0
 10126  16A1  1303               	bcf	3,6	;RP1=0, select bank0
 10127  16A2  1106               	bcf	6,2	;volatile
 10128                           
 10129                           ;main.c: 341: spi(0x00 | 0x80,1);
 10130  16A3  01F0               	clrf	spi@rw
 10131  16A4  0AF0               	incf	spi@rw,f
 10132  16A5  3080               	movlw	128
 10133  16A6  160A  158A  21B5  160A  118A  	fcall	_spi
 10134                           
 10135                           ;main.c: 342: spi(0b00001101,1);
 10136  16AB  01F0               	clrf	spi@rw
 10137  16AC  0AF0               	incf	spi@rw,f
 10138  16AD  300D               	movlw	13
 10139  16AE  160A  158A  21B5  160A  118A  	fcall	_spi
 10140                           
 10141                           ;main.c: 343: PORTBbits.RB2 = 1;
 10142  16B3  1283               	bcf	3,5	;RP0=0, select bank0
 10143  16B4  1303               	bcf	3,6	;RP1=0, select bank0
 10144  16B5  1506               	bsf	6,2	;volatile
 10145                           
 10146                           ;main.c: 344: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10147  16B6  3006               	movlw	6
 10148  16B7  00F6               	movwf	??_config_eth
 10149  16B8                     u520_27:	
 10150  16B8  0BF6               	decfsz	??_config_eth,f
 10151  16B9  2EB8               	goto	u520_27
 10152  16BA  0000               	nop
 10153                           
 10154                           ;main.c: 345: PORTBbits.RB2 = 0;
 10155  16BB  1283               	bcf	3,5	;RP0=0, select bank0
 10156  16BC  1303               	bcf	3,6	;RP1=0, select bank0
 10157  16BD  1106               	bcf	6,2	;volatile
 10158                           
 10159                           ;main.c: 346: spi(0x02 | 0x40,1);
 10160  16BE  01F0               	clrf	spi@rw
 10161  16BF  0AF0               	incf	spi@rw,f
 10162  16C0  3042               	movlw	66
 10163  16C1  160A  158A  21B5  160A  118A  	fcall	_spi
 10164                           
 10165                           ;main.c: 347: spi(0b10110001,1);
 10166  16C6  01F0               	clrf	spi@rw
 10167  16C7  0AF0               	incf	spi@rw,f
 10168  16C8  30B1               	movlw	177
 10169  16C9  160A  158A  21B5  160A  118A  	fcall	_spi
 10170                           
 10171                           ;main.c: 348: PORTBbits.RB2 = 1;
 10172  16CE  1283               	bcf	3,5	;RP0=0, select bank0
 10173  16CF  1303               	bcf	3,6	;RP1=0, select bank0
 10174  16D0  1506               	bsf	6,2	;volatile
 10175                           
 10176                           ;main.c: 349: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10177  16D1  3006               	movlw	6
 10178  16D2  00F6               	movwf	??_config_eth
 10179  16D3                     u521_27:	
 10180  16D3  0BF6               	decfsz	??_config_eth,f
 10181  16D4  2ED3               	goto	u521_27
 10182  16D5  0000               	nop
 10183                           
 10184                           ;main.c: 350: PORTBbits.RB2 = 0;
 10185  16D6  1283               	bcf	3,5	;RP0=0, select bank0
 10186  16D7  1303               	bcf	3,6	;RP1=0, select bank0
 10187  16D8  1106               	bcf	6,2	;volatile
 10188                           
 10189                           ;main.c: 351: spi(0x03 | 0x40,1);
 10190  16D9  01F0               	clrf	spi@rw
 10191  16DA  0AF0               	incf	spi@rw,f
 10192  16DB  3043               	movlw	67
 10193  16DC  160A  158A  21B5  160A  118A  	fcall	_spi
 10194                           
 10195                           ;main.c: 352: spi(0b01000000,1);
 10196  16E1  01F0               	clrf	spi@rw
 10197  16E2  0AF0               	incf	spi@rw,f
 10198  16E3  3040               	movlw	64
 10199  16E4  160A  158A  21B5  160A  118A  	fcall	_spi
 10200                           
 10201                           ;main.c: 353: PORTBbits.RB2 = 1;
 10202  16E9  1283               	bcf	3,5	;RP0=0, select bank0
 10203  16EA  1303               	bcf	3,6	;RP1=0, select bank0
 10204  16EB  1506               	bsf	6,2	;volatile
 10205                           
 10206                           ;main.c: 354: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10207  16EC  3006               	movlw	6
 10208  16ED  00F6               	movwf	??_config_eth
 10209  16EE                     u522_27:	
 10210  16EE  0BF6               	decfsz	??_config_eth,f
 10211  16EF  2EEE               	goto	u522_27
 10212  16F0  0000               	nop
 10213                           
 10214                           ;main.c: 355: PORTBbits.RB2 = 0;
 10215  16F1  1283               	bcf	3,5	;RP0=0, select bank0
 10216  16F2  1303               	bcf	3,6	;RP1=0, select bank0
 10217  16F3  1106               	bcf	6,2	;volatile
 10218                           
 10219                           ;main.c: 356: spi(0x0A | 0x40,1);
 10220  16F4  01F0               	clrf	spi@rw
 10221  16F5  0AF0               	incf	spi@rw,f
 10222  16F6  304A               	movlw	74
 10223  16F7  160A  158A  21B5  160A  118A  	fcall	_spi
 10224                           
 10225                           ;main.c: 357: spi(0xDC,1);
 10226  16FC  01F0               	clrf	spi@rw
 10227  16FD  0AF0               	incf	spi@rw,f
 10228  16FE  30DC               	movlw	220
 10229  16FF  160A  158A  21B5  160A  118A  	fcall	_spi
 10230                           
 10231                           ;main.c: 358: PORTBbits.RB2 = 1;
 10232  1704  1283               	bcf	3,5	;RP0=0, select bank0
 10233  1705  1303               	bcf	3,6	;RP1=0, select bank0
 10234  1706  1506               	bsf	6,2	;volatile
 10235                           
 10236                           ;main.c: 359: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10237  1707  3006               	movlw	6
 10238  1708  00F6               	movwf	??_config_eth
 10239  1709                     u523_27:	
 10240  1709  0BF6               	decfsz	??_config_eth,f
 10241  170A  2F09               	goto	u523_27
 10242  170B  0000               	nop
 10243                           
 10244                           ;main.c: 360: PORTBbits.RB2 = 0;
 10245  170C  1283               	bcf	3,5	;RP0=0, select bank0
 10246  170D  1303               	bcf	3,6	;RP1=0, select bank0
 10247  170E  1106               	bcf	6,2	;volatile
 10248                           
 10249                           ;main.c: 361: spi(0x0B | 0x40,1);
 10250  170F  01F0               	clrf	spi@rw
 10251  1710  0AF0               	incf	spi@rw,f
 10252  1711  304B               	movlw	75
 10253  1712  160A  158A  21B5  160A  118A  	fcall	_spi
 10254                           
 10255                           ;main.c: 362: spi(0x05,1);
 10256  1717  01F0               	clrf	spi@rw
 10257  1718  0AF0               	incf	spi@rw,f
 10258  1719  3005               	movlw	5
 10259  171A  160A  158A  21B5  160A  118A  	fcall	_spi
 10260                           
 10261                           ;main.c: 363: PORTBbits.RB2 = 1;
 10262  171F  1283               	bcf	3,5	;RP0=0, select bank0
 10263  1720  1303               	bcf	3,6	;RP1=0, select bank0
 10264  1721  1506               	bsf	6,2	;volatile
 10265                           
 10266                           ;main.c: 364: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10267  1722  3006               	movlw	6
 10268  1723  00F6               	movwf	??_config_eth
 10269  1724                     u524_27:	
 10270  1724  0BF6               	decfsz	??_config_eth,f
 10271  1725  2F24               	goto	u524_27
 10272  1726  0000               	nop
 10273                           
 10274                           ;main.c: 365: PORTBbits.RB2 = 0;
 10275  1727  1283               	bcf	3,5	;RP0=0, select bank0
 10276  1728  1303               	bcf	3,6	;RP1=0, select bank0
 10277  1729  1106               	bcf	6,2	;volatile
 10278                           
 10279                           ;main.c: 366: spi(0x06 | 0x40,1);
 10280  172A  01F0               	clrf	spi@rw
 10281  172B  0AF0               	incf	spi@rw,f
 10282  172C  3046               	movlw	70
 10283  172D  160A  158A  21B5  160A  118A  	fcall	_spi
 10284                           
 10285                           ;main.c: 367: spi(0x12,1);
 10286  1732  01F0               	clrf	spi@rw
 10287  1733  0AF0               	incf	spi@rw,f
 10288  1734  3012               	movlw	18
 10289  1735  160A  158A  21B5  160A  118A  	fcall	_spi
 10290                           
 10291                           ;main.c: 368: PORTBbits.RB2 = 1;
 10292  173A  1283               	bcf	3,5	;RP0=0, select bank0
 10293  173B  1303               	bcf	3,6	;RP1=0, select bank0
 10294  173C  1506               	bsf	6,2	;volatile
 10295                           
 10296                           ;main.c: 369: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10297  173D  3006               	movlw	6
 10298  173E  00F6               	movwf	??_config_eth
 10299  173F                     u525_27:	
 10300  173F  0BF6               	decfsz	??_config_eth,f
 10301  1740  2F3F               	goto	u525_27
 10302  1741  0000               	nop
 10303                           
 10304                           ;main.c: 370: PORTBbits.RB2 = 0;
 10305  1742  1283               	bcf	3,5	;RP0=0, select bank0
 10306  1743  1303               	bcf	3,6	;RP1=0, select bank0
 10307  1744  1106               	bcf	6,2	;volatile
 10308                           
 10309                           ;main.c: 371: spi(0x07 | 0x40,1);
 10310  1745  01F0               	clrf	spi@rw
 10311  1746  0AF0               	incf	spi@rw,f
 10312  1747  3047               	movlw	71
 10313  1748  160A  158A  21B5  160A  118A  	fcall	_spi
 10314                           
 10315                           ;main.c: 372: spi(0x0C,1);
 10316  174D  01F0               	clrf	spi@rw
 10317  174E  0AF0               	incf	spi@rw,f
 10318  174F  300C               	movlw	12
 10319  1750  160A  158A  21B5  160A  118A  	fcall	_spi
 10320                           
 10321                           ;main.c: 373: PORTBbits.RB2 = 1;
 10322  1755  1283               	bcf	3,5	;RP0=0, select bank0
 10323  1756  1303               	bcf	3,6	;RP1=0, select bank0
 10324  1757  1506               	bsf	6,2	;volatile
 10325                           
 10326                           ;main.c: 374: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10327  1758  3006               	movlw	6
 10328  1759  00F6               	movwf	??_config_eth
 10329  175A                     u526_27:	
 10330  175A  0BF6               	decfsz	??_config_eth,f
 10331  175B  2F5A               	goto	u526_27
 10332  175C  0000               	nop
 10333                           
 10334                           ;main.c: 375: PORTBbits.RB2 = 0;
 10335  175D  1283               	bcf	3,5	;RP0=0, select bank0
 10336  175E  1303               	bcf	3,6	;RP1=0, select bank0
 10337  175F  1106               	bcf	6,2	;volatile
 10338                           
 10339                           ;main.c: 376: spi(0x14 | 0x40,1);
 10340  1760  01F0               	clrf	spi@rw
 10341  1761  0AF0               	incf	spi@rw,f
 10342  1762  3054               	movlw	84
 10343  1763  160A  158A  21B5  160A  118A  	fcall	_spi
 10344                           
 10345                           ;main.c: 377: spi(0x00,1);
 10346  1768  01F0               	clrf	spi@rw
 10347  1769  0AF0               	incf	spi@rw,f
 10348  176A  3000               	movlw	0
 10349  176B  160A  158A  21B5  160A  118A  	fcall	_spi
 10350                           
 10351                           ;main.c: 378: PORTBbits.RB2 = 1;
 10352  1770  1283               	bcf	3,5	;RP0=0, select bank0
 10353  1771  1303               	bcf	3,6	;RP1=0, select bank0
 10354  1772  1506               	bsf	6,2	;volatile
 10355                           
 10356                           ;main.c: 379: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10357  1773  3006               	movlw	6
 10358  1774  00F6               	movwf	??_config_eth
 10359  1775                     u527_27:	
 10360  1775  0BF6               	decfsz	??_config_eth,f
 10361  1776  2F75               	goto	u527_27
 10362  1777  0000               	nop
 10363                           
 10364                           ;main.c: 380: PORTBbits.RB2 = 0;
 10365  1778  1283               	bcf	3,5	;RP0=0, select bank0
 10366  1779  1303               	bcf	3,6	;RP1=0, select bank0
 10367  177A  1106               	bcf	6,2	;volatile
 10368                           
 10369                           ;main.c: 381: spi(0x16 | 0x40,1);
 10370  177B  01F0               	clrf	spi@rw
 10371  177C  0AF0               	incf	spi@rw,f
 10372  177D  3056               	movlw	86
 10373  177E  160A  158A  21B5  160A  118A  	fcall	_spi
 10374                           
 10375                           ;main.c: 382: spi(0x00,1);
 10376  1783  01F0               	clrf	spi@rw
 10377  1784  0AF0               	incf	spi@rw,f
 10378  1785  3000               	movlw	0
 10379  1786  160A  158A  21B5  160A  118A  	fcall	_spi
 10380                           
 10381                           ;main.c: 383: PORTBbits.RB2 = 1;
 10382  178B  1283               	bcf	3,5	;RP0=0, select bank0
 10383  178C  1303               	bcf	3,6	;RP1=0, select bank0
 10384  178D  1506               	bsf	6,2	;volatile
 10385                           
 10386                           ;main.c: 384: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10387  178E  3006               	movlw	6
 10388  178F  00F6               	movwf	??_config_eth
 10389  1790                     u528_27:	
 10390  1790  0BF6               	decfsz	??_config_eth,f
 10391  1791  2F90               	goto	u528_27
 10392  1792  0000               	nop
 10393                           
 10394                           ;main.c: 385: PORTBbits.RB2 = 0;
 10395  1793  1283               	bcf	3,5	;RP0=0, select bank0
 10396  1794  1303               	bcf	3,6	;RP1=0, select bank0
 10397  1795  1106               	bcf	6,2	;volatile
 10398                           
 10399                           ;main.c: 386: spi(0x17 | 0x40,1);
 10400  1796  01F0               	clrf	spi@rw
 10401  1797  0AF0               	incf	spi@rw,f
 10402  1798  3057               	movlw	87
 10403  1799  160A  158A  21B5  160A  118A  	fcall	_spi
 10404                           
 10405                           ;main.c: 387: spi(0x01,1);
 10406  179E  01F0               	clrf	spi@rw
 10407  179F  0AF0               	incf	spi@rw,f
 10408  17A0  3001               	movlw	1
 10409  17A1  160A  158A  21B5  160A  118A  	fcall	_spi
 10410                           
 10411                           ;main.c: 388: PORTBbits.RB2 = 1;
 10412  17A6  1283               	bcf	3,5	;RP0=0, select bank0
 10413  17A7  1303               	bcf	3,6	;RP1=0, select bank0
 10414  17A8  1506               	bsf	6,2	;volatile
 10415                           
 10416                           ;main.c: 390: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10417  17A9  3006               	movlw	6
 10418  17AA  00F6               	movwf	??_config_eth
 10419  17AB                     u529_27:	
 10420  17AB  0BF6               	decfsz	??_config_eth,f
 10421  17AC  2FAB               	goto	u529_27
 10422  17AD  0000               	nop
 10423                           
 10424                           ;main.c: 391: PORTBbits.RB2 = 0;
 10425  17AE  1283               	bcf	3,5	;RP0=0, select bank0
 10426  17AF  1303               	bcf	3,6	;RP1=0, select bank0
 10427  17B0  1106               	bcf	6,2	;volatile
 10428                           
 10429                           ;main.c: 392: spi(0x1F | 0xA0,1);
 10430  17B1  01F0               	clrf	spi@rw
 10431  17B2  0AF0               	incf	spi@rw,f
 10432  17B3  30BF               	movlw	191
 10433  17B4  160A  158A  21B5  160A  118A  	fcall	_spi
 10434                           
 10435                           ;main.c: 393: spi(0x02,1);
 10436  17B9  01F0               	clrf	spi@rw
 10437  17BA  0AF0               	incf	spi@rw,f
 10438  17BB  3002               	movlw	2
 10439  17BC  160A  158A  21B5  160A  118A  	fcall	_spi
 10440                           
 10441                           ;main.c: 394: PORTBbits.RB2 = 1;
 10442  17C1  1283               	bcf	3,5	;RP0=0, select bank0
 10443  17C2  1303               	bcf	3,6	;RP1=0, select bank0
 10444  17C3  1506               	bsf	6,2	;volatile
 10445                           
 10446                           ;main.c: 395: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10447  17C4  3006               	movlw	6
 10448  17C5  00F6               	movwf	??_config_eth
 10449  17C6                     u530_27:	
 10450  17C6  0BF6               	decfsz	??_config_eth,f
 10451  17C7  2FC6               	goto	u530_27
 10452  17C8  0000               	nop
 10453                           
 10454                           ;main.c: 396: PORTBbits.RB2 = 0;
 10455  17C9  1283               	bcf	3,5	;RP0=0, select bank0
 10456  17CA  1303               	bcf	3,6	;RP1=0, select bank0
 10457  17CB  1106               	bcf	6,2	;volatile
 10458                           
 10459                           ;main.c: 397: spi(0x1F | 0x80,1);
 10460  17CC  01F0               	clrf	spi@rw
 10461  17CD  0AF0               	incf	spi@rw,f
 10462  17CE  309F               	movlw	159
 10463  17CF  160A  158A  21B5  160A  118A  	fcall	_spi
 10464                           
 10465                           ;main.c: 398: spi(0x01,1);
 10466  17D4  01F0               	clrf	spi@rw
 10467  17D5  0AF0               	incf	spi@rw,f
 10468  17D6  3001               	movlw	1
 10469  17D7  160A  158A  21B5  160A  118A  	fcall	_spi
 10470                           
 10471                           ;main.c: 399: PORTBbits.RB2 = 1;
 10472  17DC  1283               	bcf	3,5	;RP0=0, select bank0
 10473  17DD  1303               	bcf	3,6	;RP1=0, select bank0
 10474  17DE  1506               	bsf	6,2	;volatile
 10475                           
 10476                           ;main.c: 403: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10477  17DF  3006               	movlw	6
 10478  17E0  00F6               	movwf	??_config_eth
 10479  17E1                     u531_27:	
 10480  17E1  0BF6               	decfsz	??_config_eth,f
 10481  17E2  2FE1               	goto	u531_27
 10482  17E3  0000               	nop
 10483                           
 10484                           ;main.c: 404: PORTBbits.RB2 = 0;
 10485  17E4  1283               	bcf	3,5	;RP0=0, select bank0
 10486  17E5  1303               	bcf	3,6	;RP1=0, select bank0
 10487  17E6  1106               	bcf	6,2	;volatile
 10488                           
 10489                           ;main.c: 405: spi(0x1F | 0x80,1);
 10490  17E7  01F0               	clrf	spi@rw
 10491  17E8  0AF0               	incf	spi@rw,f
 10492  17E9  309F               	movlw	159
 10493  17EA  160A  158A  21B5  160A  118A  	fcall	_spi
 10494                           
 10495                           ;main.c: 406: spi(0b00000100,1);
 10496  17EF  01F0               	clrf	spi@rw
 10497  17F0  0AF0               	incf	spi@rw,f
 10498  17F1  3004               	movlw	4
 10499  17F2  160A  158A  21B5  160A  118A  	fcall	_spi
 10500                           
 10501                           ;main.c: 407: PORTBbits.RB2 = 1;
 10502  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 10503  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 10504  17F9  1506               	bsf	6,2	;volatile
 10505                           
 10506                           ;main.c: 408: _delay((unsigned long)((100)*(8000000/4000000.0)));
 10507  17FA  3042               	movlw	66
 10508  17FB  00F6               	movwf	??_config_eth
 10509  17FC                     u532_27:	
 10510  17FC  0BF6               	decfsz	??_config_eth,f
 10511  17FD  2FFC               	goto	u532_27
 10512  17FE  0000               	nop
 10513  17FF  0008               	return
 10514  1800                     __end_of_config_eth:	
 10515                           
 10516                           	psect	text24
 10517  089B                     __ptext24:	
 10518 ;; *************** function _arp_msg *****************
 10519 ;; Defined at:
 10520 ;;		line 772 in file "main.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  direction       1    wreg     unsigned char 
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;  direction       1    0[BANK0 ] unsigned char 
 10525 ;;  i               1    2[BANK0 ] unsigned char 
 10526 ;;  i               1    1[BANK0 ] unsigned char 
 10527 ;;  i               1    8[BANK0 ] unsigned char 
 10528 ;;  i               1    7[BANK0 ] unsigned char 
 10529 ;;  i               1    6[BANK0 ] unsigned char 
 10530 ;;  i               1    5[BANK0 ] unsigned char 
 10531 ;;  i               1    4[BANK0 ] unsigned char 
 10532 ;;  i               1    3[BANK0 ] unsigned char 
 10533 ;;  endptr          2    0        unsigned int 
 10534 ;;  aux             1    0        unsigned char 
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10544 ;;      Params:         0       0       0       0       0
 10545 ;;      Locals:         0       9       0       0       0
 10546 ;;      Temps:          1       0       0       0       0
 10547 ;;      Totals:         1       9       0       0       0
 10548 ;;Total ram usage:       10 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:    1
 10551 ;; This function calls:
 10552 ;;		_spi
 10553 ;; This function is called by:
 10554 ;;		_isr
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           
 10559                           ;psect for function _arp_msg
 10560  089B                     _arp_msg:	
 10561                           
 10562                           ;incstack = 0
 10563                           ; Regs used in _arp_msg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10564                           ;arp_msg@direction stored from wreg
 10565  089B  1283               	bcf	3,5	;RP0=0, select bank0
 10566  089C  1303               	bcf	3,6	;RP1=0, select bank0
 10567  089D  00A0               	movwf	arp_msg@direction
 10568                           
 10569                           ;main.c: 773: unsigned int endptr;
 10570                           ;main.c: 774: char aux;
 10571                           ;main.c: 776: ppcontrol = 0b00000111;
 10572  089E  3007               	movlw	7
 10573  089F  00F6               	movwf	??_arp_msg
 10574  08A0  0876               	movf	??_arp_msg,w
 10575  08A1  00E8               	movwf	_ppcontrol
 10576                           
 10577                           ;main.c: 777: link_tx.eth_type[0] = 0x08;
 10578  08A2  3008               	movlw	8
 10579  08A3  00F6               	movwf	??_arp_msg
 10580  08A4  0876               	movf	??_arp_msg,w
 10581  08A5  1683               	bsf	3,5	;RP0=1, select bank1
 10582  08A6  1303               	bcf	3,6	;RP1=0, select bank1
 10583  08A7  00AC               	movwf	(_link_tx^(0+128)+12)
 10584                           
 10585                           ;main.c: 778: link_tx.eth_type[1] = 0x06;
 10586  08A8  3006               	movlw	6
 10587  08A9  00F6               	movwf	??_arp_msg
 10588  08AA  0876               	movf	??_arp_msg,w
 10589  08AB  00AD               	movwf	(_link_tx^(0+128)+13)
 10590                           
 10591                           ;main.c: 779: PORTBbits.RB2 = 0;
 10592  08AC  1283               	bcf	3,5	;RP0=0, select bank0
 10593  08AD  1303               	bcf	3,6	;RP1=0, select bank0
 10594  08AE  1106               	bcf	6,2	;volatile
 10595                           
 10596                           ;main.c: 780: spi(0x1F | 0xA0,1);
 10597  08AF  01F0               	clrf	spi@rw
 10598  08B0  0AF0               	incf	spi@rw,f
 10599  08B1  30BF               	movlw	191
 10600  08B2  160A  158A  21B5  120A  158A  	fcall	_spi
 10601                           
 10602                           ;main.c: 781: spi(0x03,1);
 10603  08B7  01F0               	clrf	spi@rw
 10604  08B8  0AF0               	incf	spi@rw,f
 10605  08B9  3003               	movlw	3
 10606  08BA  160A  158A  21B5  120A  158A  	fcall	_spi
 10607                           
 10608                           ;main.c: 782: PORTBbits.RB2 = 1;
 10609  08BF  1283               	bcf	3,5	;RP0=0, select bank0
 10610  08C0  1303               	bcf	3,6	;RP1=0, select bank0
 10611  08C1  1506               	bsf	6,2	;volatile
 10612                           
 10613                           ;main.c: 783: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10614  08C2  3006               	movlw	6
 10615  08C3  00F6               	movwf	??_arp_msg
 10616  08C4                     u533_27:	
 10617  08C4  0BF6               	decfsz	??_arp_msg,f
 10618  08C5  28C4               	goto	u533_27
 10619  08C6  0000               	nop
 10620                           
 10621                           ;main.c: 784: PORTBbits.RB2 = 0;
 10622  08C7  1283               	bcf	3,5	;RP0=0, select bank0
 10623  08C8  1303               	bcf	3,6	;RP1=0, select bank0
 10624  08C9  1106               	bcf	6,2	;volatile
 10625                           
 10626                           ;main.c: 785: spi(0x02 | 0x40,1);
 10627  08CA  01F0               	clrf	spi@rw
 10628  08CB  0AF0               	incf	spi@rw,f
 10629  08CC  3042               	movlw	66
 10630  08CD  160A  158A  21B5  120A  158A  	fcall	_spi
 10631                           
 10632                           ;main.c: 786: spi(0x00,1);
 10633  08D2  01F0               	clrf	spi@rw
 10634  08D3  0AF0               	incf	spi@rw,f
 10635  08D4  3000               	movlw	0
 10636  08D5  160A  158A  21B5  120A  158A  	fcall	_spi
 10637                           
 10638                           ;main.c: 787: PORTBbits.RB2 = 1;
 10639  08DA  1283               	bcf	3,5	;RP0=0, select bank0
 10640  08DB  1303               	bcf	3,6	;RP1=0, select bank0
 10641  08DC  1506               	bsf	6,2	;volatile
 10642                           
 10643                           ;main.c: 788: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10644  08DD  3006               	movlw	6
 10645  08DE  00F6               	movwf	??_arp_msg
 10646  08DF                     u534_27:	
 10647  08DF  0BF6               	decfsz	??_arp_msg,f
 10648  08E0  28DF               	goto	u534_27
 10649  08E1  0000               	nop
 10650                           
 10651                           ;main.c: 789: PORTBbits.RB2 = 0;
 10652  08E2  1283               	bcf	3,5	;RP0=0, select bank0
 10653  08E3  1303               	bcf	3,6	;RP1=0, select bank0
 10654  08E4  1106               	bcf	6,2	;volatile
 10655                           
 10656                           ;main.c: 790: spi(0x03 | 0x40,1);
 10657  08E5  01F0               	clrf	spi@rw
 10658  08E6  0AF0               	incf	spi@rw,f
 10659  08E7  3043               	movlw	67
 10660  08E8  160A  158A  21B5  120A  158A  	fcall	_spi
 10661                           
 10662                           ;main.c: 791: spi(0x1F,1);
 10663  08ED  01F0               	clrf	spi@rw
 10664  08EE  0AF0               	incf	spi@rw,f
 10665  08EF  301F               	movlw	31
 10666  08F0  160A  158A  21B5  120A  158A  	fcall	_spi
 10667                           
 10668                           ;main.c: 792: PORTBbits.RB2 = 1;
 10669  08F5  1283               	bcf	3,5	;RP0=0, select bank0
 10670  08F6  1303               	bcf	3,6	;RP1=0, select bank0
 10671  08F7  1506               	bsf	6,2	;volatile
 10672                           
 10673                           ;main.c: 793: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10674  08F8  3006               	movlw	6
 10675  08F9  00F6               	movwf	??_arp_msg
 10676  08FA                     u535_27:	
 10677  08FA  0BF6               	decfsz	??_arp_msg,f
 10678  08FB  28FA               	goto	u535_27
 10679  08FC  0000               	nop
 10680                           
 10681                           ;main.c: 794: PORTBbits.RB2 = 0;
 10682  08FD  1283               	bcf	3,5	;RP0=0, select bank0
 10683  08FE  1303               	bcf	3,6	;RP1=0, select bank0
 10684  08FF  1106               	bcf	6,2	;volatile
 10685                           
 10686                           ;main.c: 795: spi(0x7A,1);
 10687  0900  01F0               	clrf	spi@rw
 10688  0901  0AF0               	incf	spi@rw,f
 10689  0902  307A               	movlw	122
 10690  0903  160A  158A  21B5  120A  158A  	fcall	_spi
 10691                           
 10692                           ;main.c: 796: spi(ppcontrol,1);
 10693  0908  01F0               	clrf	spi@rw
 10694  0909  0AF0               	incf	spi@rw,f
 10695  090A  1283               	bcf	3,5	;RP0=0, select bank0
 10696  090B  1303               	bcf	3,6	;RP1=0, select bank0
 10697  090C  0868               	movf	_ppcontrol,w
 10698  090D  160A  158A  21B5  120A  158A  	fcall	_spi
 10699                           
 10700                           ;main.c: 797: if (direction == 1) {
 10701  0912  1283               	bcf	3,5	;RP0=0, select bank0
 10702  0913  1303               	bcf	3,6	;RP1=0, select bank0
 10703  0914  0320               	decf	arp_msg@direction,w
 10704  0915  1D03               	btfss	3,2
 10705  0916  292B               	goto	i1l4216
 10706                           
 10707                           ;main.c: 798: for (char i=0;i<6;i++) {
 10708  0917  01A1               	clrf	arp_msg@i
 10709  0918                     L19:	
 10710  0918  3006               	movlw	6
 10711  0919  0221               	subwf	arp_msg@i,w
 10712  091A  1803               	btfsc	3,0
 10713  091B  2946               	goto	i1l4228
 10714                           
 10715                           ;main.c: 799: spi(0xFF,1);
 10716  091C  01F0               	clrf	spi@rw
 10717  091D  0AF0               	incf	spi@rw,f
 10718  091E  30FF               	movlw	255
 10719  091F  160A  158A  21B5  120A  158A  	fcall	_spi
 10720  0924  3001               	movlw	1
 10721  0925  00F6               	movwf	??_arp_msg
 10722  0926  0876               	movf	??_arp_msg,w
 10723  0927  1283               	bcf	3,5	;RP0=0, select bank0
 10724  0928  1303               	bcf	3,6	;RP1=0, select bank0
 10725  0929  07A1               	addwf	arp_msg@i,f
 10726  092A  2918               	goto	L19
 10727  092B                     i1l4216:	
 10728                           ;main.c: 800: }
 10729                           ;main.c: 801: } else {
 10730                           
 10731                           
 10732                           ;main.c: 802: for (char i=0;i<6;i++) {
 10733  092B  01A2               	clrf	arp_msg@i_779
 10734  092C  3006               	movlw	6
 10735  092D  0222               	subwf	arp_msg@i_779,w
 10736  092E  1803               	btfsc	3,0
 10737  092F  2946               	goto	i1l4228
 10738  0930                     i1l4222:	
 10739                           
 10740                           ;main.c: 803: spi(link_tx.MAC_d[i],1);
 10741  0930  01F0               	clrf	spi@rw
 10742  0931  0AF0               	incf	spi@rw,f
 10743  0932  0822               	movf	arp_msg@i_779,w
 10744  0933  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
 10745  0934  0084               	movwf	4
 10746  0935  1383               	bcf	3,7	;select IRP bank1
 10747  0936  0800               	movf	0,w
 10748  0937  160A  158A  21B5  120A  158A  	fcall	_spi
 10749  093C  3001               	movlw	1
 10750  093D  00F6               	movwf	??_arp_msg
 10751  093E  0876               	movf	??_arp_msg,w
 10752  093F  1283               	bcf	3,5	;RP0=0, select bank0
 10753  0940  1303               	bcf	3,6	;RP1=0, select bank0
 10754  0941  07A2               	addwf	arp_msg@i_779,f
 10755  0942  3006               	movlw	6
 10756  0943  0222               	subwf	arp_msg@i_779,w
 10757  0944  1C03               	skipc
 10758  0945  2930               	goto	i1l4222
 10759  0946                     i1l4228:	
 10760                           
 10761                           ;main.c: 804: }
 10762                           ;main.c: 805: }
 10763                           ;main.c: 806: for (char i=0;i<6;i++) {
 10764  0946  01A3               	clrf	arp_msg@i_780
 10765  0947  3006               	movlw	6
 10766  0948  0223               	subwf	arp_msg@i_780,w
 10767  0949  1803               	btfsc	3,0
 10768  094A  2961               	goto	i1l4240
 10769  094B                     i1l4234:	
 10770                           
 10771                           ;main.c: 807: spi(link_tx.MAC_s[i],1);
 10772  094B  01F0               	clrf	spi@rw
 10773  094C  0AF0               	incf	spi@rw,f
 10774  094D  0823               	movf	arp_msg@i_780,w
 10775  094E  3EA6               	addlw	(low ((_link_tx| 0+6)))& (0+255)
 10776  094F  0084               	movwf	4
 10777  0950  1383               	bcf	3,7	;select IRP bank1
 10778  0951  0800               	movf	0,w
 10779  0952  160A  158A  21B5  120A  158A  	fcall	_spi
 10780  0957  3001               	movlw	1
 10781  0958  00F6               	movwf	??_arp_msg
 10782  0959  0876               	movf	??_arp_msg,w
 10783  095A  1283               	bcf	3,5	;RP0=0, select bank0
 10784  095B  1303               	bcf	3,6	;RP1=0, select bank0
 10785  095C  07A3               	addwf	arp_msg@i_780,f
 10786  095D  3006               	movlw	6
 10787  095E  0223               	subwf	arp_msg@i_780,w
 10788  095F  1C03               	skipc
 10789  0960  294B               	goto	i1l4234
 10790  0961                     i1l4240:	
 10791                           
 10792                           ;main.c: 808: }
 10793                           ;main.c: 809: for (char i=0;i<2;i++) {
 10794  0961  01A4               	clrf	arp_msg@i_781
 10795  0962  3002               	movlw	2
 10796  0963  0224               	subwf	arp_msg@i_781,w
 10797  0964  1803               	btfsc	3,0
 10798  0965  297C               	goto	i1l4252
 10799  0966                     i1l4246:	
 10800                           
 10801                           ;main.c: 810: spi(link_tx.eth_type[i],1);
 10802  0966  01F0               	clrf	spi@rw
 10803  0967  0AF0               	incf	spi@rw,f
 10804  0968  0824               	movf	arp_msg@i_781,w
 10805  0969  3EAC               	addlw	(low ((_link_tx| 0+12)))& (0+255)
 10806  096A  0084               	movwf	4
 10807  096B  1383               	bcf	3,7	;select IRP bank1
 10808  096C  0800               	movf	0,w
 10809  096D  160A  158A  21B5  120A  158A  	fcall	_spi
 10810  0972  3001               	movlw	1
 10811  0973  00F6               	movwf	??_arp_msg
 10812  0974  0876               	movf	??_arp_msg,w
 10813  0975  1283               	bcf	3,5	;RP0=0, select bank0
 10814  0976  1303               	bcf	3,6	;RP1=0, select bank0
 10815  0977  07A4               	addwf	arp_msg@i_781,f
 10816  0978  3002               	movlw	2
 10817  0979  0224               	subwf	arp_msg@i_781,w
 10818  097A  1C03               	skipc
 10819  097B  2966               	goto	i1l4246
 10820  097C                     i1l4252:	
 10821                           
 10822                           ;main.c: 811: }
 10823                           ;main.c: 812: spi(0x00,1);
 10824  097C  01F0               	clrf	spi@rw
 10825  097D  0AF0               	incf	spi@rw,f
 10826  097E  3000               	movlw	0
 10827  097F  160A  158A  21B5  120A  158A  	fcall	_spi
 10828                           
 10829                           ;main.c: 813: spi(0x01,1);
 10830  0984  01F0               	clrf	spi@rw
 10831  0985  0AF0               	incf	spi@rw,f
 10832  0986  3001               	movlw	1
 10833  0987  160A  158A  21B5  120A  158A  	fcall	_spi
 10834                           
 10835                           ;main.c: 814: spi(0x08,1);
 10836  098C  01F0               	clrf	spi@rw
 10837  098D  0AF0               	incf	spi@rw,f
 10838  098E  3008               	movlw	8
 10839  098F  160A  158A  21B5  120A  158A  	fcall	_spi
 10840                           
 10841                           ;main.c: 815: spi(0x00,1);
 10842  0994  01F0               	clrf	spi@rw
 10843  0995  0AF0               	incf	spi@rw,f
 10844  0996  3000               	movlw	0
 10845  0997  160A  158A  21B5  120A  158A  	fcall	_spi
 10846                           
 10847                           ;main.c: 816: spi(0x06,1);
 10848  099C  01F0               	clrf	spi@rw
 10849  099D  0AF0               	incf	spi@rw,f
 10850  099E  3006               	movlw	6
 10851  099F  160A  158A  21B5  120A  158A  	fcall	_spi
 10852                           
 10853                           ;main.c: 817: spi(0x04,1);
 10854  09A4  01F0               	clrf	spi@rw
 10855  09A5  0AF0               	incf	spi@rw,f
 10856  09A6  3004               	movlw	4
 10857  09A7  160A  158A  21B5  120A  158A  	fcall	_spi
 10858                           
 10859                           ;main.c: 818: spi(0x00,1);
 10860  09AC  01F0               	clrf	spi@rw
 10861  09AD  0AF0               	incf	spi@rw,f
 10862  09AE  3000               	movlw	0
 10863  09AF  160A  158A  21B5  120A  158A  	fcall	_spi
 10864                           
 10865                           ;main.c: 819: spi(direction,1);
 10866  09B4  01F0               	clrf	spi@rw
 10867  09B5  0AF0               	incf	spi@rw,f
 10868  09B6  1283               	bcf	3,5	;RP0=0, select bank0
 10869  09B7  1303               	bcf	3,6	;RP1=0, select bank0
 10870  09B8  0820               	movf	arp_msg@direction,w
 10871  09B9  160A  158A  21B5  120A  158A  	fcall	_spi
 10872                           
 10873                           ;main.c: 820: for (char i=0;i<6;i++) {
 10874  09BE  1283               	bcf	3,5	;RP0=0, select bank0
 10875  09BF  1303               	bcf	3,6	;RP1=0, select bank0
 10876  09C0  01A5               	clrf	arp_msg@i_782
 10877  09C1  3006               	movlw	6
 10878  09C2  0225               	subwf	arp_msg@i_782,w
 10879  09C3  1803               	btfsc	3,0
 10880  09C4  29DB               	goto	i1l4266
 10881  09C5                     i1l4260:	
 10882                           
 10883                           ;main.c: 821: spi(link_tx.MAC_s[i],1);
 10884  09C5  01F0               	clrf	spi@rw
 10885  09C6  0AF0               	incf	spi@rw,f
 10886  09C7  0825               	movf	arp_msg@i_782,w
 10887  09C8  3EA6               	addlw	(low ((_link_tx| 0+6)))& (0+255)
 10888  09C9  0084               	movwf	4
 10889  09CA  1383               	bcf	3,7	;select IRP bank1
 10890  09CB  0800               	movf	0,w
 10891  09CC  160A  158A  21B5  120A  158A  	fcall	_spi
 10892  09D1  3001               	movlw	1
 10893  09D2  00F6               	movwf	??_arp_msg
 10894  09D3  0876               	movf	??_arp_msg,w
 10895  09D4  1283               	bcf	3,5	;RP0=0, select bank0
 10896  09D5  1303               	bcf	3,6	;RP1=0, select bank0
 10897  09D6  07A5               	addwf	arp_msg@i_782,f
 10898  09D7  3006               	movlw	6
 10899  09D8  0225               	subwf	arp_msg@i_782,w
 10900  09D9  1C03               	skipc
 10901  09DA  29C5               	goto	i1l4260
 10902  09DB                     i1l4266:	
 10903                           
 10904                           ;main.c: 822: }
 10905                           ;main.c: 823: for (char i=0;i<4;i++) {
 10906  09DB  01A6               	clrf	arp_msg@i_783
 10907  09DC  3004               	movlw	4
 10908  09DD  0226               	subwf	arp_msg@i_783,w
 10909  09DE  1803               	btfsc	3,0
 10910  09DF  29F6               	goto	i1l4278
 10911  09E0                     i1l4272:	
 10912                           
 10913                           ;main.c: 824: spi(ip_tx.IP_s[i],1);
 10914  09E0  01F0               	clrf	spi@rw
 10915  09E1  0AF0               	incf	spi@rw,f
 10916  09E2  0826               	movf	arp_msg@i_783,w
 10917  09E3  3ECF               	addlw	(low ((_ip_tx| 0+12)))& (0+255)
 10918  09E4  0084               	movwf	4
 10919  09E5  1383               	bcf	3,7	;select IRP bank1
 10920  09E6  0800               	movf	0,w
 10921  09E7  160A  158A  21B5  120A  158A  	fcall	_spi
 10922  09EC  3001               	movlw	1
 10923  09ED  00F6               	movwf	??_arp_msg
 10924  09EE  0876               	movf	??_arp_msg,w
 10925  09EF  1283               	bcf	3,5	;RP0=0, select bank0
 10926  09F0  1303               	bcf	3,6	;RP1=0, select bank0
 10927  09F1  07A6               	addwf	arp_msg@i_783,f
 10928  09F2  3004               	movlw	4
 10929  09F3  0226               	subwf	arp_msg@i_783,w
 10930  09F4  1C03               	skipc
 10931  09F5  29E0               	goto	i1l4272
 10932  09F6                     i1l4278:	
 10933                           
 10934                           ;main.c: 825: }
 10935                           ;main.c: 826: for (char i=0;i<6;i++) {
 10936  09F6  01A7               	clrf	arp_msg@i_784
 10937  09F7  3006               	movlw	6
 10938  09F8  0227               	subwf	arp_msg@i_784,w
 10939  09F9  1803               	btfsc	3,0
 10940  09FA  2A11               	goto	i1l4290
 10941  09FB                     i1l4284:	
 10942                           
 10943                           ;main.c: 827: spi(link_tx.MAC_d[i],1);
 10944  09FB  01F0               	clrf	spi@rw
 10945  09FC  0AF0               	incf	spi@rw,f
 10946  09FD  0827               	movf	arp_msg@i_784,w
 10947  09FE  3EA0               	addlw	(low (_link_tx| 0))& (0+255)
 10948  09FF  0084               	movwf	4
 10949  0A00  1383               	bcf	3,7	;select IRP bank1
 10950  0A01  0800               	movf	0,w
 10951  0A02  160A  158A  21B5  120A  158A  	fcall	_spi
 10952  0A07  3001               	movlw	1
 10953  0A08  00F6               	movwf	??_arp_msg
 10954  0A09  0876               	movf	??_arp_msg,w
 10955  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
 10956  0A0B  1303               	bcf	3,6	;RP1=0, select bank0
 10957  0A0C  07A7               	addwf	arp_msg@i_784,f
 10958  0A0D  3006               	movlw	6
 10959  0A0E  0227               	subwf	arp_msg@i_784,w
 10960  0A0F  1C03               	skipc
 10961  0A10  29FB               	goto	i1l4284
 10962  0A11                     i1l4290:	
 10963                           
 10964                           ;main.c: 828: }
 10965                           ;main.c: 829: for (char i=0;i<4;i++) {
 10966  0A11  01A8               	clrf	arp_msg@i_785
 10967  0A12  3004               	movlw	4
 10968  0A13  0228               	subwf	arp_msg@i_785,w
 10969  0A14  1803               	btfsc	3,0
 10970  0A15  2A2C               	goto	i1l294
 10971  0A16                     i1l4296:	
 10972                           
 10973                           ;main.c: 830: spi(ip_tx.IP_d[i],1);
 10974  0A16  01F0               	clrf	spi@rw
 10975  0A17  0AF0               	incf	spi@rw,f
 10976  0A18  0828               	movf	arp_msg@i_785,w
 10977  0A19  3ED3               	addlw	(low ((_ip_tx| 0+16)))& (0+255)
 10978  0A1A  0084               	movwf	4
 10979  0A1B  1383               	bcf	3,7	;select IRP bank1
 10980  0A1C  0800               	movf	0,w
 10981  0A1D  160A  158A  21B5  120A  158A  	fcall	_spi
 10982  0A22  3001               	movlw	1
 10983  0A23  00F6               	movwf	??_arp_msg
 10984  0A24  0876               	movf	??_arp_msg,w
 10985  0A25  1283               	bcf	3,5	;RP0=0, select bank0
 10986  0A26  1303               	bcf	3,6	;RP1=0, select bank0
 10987  0A27  07A8               	addwf	arp_msg@i_785,f
 10988  0A28  3004               	movlw	4
 10989  0A29  0228               	subwf	arp_msg@i_785,w
 10990  0A2A  1C03               	skipc
 10991  0A2B  2A16               	goto	i1l4296
 10992  0A2C                     i1l294:	
 10993                           
 10994                           ;main.c: 831: }
 10995                           ;main.c: 832: PORTBbits.RB2 = 1;
 10996  0A2C  1506               	bsf	6,2	;volatile
 10997                           
 10998                           ;main.c: 833: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10999  0A2D  3006               	movlw	6
 11000  0A2E  00F6               	movwf	??_arp_msg
 11001  0A2F                     u536_27:	
 11002  0A2F  0BF6               	decfsz	??_arp_msg,f
 11003  0A30  2A2F               	goto	u536_27
 11004  0A31  0000               	nop
 11005                           
 11006                           ;main.c: 834: PORTBbits.RB2 = 0;
 11007  0A32  1283               	bcf	3,5	;RP0=0, select bank0
 11008  0A33  1303               	bcf	3,6	;RP1=0, select bank0
 11009  0A34  1106               	bcf	6,2	;volatile
 11010                           
 11011                           ;main.c: 835: spi(0x06 | 0x40,1);
 11012  0A35  01F0               	clrf	spi@rw
 11013  0A36  0AF0               	incf	spi@rw,f
 11014  0A37  3046               	movlw	70
 11015  0A38  160A  158A  21B5  120A  158A  	fcall	_spi
 11016                           
 11017                           ;main.c: 836: spi(0x2A,1);
 11018  0A3D  01F0               	clrf	spi@rw
 11019  0A3E  0AF0               	incf	spi@rw,f
 11020  0A3F  302A               	movlw	42
 11021  0A40  160A  158A  21B5  120A  158A  	fcall	_spi
 11022                           
 11023                           ;main.c: 837: PORTBbits.RB2 = 1;
 11024  0A45  1283               	bcf	3,5	;RP0=0, select bank0
 11025  0A46  1303               	bcf	3,6	;RP1=0, select bank0
 11026  0A47  1506               	bsf	6,2	;volatile
 11027                           
 11028                           ;main.c: 838: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11029  0A48  3006               	movlw	6
 11030  0A49  00F6               	movwf	??_arp_msg
 11031  0A4A                     u537_27:	
 11032  0A4A  0BF6               	decfsz	??_arp_msg,f
 11033  0A4B  2A4A               	goto	u537_27
 11034  0A4C  0000               	nop
 11035                           
 11036                           ;main.c: 839: PORTBbits.RB2 = 0;
 11037  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
 11038  0A4E  1303               	bcf	3,6	;RP1=0, select bank0
 11039  0A4F  1106               	bcf	6,2	;volatile
 11040                           
 11041                           ;main.c: 840: spi(0x07 | 0x40,1);
 11042  0A50  01F0               	clrf	spi@rw
 11043  0A51  0AF0               	incf	spi@rw,f
 11044  0A52  3047               	movlw	71
 11045  0A53  160A  158A  21B5  120A  158A  	fcall	_spi
 11046                           
 11047                           ;main.c: 841: spi(0x1F,1);
 11048  0A58  01F0               	clrf	spi@rw
 11049  0A59  0AF0               	incf	spi@rw,f
 11050  0A5A  301F               	movlw	31
 11051  0A5B  160A  158A  21B5  120A  158A  	fcall	_spi
 11052                           
 11053                           ;main.c: 842: PORTBbits.RB2 = 1;
 11054  0A60  1283               	bcf	3,5	;RP0=0, select bank0
 11055  0A61  1303               	bcf	3,6	;RP1=0, select bank0
 11056  0A62  1506               	bsf	6,2	;volatile
 11057                           
 11058                           ;main.c: 843: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11059  0A63  3006               	movlw	6
 11060  0A64  00F6               	movwf	??_arp_msg
 11061  0A65                     u538_27:	
 11062  0A65  0BF6               	decfsz	??_arp_msg,f
 11063  0A66  2A65               	goto	u538_27
 11064  0A67  0000               	nop
 11065                           
 11066                           ;main.c: 844: PORTBbits.RB2 = 0;
 11067  0A68  1283               	bcf	3,5	;RP0=0, select bank0
 11068  0A69  1303               	bcf	3,6	;RP1=0, select bank0
 11069  0A6A  1106               	bcf	6,2	;volatile
 11070                           
 11071                           ;main.c: 845: spi(0x1C | 0xA0,1);
 11072  0A6B  01F0               	clrf	spi@rw
 11073  0A6C  0AF0               	incf	spi@rw,f
 11074  0A6D  30BC               	movlw	188
 11075  0A6E  160A  158A  21B5  120A  158A  	fcall	_spi
 11076                           
 11077                           ;main.c: 846: spi(0x08,1);
 11078  0A73  01F0               	clrf	spi@rw
 11079  0A74  0AF0               	incf	spi@rw,f
 11080  0A75  3008               	movlw	8
 11081  0A76  160A  158A  21B5  120A  158A  	fcall	_spi
 11082                           
 11083                           ;main.c: 847: PORTBbits.RB2 = 1;
 11084  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
 11085  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
 11086  0A7D  1506               	bsf	6,2	;volatile
 11087                           
 11088                           ;main.c: 848: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11089  0A7E  3006               	movlw	6
 11090  0A7F  00F6               	movwf	??_arp_msg
 11091  0A80                     u539_27:	
 11092  0A80  0BF6               	decfsz	??_arp_msg,f
 11093  0A81  2A80               	goto	u539_27
 11094  0A82  0000               	nop
 11095                           
 11096                           ;main.c: 849: PORTBbits.RB2 = 0;
 11097  0A83  1283               	bcf	3,5	;RP0=0, select bank0
 11098  0A84  1303               	bcf	3,6	;RP1=0, select bank0
 11099  0A85  1106               	bcf	6,2	;volatile
 11100                           
 11101                           ;main.c: 850: spi(0x1F | 0x80,1);
 11102  0A86  01F0               	clrf	spi@rw
 11103  0A87  0AF0               	incf	spi@rw,f
 11104  0A88  309F               	movlw	159
 11105  0A89  160A  158A  21B5  120A  158A  	fcall	_spi
 11106                           
 11107                           ;main.c: 851: spi(0x08,1);
 11108  0A8E  01F0               	clrf	spi@rw
 11109  0A8F  0AF0               	incf	spi@rw,f
 11110  0A90  3008               	movlw	8
 11111  0A91  160A  158A  21B5   	fcall	_spi
 11112                           
 11113                           ;main.c: 852: PORTBbits.RB2 = 1;
 11114  0A94  1283               	bcf	3,5	;RP0=0, select bank0
 11115  0A95  1303               	bcf	3,6	;RP1=0, select bank0
 11116  0A96  1506               	bsf	6,2	;volatile
 11117  0A97  0008               	return
 11118  0A98                     __end_of_arp_msg:	
 11119                           
 11120                           	psect	text25
 11121  19B5                     __ptext25:	
 11122 ;; *************** function _spi *****************
 11123 ;; Defined at:
 11124 ;;		line 175 in file "main.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;  data            1    wreg     unsigned char 
 11127 ;;  rw              1    0[COMMON] unsigned char 
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;  data            1    5[COMMON] unsigned char 
 11130 ;;  dummy           1    4[COMMON] unsigned char 
 11131 ;;  drop            1    3[COMMON] unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      unsigned char 
 11134 ;; Registers used:
 11135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11141 ;;      Params:         1       0       0       0       0
 11142 ;;      Locals:         3       0       0       0       0
 11143 ;;      Temps:          2       0       0       0       0
 11144 ;;      Totals:         6       0       0       0       0
 11145 ;;Total ram usage:        6 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_config_eth
 11151 ;;		_read_buff
 11152 ;;		_start_tx
 11153 ;;		_close_tx
 11154 ;;		_set_MAC
 11155 ;;		_set_IP
 11156 ;;		_arp_msg
 11157 ;;		_echo_ping
 11158 ;;		_rx_int
 11159 ;;		_tx_int
 11160 ;;		_udp_msg
 11161 ;;		_tcp_msg
 11162 ;;		_isr
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           
 11167                           ;psect for function _spi
 11168  19B5                     _spi:	
 11169                           
 11170                           ;incstack = 0
 11171                           ; Regs used in _spi: [wreg-fsr0h+status,2+status,0]
 11172                           ;spi@data stored from wreg
 11173  19B5  00F5               	movwf	spi@data
 11174                           
 11175                           ;main.c: 176: char dummy, drop;
 11176                           ;main.c: 178: switch (rw) {
 11177  19B6  29F5               	goto	i1l3120
 11178  19B7                     i1l140:	
 11179                           ;main.c: 179: case 0:
 11180                           
 11181                           
 11182                           ;main.c: 180: if (SSPCONbits.WCOL) {
 11183  19B7  1283               	bcf	3,5	;RP0=0, select bank0
 11184  19B8  1303               	bcf	3,6	;RP1=0, select bank0
 11185  19B9  1F94               	btfss	20,7	;volatile
 11186  19BA  29C9               	goto	i1l141
 11187                           
 11188                           ;main.c: 181: SSPCONbits.WCOL = 0;
 11189  19BB  1394               	bcf	20,7	;volatile
 11190                           
 11191                           ;main.c: 182: SSPCONbits.SSPEN = 0;
 11192  19BC  1294               	bcf	20,5	;volatile
 11193                           
 11194                           ;main.c: 183: _delay((unsigned long)((1)*(8000000/4000.0)));
 11195  19BD  3003               	movlw	3
 11196  19BE  00F2               	movwf	??_spi+1
 11197  19BF  3097               	movlw	151
 11198  19C0  00F1               	movwf	??_spi
 11199  19C1                     u540_27:	
 11200  19C1  0BF1               	decfsz	??_spi,f
 11201  19C2  29C1               	goto	u540_27
 11202  19C3  0BF2               	decfsz	??_spi+1,f
 11203  19C4  29C1               	goto	u540_27
 11204  19C5  29C6               	nop2
 11205                           
 11206                           ;main.c: 184: SSPCONbits.SSPEN = 1;
 11207  19C6  1283               	bcf	3,5	;RP0=0, select bank0
 11208  19C7  1303               	bcf	3,6	;RP1=0, select bank0
 11209  19C8  1694               	bsf	20,5	;volatile
 11210  19C9                     i1l141:	
 11211                           
 11212                           ;main.c: 185: }
 11213                           ;main.c: 186: SSPBUF = data;
 11214  19C9  0875               	movf	spi@data,w
 11215  19CA  0093               	movwf	19	;volatile
 11216  19CB                     i1l142:	
 11217                           ;main.c: 187: while (!SSPSTATbits.BF);
 11218                           
 11219  19CB  1683               	bsf	3,5	;RP0=1, select bank1
 11220  19CC  1303               	bcf	3,6	;RP1=0, select bank1
 11221  19CD  1C14               	btfss	20,0	;volatile
 11222  19CE  29CB               	goto	i1l142
 11223                           
 11224                           ;main.c: 188: dummy = SSPBUF;
 11225  19CF  1283               	bcf	3,5	;RP0=0, select bank0
 11226  19D0  1303               	bcf	3,6	;RP1=0, select bank0
 11227  19D1  0813               	movf	19,w	;volatile
 11228  19D2  00F1               	movwf	??_spi
 11229  19D3  0871               	movf	??_spi,w
 11230  19D4  00F4               	movwf	spi@dummy
 11231                           
 11232                           ;main.c: 189: break;
 11233  19D5  29FD               	goto	i1l3122
 11234  19D6                     i1l146:	
 11235                           ;main.c: 190: case 1:
 11236                           
 11237                           
 11238                           ;main.c: 191: if (SSPCONbits.WCOL) {
 11239  19D6  1283               	bcf	3,5	;RP0=0, select bank0
 11240  19D7  1303               	bcf	3,6	;RP1=0, select bank0
 11241  19D8  1F94               	btfss	20,7	;volatile
 11242  19D9  29E8               	goto	i1l147
 11243                           
 11244                           ;main.c: 192: SSPCONbits.WCOL = 0;
 11245  19DA  1394               	bcf	20,7	;volatile
 11246                           
 11247                           ;main.c: 193: SSPCONbits.SSPEN = 0;
 11248  19DB  1294               	bcf	20,5	;volatile
 11249                           
 11250                           ;main.c: 194: _delay((unsigned long)((1)*(8000000/4000.0)));
 11251  19DC  3003               	movlw	3
 11252  19DD  00F2               	movwf	??_spi+1
 11253  19DE  3097               	movlw	151
 11254  19DF  00F1               	movwf	??_spi
 11255  19E0                     u541_27:	
 11256  19E0  0BF1               	decfsz	??_spi,f
 11257  19E1  29E0               	goto	u541_27
 11258  19E2  0BF2               	decfsz	??_spi+1,f
 11259  19E3  29E0               	goto	u541_27
 11260  19E4  29E5               	nop2
 11261                           
 11262                           ;main.c: 195: SSPCONbits.SSPEN = 1;
 11263  19E5  1283               	bcf	3,5	;RP0=0, select bank0
 11264  19E6  1303               	bcf	3,6	;RP1=0, select bank0
 11265  19E7  1694               	bsf	20,5	;volatile
 11266  19E8                     i1l147:	
 11267                           
 11268                           ;main.c: 196: }
 11269                           ;main.c: 197: SSPBUF = data;
 11270  19E8  0875               	movf	spi@data,w
 11271  19E9  0093               	movwf	19	;volatile
 11272  19EA                     i1l148:	
 11273                           ;main.c: 198: while (!SSPSTATbits.BF);
 11274                           
 11275  19EA  1683               	bsf	3,5	;RP0=1, select bank1
 11276  19EB  1303               	bcf	3,6	;RP1=0, select bank1
 11277  19EC  1C14               	btfss	20,0	;volatile
 11278  19ED  29EA               	goto	i1l148
 11279                           
 11280                           ;main.c: 199: drop = SSPBUF;
 11281  19EE  1283               	bcf	3,5	;RP0=0, select bank0
 11282  19EF  1303               	bcf	3,6	;RP1=0, select bank0
 11283  19F0  0813               	movf	19,w	;volatile
 11284  19F1  00F1               	movwf	??_spi
 11285  19F2  0871               	movf	??_spi,w
 11286  19F3  00F3               	movwf	spi@drop
 11287                           
 11288                           ;main.c: 201: }
 11289                           
 11290                           ;main.c: 200: break;
 11291  19F4  29FD               	goto	i1l3122
 11292  19F5                     i1l3120:	
 11293  19F5  0870               	movf	spi@rw,w
 11294                           
 11295                           ; Switch size 1, requested type "space"
 11296                           ; Number of cases is 2, Range of values is 0 to 1
 11297                           ; switch strategies available:
 11298                           ; Name         Instructions Cycles
 11299                           ; simple_byte            7     4 (average)
 11300                           ; direct_byte           14     8 (fixed)
 11301                           ; jumptable            260     6 (fixed)
 11302                           ;	Chosen strategy is simple_byte
 11303  19F6  3A00               	xorlw	0	; case 0
 11304  19F7  1903               	skipnz
 11305  19F8  29B7               	goto	i1l140
 11306  19F9  3A01               	xorlw	1	; case 1
 11307  19FA  1903               	skipnz
 11308  19FB  29D6               	goto	i1l146
 11309  19FC  29FD               	goto	i1l3122
 11310  19FD                     i1l3122:	
 11311                           
 11312                           ;main.c: 202: return dummy;
 11313  19FD  0874               	movf	spi@dummy,w
 11314  19FE  0008               	return
 11315  19FF                     __end_of_spi:	
 11316                           
 11317                           	psect	text26
 11318  189E                     __ptext26:	
 11319 ;; *************** function ___lbdiv *****************
 11320 ;; Defined at:
 11321 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  dividend        1    wreg     unsigned char 
 11324 ;;  divisor         1    0[COMMON] unsigned char 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  dividend        1    2[COMMON] unsigned char 
 11327 ;;  quotient        1    4[COMMON] unsigned char 
 11328 ;;  counter         1    3[COMMON] unsigned char 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1    wreg      unsigned char 
 11331 ;; Registers used:
 11332 ;;		wreg, status,2, status,0
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11338 ;;      Params:         1       0       0       0       0
 11339 ;;      Locals:         3       0       0       0       0
 11340 ;;      Temps:          1       0       0       0       0
 11341 ;;      Totals:         5       0       0       0       0
 11342 ;;Total ram usage:        5 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; This function calls:
 11345 ;;		Nothing
 11346 ;; This function is called by:
 11347 ;;		_isr
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           
 11352                           ;psect for function ___lbdiv
 11353  189E                     ___lbdiv:	
 11354                           
 11355                           ;incstack = 0
 11356                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 11357                           ;___lbdiv@dividend stored from wreg
 11358  189E  00F2               	movwf	___lbdiv@dividend
 11359  189F  01F4               	clrf	___lbdiv@quotient
 11360  18A0  0870               	movf	___lbdiv@divisor,w
 11361  18A1  1903               	btfsc	3,2
 11362  18A2  28BD               	goto	i1l4736
 11363  18A3  01F3               	clrf	___lbdiv@counter
 11364  18A4  0AF3               	incf	___lbdiv@counter,f
 11365  18A5                     i1l4724:	
 11366  18A5  1BF0               	btfsc	___lbdiv@divisor,7
 11367  18A6  28AE               	goto	i1l4726
 11368  18A7  1003               	clrc
 11369  18A8  0DF0               	rlf	___lbdiv@divisor,f
 11370  18A9  3001               	movlw	1
 11371  18AA  00F1               	movwf	??___lbdiv
 11372  18AB  0871               	movf	??___lbdiv,w
 11373  18AC  07F3               	addwf	___lbdiv@counter,f
 11374  18AD  28A5               	goto	i1l4724
 11375  18AE                     i1l4726:	
 11376  18AE  1003               	clrc
 11377  18AF  0DF4               	rlf	___lbdiv@quotient,f
 11378  18B0  0870               	movf	___lbdiv@divisor,w
 11379  18B1  0272               	subwf	___lbdiv@dividend,w
 11380  18B2  1C03               	skipc
 11381  18B3  28B8               	goto	L20
 11382  18B4  0870               	movf	___lbdiv@divisor,w
 11383  18B5  02F2               	subwf	___lbdiv@dividend,f
 11384  18B6  1474               	bsf	___lbdiv@quotient,0
 11385  18B7  1003               	clrc
 11386  18B8                     L20:	
 11387  18B8  0CF0               	rrf	___lbdiv@divisor,f
 11388  18B9  3001               	movlw	1
 11389  18BA  02F3               	subwf	___lbdiv@counter,f
 11390  18BB  1D03               	btfss	3,2
 11391  18BC  28AE               	goto	i1l4726
 11392  18BD                     i1l4736:	
 11393  18BD  0874               	movf	___lbdiv@quotient,w
 11394  18BE  0008               	return
 11395  18BF                     __end_of___lbdiv:	
 11396                           
 11397                           	psect	text27
 11398  185E                     __ptext27:	
 11399 ;; *************** function ___bmul *****************
 11400 ;; Defined at:
 11401 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;  multiplier      1    wreg     unsigned char 
 11404 ;;  multiplicand    1    0[COMMON] unsigned char 
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;  multiplier      1    3[COMMON] unsigned char 
 11407 ;;  product         1    2[COMMON] unsigned char 
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      unsigned char 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2, status,0
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11417 ;;      Params:         1       0       0       0       0
 11418 ;;      Locals:         2       0       0       0       0
 11419 ;;      Temps:          1       0       0       0       0
 11420 ;;      Totals:         4       0       0       0       0
 11421 ;;Total ram usage:        4 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_isr
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           
 11431                           ;psect for function ___bmul
 11432  185E                     ___bmul:	
 11433                           
 11434                           ;incstack = 0
 11435                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11436                           ;___bmul@multiplier stored from wreg
 11437  185E  00F3               	movwf	___bmul@multiplier
 11438  185F  01F2               	clrf	___bmul@product
 11439  1860                     i1l4658:	
 11440  1860  1C73               	btfss	___bmul@multiplier,0
 11441  1861  2866               	goto	i1l4662
 11442  1862  0870               	movf	___bmul@multiplicand,w
 11443  1863  00F1               	movwf	??___bmul
 11444  1864  0871               	movf	??___bmul,w
 11445  1865  07F2               	addwf	___bmul@product,f
 11446  1866                     i1l4662:	
 11447  1866  1003               	clrc
 11448  1867  0DF0               	rlf	___bmul@multiplicand,f
 11449  1868  1003               	clrc
 11450  1869  0CF3               	rrf	___bmul@multiplier,f
 11451  186A  0873               	movf	___bmul@multiplier,w
 11452  186B  1D03               	btfss	3,2
 11453  186C  2860               	goto	i1l4658
 11454  186D  0872               	movf	___bmul@product,w
 11455  186E  0008               	return
 11456  186F                     __end_of___bmul:	
 11457                           
 11458                           	psect	text28
 11459  1A4E                     __ptext28:	
 11460 ;; *************** function ___awdiv *****************
 11461 ;; Defined at:
 11462 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  divisor         2    0[COMMON] int 
 11465 ;;  dividend        2    2[COMMON] int 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  quotient        2    7[COMMON] int 
 11468 ;;  sign            1    6[COMMON] unsigned char 
 11469 ;;  counter         1    5[COMMON] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  2    0[COMMON] int 
 11472 ;; Registers used:
 11473 ;;		wreg, status,2, status,0
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11479 ;;      Params:         4       0       0       0       0
 11480 ;;      Locals:         4       0       0       0       0
 11481 ;;      Temps:          1       0       0       0       0
 11482 ;;      Totals:         9       0       0       0       0
 11483 ;;Total ram usage:        9 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; This function calls:
 11486 ;;		Nothing
 11487 ;; This function is called by:
 11488 ;;		_isr
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           
 11493                           ;psect for function ___awdiv
 11494  1A4E                     ___awdiv:	
 11495                           
 11496                           ;incstack = 0
 11497                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11498  1A4E  01F6               	clrf	___awdiv@sign
 11499  1A4F  1FF1               	btfss	___awdiv@divisor+1,7
 11500  1A50  2A58               	goto	i1l4678
 11501  1A51  09F0               	comf	___awdiv@divisor,f
 11502  1A52  09F1               	comf	___awdiv@divisor+1,f
 11503  1A53  0AF0               	incf	___awdiv@divisor,f
 11504  1A54  1903               	skipnz
 11505  1A55  0AF1               	incf	___awdiv@divisor+1,f
 11506  1A56  01F6               	clrf	___awdiv@sign
 11507  1A57  0AF6               	incf	___awdiv@sign,f
 11508  1A58                     i1l4678:	
 11509  1A58  1FF3               	btfss	___awdiv@dividend+1,7
 11510  1A59  2A63               	goto	i1l4684
 11511  1A5A  09F2               	comf	___awdiv@dividend,f
 11512  1A5B  09F3               	comf	___awdiv@dividend+1,f
 11513  1A5C  0AF2               	incf	___awdiv@dividend,f
 11514  1A5D  1903               	skipnz
 11515  1A5E  0AF3               	incf	___awdiv@dividend+1,f
 11516  1A5F  3001               	movlw	1
 11517  1A60  00F4               	movwf	??___awdiv
 11518  1A61  0874               	movf	??___awdiv,w
 11519  1A62  06F6               	xorwf	___awdiv@sign,f
 11520  1A63                     i1l4684:	
 11521  1A63  01F7               	clrf	___awdiv@quotient
 11522  1A64  01F8               	clrf	___awdiv@quotient+1
 11523  1A65  0870               	movf	___awdiv@divisor,w
 11524  1A66  0471               	iorwf	___awdiv@divisor+1,w
 11525  1A67  1903               	btfsc	3,2
 11526  1A68  2A9A               	goto	i1l4706
 11527  1A69  01F5               	clrf	___awdiv@counter
 11528  1A6A  0AF5               	incf	___awdiv@counter,f
 11529  1A6B                     i1l4694:	
 11530  1A6B  1BF1               	btfsc	___awdiv@divisor+1,7
 11531  1A6C  2A79               	goto	i1l4696
 11532  1A6D  3001               	movlw	1
 11533  1A6E                     u393_25:	
 11534  1A6E  1003               	clrc
 11535  1A6F  0DF0               	rlf	___awdiv@divisor,f
 11536  1A70  0DF1               	rlf	___awdiv@divisor+1,f
 11537  1A71  3EFF               	addlw	-1
 11538  1A72  1D03               	skipz
 11539  1A73  2A6E               	goto	u393_25
 11540  1A74  3001               	movlw	1
 11541  1A75  00F4               	movwf	??___awdiv
 11542  1A76  0874               	movf	??___awdiv,w
 11543  1A77  07F5               	addwf	___awdiv@counter,f
 11544  1A78  2A6B               	goto	i1l4694
 11545  1A79                     i1l4696:	
 11546  1A79  3001               	movlw	1
 11547  1A7A                     u395_25:	
 11548  1A7A  1003               	clrc
 11549  1A7B  0DF7               	rlf	___awdiv@quotient,f
 11550  1A7C  0DF8               	rlf	___awdiv@quotient+1,f
 11551  1A7D  3EFF               	addlw	-1
 11552  1A7E  1D03               	skipz
 11553  1A7F  2A7A               	goto	u395_25
 11554  1A80  0871               	movf	___awdiv@divisor+1,w
 11555  1A81  0273               	subwf	___awdiv@dividend+1,w
 11556  1A82  1D03               	skipz
 11557  1A83  2A86               	goto	u396_25
 11558  1A84  0870               	movf	___awdiv@divisor,w
 11559  1A85  0272               	subwf	___awdiv@dividend,w
 11560  1A86                     u396_25:	
 11561  1A86  1C03               	skipc
 11562  1A87  2A8F               	goto	i1l4702
 11563  1A88  0870               	movf	___awdiv@divisor,w
 11564  1A89  02F2               	subwf	___awdiv@dividend,f
 11565  1A8A  0871               	movf	___awdiv@divisor+1,w
 11566  1A8B  1C03               	skipc
 11567  1A8C  03F3               	decf	___awdiv@dividend+1,f
 11568  1A8D  02F3               	subwf	___awdiv@dividend+1,f
 11569  1A8E  1477               	bsf	___awdiv@quotient,0
 11570  1A8F                     i1l4702:	
 11571  1A8F  3001               	movlw	1
 11572  1A90                     u397_25:	
 11573  1A90  1003               	clrc
 11574  1A91  0CF1               	rrf	___awdiv@divisor+1,f
 11575  1A92  0CF0               	rrf	___awdiv@divisor,f
 11576  1A93  3EFF               	addlw	-1
 11577  1A94  1D03               	skipz
 11578  1A95  2A90               	goto	u397_25
 11579  1A96  3001               	movlw	1
 11580  1A97  02F5               	subwf	___awdiv@counter,f
 11581  1A98  1D03               	btfss	3,2
 11582  1A99  2A79               	goto	i1l4696
 11583  1A9A                     i1l4706:	
 11584  1A9A  0876               	movf	___awdiv@sign,w
 11585  1A9B  1903               	btfsc	3,2
 11586  1A9C  2AA2               	goto	i1l4710
 11587  1A9D  09F7               	comf	___awdiv@quotient,f
 11588  1A9E  09F8               	comf	___awdiv@quotient+1,f
 11589  1A9F  0AF7               	incf	___awdiv@quotient,f
 11590  1AA0  1903               	skipnz
 11591  1AA1  0AF8               	incf	___awdiv@quotient+1,f
 11592  1AA2                     i1l4710:	
 11593  1AA2  0878               	movf	___awdiv@quotient+1,w
 11594  1AA3  00F1               	movwf	?___awdiv+1
 11595  1AA4  0877               	movf	___awdiv@quotient,w
 11596  1AA5  00F0               	movwf	?___awdiv
 11597  1AA6  0008               	return
 11598  1AA7                     __end_of___awdiv:	
 11599  007E                     btemp	set	126	;btemp
 11600  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    8
    Data        0
    BSS         209
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      80
    BANK1            80      8      70
    BANK3            96      0      80
    BANK2            96      0      50

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    join@lower	PTR unsigned char  size(1) Largest target is 21
		 -> NULL(NULL[0]), ping_echo.seq_num(BANK1[2]), ping_echo.id(BANK1[2]), tcp_tx.ack_num(BANK1[4]), 
		 -> tcp_tx.PORT_d(BANK1[2]), ip_tx.IP_d(BANK1[4]), tcp_tx.offset_n_flags(BANK1[2]), tcp_tx.seq_num(BANK1[4]), 
		 -> tcp_tx.PORT_s(BANK1[2]), tcp_tx(BANK1[21]), ping_echo(BANK1[7]), ip_tx.IP_s(BANK1[4]), 
		 -> ip_tx.id(BANK1[2]), ip_tx.total_length(BANK1[2]), ip_tx(BANK1[20]), 

    join@upper	PTR unsigned char  size(1) Largest target is 21
		 -> tcp_tx.ack_num(BANK1[4]), ip_tx.IP_d(BANK1[4]), tcp_tx.seq_num(BANK1[4]), tcp_tx(BANK1[21]), 
		 -> ping_echo(BANK1[7]), ip_tx.IP_s(BANK1[4]), ip_tx(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tcp_msg
    _udp_msg->_set_MAC
    _tx_int->_spi
    _tcp_msg->_set_MAC
    _TCP_chksum->_join
    _rx_int->_read_buff
    _read_buff->_spi
    _printf->___lwdiv
    _echo_ping->_set_MAC
    _start_tx->_spi
    _set_MAC->_spi
    _set_IP->_spi
    _close_tx->_spi
    _IP_chksum->_join
    _config_eth->_spi
    _arp_msg->_spi

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_echo_ping
    _udp_msg->_IP_chksum
    _tcp_msg->_TCP_chksum
    _rx_int->_read_buff
    _echo_ping->_IP_chksum

Critical Paths under _main in BANK1

    _main->_init_timer2

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     198
                                              6 BANK1      2     2      0
                           _init_spi
                         _init_stack
                        _init_timer2
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     198
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_stack                                           1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 30    30      0  317663
                                             29 BANK0     30    30      0
                            ___awdiv
                             ___bmul
                            ___lbdiv
                            _arp_msg
                         _config_eth
                          _echo_ping
                             _printf
                              _putch
                          _rw_eeprom
                             _rx_int
                                _spi
                            _tcp_msg
                             _tx_int
                            _udp_msg
 ---------------------------------------------------------------------------------
 (3) _udp_msg                                              6     6      0   73743
                                             10 COMMON     1     1      0
                                             14 BANK0      5     5      0
                          _IP_chksum
                           _close_tx
                             _set_IP
                            _set_MAC
                                _spi
                           _start_tx
 ---------------------------------------------------------------------------------
 (3) _tx_int                                               1     1      0   14241
                                              6 COMMON     1     1      0
                                _spi
 ---------------------------------------------------------------------------------
 (3) _tcp_msg                                             16    16      0   76292
                                             10 COMMON     4     4      0
                                             16 BANK0     12    12      0
                          _IP_chksum
                         _TCP_chksum
                           _close_tx
                             _set_IP
                            _set_MAC
                                _spi
                           _start_tx
 ---------------------------------------------------------------------------------
 (4) _TCP_chksum                                          18    16      2    2231
                                              7 COMMON     2     0      2
                                              0 BANK0     16    16      0
                               _join
 ---------------------------------------------------------------------------------
 (3) _rx_int                                               3     3      0   30218
                                             10 COMMON     3     3      0
                          _read_buff
                                _spi
 ---------------------------------------------------------------------------------
 (4) _read_buff                                           32    32      0   15931
                                              6 COMMON     4     4      0
                                              0 BANK0     28    28      0
                                _spi
 ---------------------------------------------------------------------------------
 (3) _rw_eeprom                                            3     1      2     512
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _printf                                              21    19      2     739
                                              8 COMMON     5     3      2
                                              0 BANK0      8     8      0
                            ___lwdiv
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _echo_ping                                           16    16      0   75643
                                             14 BANK0     15    15      0
                          _IP_chksum
                           _close_tx
                               _join
                             _set_IP
                            _set_MAC
                                _spi
                           _start_tx
 ---------------------------------------------------------------------------------
 (4) _start_tx                                             1     1      0   14241
                                              6 COMMON     1     1      0
                                _spi
 ---------------------------------------------------------------------------------
 (4) _set_MAC                                              4     4      0   14445
                                              6 COMMON     4     4      0
                                _spi
 ---------------------------------------------------------------------------------
 (4) _set_IP                                               3     3      0   14377
                                              6 COMMON     3     3      0
                                _spi
 ---------------------------------------------------------------------------------
 (4) _close_tx                                             2     2      0   14263
                                              6 COMMON     2     2      0
                                _spi
 ---------------------------------------------------------------------------------
 (4) _IP_chksum                                           16    14      2    2018
                                              7 COMMON     2     0      2
                                              0 BANK0     14    14      0
                               _join
 ---------------------------------------------------------------------------------
 (5) _join                                                 7     5      2    1851
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (3) _config_eth                                           4     4      0   14265
                                              6 COMMON     4     4      0
                                _spi
 ---------------------------------------------------------------------------------
 (3) _arp_msg                                             13    13      0   14807
                                              6 COMMON     1     1      0
                                              0 BANK0      9     9      0
                                _spi
 ---------------------------------------------------------------------------------
 (5) _spi                                                  6     5      1   14241
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              5     4      1     215
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     251
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_spi
   _init_stack
   _init_timer2
   _uart_init

 _isr (ROOT)
   ___awdiv
   ___bmul
   ___lbdiv
   _arp_msg
     _spi
   _config_eth
     _spi
   _echo_ping
     _IP_chksum
       _join
     _close_tx
       _spi
     _join
     _set_IP
       _spi
     _set_MAC
       _spi
     _spi
     _start_tx
       _spi
   _printf
     ___lwdiv
     _putch
   _putch
   _rw_eeprom
   _rx_int
     _read_buff
       _spi
     _spi
   _spi
   _tcp_msg
     _IP_chksum
       _join
     _TCP_chksum
       _join
     _close_tx
       _spi
     _set_IP
       _spi
     _set_MAC
       _spi
     _spi
     _start_tx
       _spi
   _tx_int
     _spi
   _udp_msg
     _IP_chksum
       _join
     _close_tx
       _spi
     _set_IP
       _spi
     _set_MAC
       _spi
     _spi
     _start_tx
       _spi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     126       3        0.0%
BITBANK0            50      0       2       4        2.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      8      46       7       87.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      50       9       83.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      32      11       52.1%
DATA                 0      0     126      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 12 13:29:14 2018

                       _k 0069                         pc 0002            ___bmul@product 0072  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094              ___awdiv@sign 0076  
                      fsr 0004                       l447 1A4D              arp_msg@i_780 0023  
                     _PR2 0092              arp_msg@i_781 0024              arp_msg@i_782 0025  
            arp_msg@i_783 0026              arp_msg@i_784 0027              __CFG_CPD$OFF 0000  
            arp_msg@i_785 0028              arp_msg@i_779 0022                       _ack 0062  
                     _arp 0362                       _isr 0A98                       _spi 19B5  
                     fsr0 0004                       _out 006B                       indf 0000  
            __CFG_IESO$ON 0000               close_tx@aux 0077              __CFG_LVP$OFF 0000  
                    ?_isr 0070                      ?_spi 0070                      STR_1 081F  
                    STR_2 081F                      STR_3 081F                      STR_4 081F  
                    STR_5 080E                      u3435 1915              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 19FF                      _init 0378  
                    _join 18BF                      _ping 0361                      _next 0379  
                    _rxen 0363                      btemp 007E                      isr@i 0050  
                    isr@j 005A                      start 0012         ___bmul@multiplier 0073  
           __CFG_MCLRE$ON 0000                     ??_isr 003D                     ??_spi 0071  
                   ?_main 0070                     ?_join 0070           __end_of___awdiv 1AA7  
         __end_of___lbdiv 18BF                     _EEADR 010D                     _EEDAT 010C  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           ___awdiv@divisor 0070  
                   _T2CON 0012           __end_of___lwdiv 196D                     i1l140 19B7  
                   i1l141 19C9                     i1l142 19CB                     i1l119 1857  
                   i1l224 03AD                     i1l216 037B                     i1l129 18F4  
                   i1l146 19D6                     i1l306 1E31                     i1l402 0E3A  
                   i1l147 19E8                     i1l219 0384                     i1l148 19EA  
                   i1l229 03BD                     i1l238 0482                     i1l342 0ACD  
                   i1l239 0581                     i1l442 0FF5                     i1l294 0A2C  
                   i1l378 0CB1                     i1l387 0DA3                     i1l379 0CB9  
                   i1l478 1CD0           ___awdiv@counter 0075                     _RCREG 001A  
                   _SPBRG 0099                     _TXREG 0019              ?_init_timer2 00DE  
         __end_of_arp_msg 0A98                     _ip_rx 01BE                     _ip_tx 00C3  
         __end_of_set_MAC 19B5                     _putch 1856        __size_of_IP_chksum 0198  
          __CFG_BOREN$OFF 0000           __end_of_tcp_msg 116D                     pclath 000A  
             ?_TCP_chksum 0077           __end_of_udp_msg 1D81                     spi@rw 0070  
                   status 0003                     wtemp0 007E           ___lbdiv@divisor 0070  
         ___lbdiv@counter 0073           __initialization 0015              __end_of_main 1A4E  
            __end_of_join 18E1                    ??_main 00E4                    ??_join 0072  
                  _ADRESL 009E                    _EECON2 018D          ___awdiv@dividend 0072  
                  ?_putch 0070                    _ANSELH 0189                    i1l3120 19F5  
                  i1l3122 19FD                    i1l3202 137A                    i1l3220 1402  
                  i1l3302 019D                    i1l3214 137D                    i1l3160 0767  
                  i1l3216 13C1                    i1l3162 07BA                    i1l3402 031B  
                  i1l3314 01BA                    i1l3250 00B1                    i1l5002 0DBB  
                  i1l5010 0DD4                    i1l3156 0778                    i1l3500 0469  
                  i1l3324 01D3                    i1l3308 01A2                    i1l3244 00AC  
                  i1l5100 0EE0                    i1l4222 0930                    i1l3430 035E  
                  i1l3422 034B                    i1l3350 0241                    i1l3270 013D  
                  i1l3262 00F4                    i1l3238 0094                    i1l5014 0DE4  
                  i1l4240 0961                    i1l4216 092B                    i1l3424 035D  
                  i1l3408 032C                    i1l3328 01DA                    i1l3504 0485  
                  i1l3256 00C9                    i1l5024 0DFC                    i1l5008 0DCE  
                  i1l4234 094B                    i1l3506 0493                    i1l3450 03A7  
                  i1l3290 0180                    i1l4260 09C5                    i1l4252 097C  
                  i1l4228 0946                    i1l3540 0525                    i1l3460 03BB  
                  i1l3372 0292                    i1l3284 016A                    i1l3276 0153  
                  i1l5108 0EEB                    i1l5044 0E2F                    i1l5028 0E00  
                  i1l4246 0966                    i1l3710 1986                    i1l3534 0520  
                  i1l3446 039E                    i1l3382 02DF                    i1l5142 0F48  
                  i1l5134 0F33                    i1l5126 0F28                    i1l5118 0F17  
                  i1l5038 0E15                    i1l4272 09E0                    i1l3704 1972  
                  i1l4352 1EEB                    i1l3552 0542                    i1l3528 0508  
                  i1l3480 03F9                    i1l3456 03B3                    i1l3296 0185  
                  i1l5064 0E6B                    i1l5048 0E37                    i1l4290 0A11  
                  i1l4266 09DB                    i1l3722 199F                    i1l4362 1F5E  
                  i1l4354 1F3E                    i1l3546 053D                    i1l3474 03E5  
                  i1l3458 03B7                    i1l3466 03C8                    i1l3394 02FC  
                  i1l4522 1D65                    i1l5170 0FB7                    i1l5154 0F71  
                  i1l5146 0F60                    i1l5074 0E7D                    i1l5058 0E58  
                  i1l4284 09FB                    i1l3716 198B                    i1l4364 1F66  
                  i1l4348 1EFC                    i1l3492 040F                    i1l3468 03DE  
                  i1l3388 02E4                    i1l3572 0574                    i1l4460 1E17  
                  i1l4612 1151                    i1l4604 10FE                    i1l4524 1D7C  
                  i1l5180 0FD7                    i1l5076 0E7E                    i1l5068 0E75  
                  i1l4710 1AA2                    i1l4702 1A8F                    i1l4278 09F6  
                  i1l3742 1BF8                    i1l4622 1C46                    i1l5262 0579  
                  i1l3558 055A                    i1l4614 1168                    i1l5166 0FA4  
                  i1l5158 0F84                    i1l5086 0EAA                    i1l4296 0A16  
                  i1l5096 0ECD                    i1l5184 0FE2                    i1l4800 0B1E  
                  i1l4706 1A9A                    i1l3770 1939                    i1l4554 1069  
                  i1l4546 103E                    i1l5186 0FF2                    i1l4724 18A5  
                  i1l3748 1C0C                    i1l3772 1947                    i1l4652 1C94  
                  i1l4644 1C90                    i1l4628 1C5E                    i1l4812 0B37  
                  i1l4820 0B50                    i1l4662 1866                    i1l4726 18AE  
                  i1l3782 1968                    i1l4638 1C6F                    i1l4654 1C29  
                  i1l4806 0B32                    i1l4736 18BD                    i1l4592 10E3  
                  i1l4904 0C58                    i1l4832 0B63                    i1l4658 1860  
                  i1l3778 195D                    i1l4586 10CD                    i1l4922 0C98  
                  i1l4906 0C71                    i1l4850 0B9E                    i1l4818 0B4B  
                  i1l4684 1A63                    i1l3868 18FB                    i1l4916 0C84  
                  i1l4860 0BBB                    i1l4844 0B83                    i1l4772 0AE2  
                  i1l4764 0AD7                    i1l4756 0AC4                    i1l4694 1A6B  
                  i1l4678 1A58                    i1l3886 143C                    i1l4598 10E8  
                  i1l4838 0B7E                    i1l4790 0B0F                    i1l4696 1A79  
                  i1l4928 0C9D                    i1l4880 0C1C                    i1l4856 0B9F  
                  i1l4784 0AFB                    i1l4792 0B15                    i1l4866 0BDB  
                  i1l4858 0BB4                    i1l4778 0AF6                    i1l4964 0D55  
                  i1l4956 0D2C                    i1l4892 0C3C                    i1l4868 0BDC  
                  i1l4972 0D77                    i1l4990 0DA9                    i1l4958 0D2E  
                  i1l4886 0C37                    i1l4974 0D8D                    i1l4984 0DA4  
                  i1l4978 0D9D                    i1l4898 0C57                    i1l4996 0DB6  
                  _INTCON 000B                    u250_20 07A6                    u250_21 07A7  
                  u250_22 07AC                    u250_23 07AD                    u251_23 0776  
                  u340_25 1954                    u500_27 1490                    u341_25 195E  
                  u501_27 14AB                    u270_20 13EF                    u270_21 13F0  
                  u270_22 13F5                    u270_23 13F6                    u510_27 159E  
                  u502_27 14C6                    u271_23 1411                    u511_27 15B9  
                  u503_27 14E1                    u520_27 16B8                    u512_27 15D4  
                  u504_27 14FC                    u249_25 0781                    u337_25 193C  
                  u521_27 16D3                    u513_27 15F1                    u505_27 1517  
                  u530_27 17C6                    u522_27 16EE                    u514_27 160E  
                  u506_27 1532                    u339_25 1948                    u291_25 02AB  
                  u531_27 17E1                    u523_27 1709                    u515_27 162B  
                  u507_27 154D                    u452_20 0E40                    u452_22 0E41  
                  u540_27 19C1                    u532_27 17FC                    u524_27 1724  
                  u516_27 1648                    u508_27 1568                    u453_20 0E46  
                  u453_22 0E47                    u269_25 13CA                    u541_27 19E0  
                  u533_27 08C4                    u525_27 173F                    u517_27 1665  
                  u509_27 1583                    u534_27 08DF                    u526_27 175A  
                  u518_27 1682                    u367_25 1F05                    u375_25 1051  
                  u535_27 08FA                    u527_27 1775                    u519_27 169D  
                  u471_27 0AB7                    u368_20 1F2A                    u368_21 1F2B  
                  u368_22 1F30                    u368_23 1F31                    u384_25 1C86  
                  u536_27 0A2F                    u528_27 1790                    u480_27 1E19  
                  u472_27 0CB6                    u369_23 1EFA                    u393_25 1A6E  
                  u537_27 0A4A                    u529_27 17AB                    u481_27 1E49  
                  u473_27 0E65                    _OSCCON 008F                    u298_25 0333  
                  u538_27 0A65                    u490_27 1ADE                    u482_27 1E53  
                  u474_27 07DD                    u395_25 1A7A                    u539_27 0A80  
                  u491_27 1AF9                    u483_27 0586                    u475_27 1D9D  
                  u396_25 1A86                    u492_27 1B16                    u484_27 05A1  
                  u476_27 1DB8                    u397_25 1A90                    u493_27 1B31  
                  u485_27 05BE                    u477_27 1DD3                    u494_27 1B4C  
                  u486_27 05DB                    u478_27 1DEE                    u495_27 1B67  
                  u487_27 05F8                    u479_27 1E13                    u496_27 1425  
                  u488_27 0615                    u497_27 1435                    u489_27 1AC3  
                  u498_27 1457                    u499_27 1475                    _SPBRGH 009A  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          __end_of_close_tx 1B7F  
                  ___bmul 185E                 ??___awdiv 0074                 ??___lbdiv 0071  
               ??___lwdiv 0074             rw_eeprom@addr 0072             rw_eeprom@data 0070  
       __end_of_IP_chksum 07C5          __end_of_init_spi 1886                    _set_IP 1B7F  
        ___awdiv@quotient 0077                    _repeat 006D                    _opcode 0190  
                  _tcp_rx 01A9                    _tcp_tx 00AE                    _udp_tx 005B  
                  _printf 1C22       __size_of_TCP_chksum 02B1                    _rx_int 1D81  
               ??_arp_msg 0076                    _tx_int 07C5            tcp_msg@ack_cpy 0031  
                  isr@adc 004E                 ??_set_MAC 0076                    saved_w 007E  
               ??_tcp_msg 007A                 ??_udp_msg 007A          __end_of_start_tx 1B10  
        ___lbdiv@dividend 0072   __end_of__initialization 0038       ___bmul@multiplicand 0070  
          __pcstackCOMMON 0070              __pbitnvBANK0 0378             __end_of_putch 185E  
      __size_of_echo_ping 0195          ___lbdiv@quotient 0074      __size_of_init_timer2 002A  
             set_IP@i_773 0078                   ??_putch 0070                __pbssBANK0 005B  
              __pbssBANK1 00A0                __pbssBANK2 0110                __pbssBANK3 0190  
      __size_of_read_buff 05F1                __pmaintext 19FF                   ?___bmul 0070  
              __pintentry 0004                   ?_set_IP 0070                   ?_printf 0078  
                 ?_rx_int 0070                   ?_tx_int 0070        __size_of_uart_init 0018  
              _config_eth 141E        __size_of_rw_eeprom 0026                 ?_close_tx 0070  
              __stringtab 0800              ??_TCP_chksum 0020         __end_of_echo_ping 2000  
               ?_init_spi 0070               tcp_msg@cant 0036           __size_of___bmul 0011  
                 ___awdiv 1A4E                   ___lbdiv 189E                   ___lwdiv 1931  
               ?_start_tx 0070                _init_stack 0824           __size_of_set_IP 00A3  
                 __ptext1 1886                   __ptext2 1907                   __ptext3 0824  
                 __ptext4 186F                   __ptext5 0A98                   __ptext6 1CD1  
                 __ptext7 07C5                   __ptext8 1004                   __ptext9 116D  
                 _arp_msg 089B           __size_of_printf 00AF           __size_of_rx_int 00EA  
      __end_of_TCP_chksum 141E           __size_of_tx_int 002F         __end_of_hexpowers 080E  
            __size_of_isr 0568              __size_of_spi 004A                   _link_rx 01D2  
                 _link_tx 00A0         __end_of_read_buff 062D                   _set_MAC 196D  
                 _payload 0110                   _tcp_msg 1004                   _udp_msg 1CD1  
                 _timeout 0066                   clrloop0 07F5                ??_close_tx 0076  
    end_of_initialization 0038                   join@aux 0074                   isr@drop 0059  
              ??_init_spi 00DE               udp_msg@cant 0031                   set_IP@i 0077  
       __end_of_uart_init 189E                   spi@data 0075                   spi@drop 0073  
            read_buff@inH 003A              read_buff@inL 003B              read_buff@aux 0021  
         config_eth@ready 0079         __end_of_rw_eeprom 1907                 _RCSTAbits 0018  
                 printf@c 0027                   printf@f 0026          arp_msg@direction 0020  
              ??_start_tx 0076                 _PORTBbits 0006                 _PORTCbits 0007  
               _IP_chksum 062D               TCP_chksum@i 0028             echo_ping@aux2 0036  
           echo_ping@pchk 0039               ?_config_eth 0070                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISCbits 0087                 _TXSTAbits 0098  
          __end_of___bmul 186F               ?_init_stack 0070               _BAUDCTLbits 0187  
             rw_eeprom@rw 0071             __pbitbssBANK0 0360            __end_of_set_IP 1C22  
              ?_IP_chksum 0077            __end_of_printf 1CD1            __end_of_rx_int 1E6B  
          __end_of_tx_int 07F4       start_initialization 0015               __end_of_isr 1000  
             __end_of_spi 19FF               rx_int@count 007C              set_MAC@i_770 0079  
            set_MAC@i_769 0078  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0071  
     __size_of_config_eth 03E2                  ??_set_IP 0076                read_buff@i 002C  
                ??_printf 007A                  ??_rx_int 007A                  ??_tx_int 0076  
           ??_init_timer2 00E0                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00DE         __size_of_close_tx 006F       __size_of_init_stack 0077  
               __pnvBANK0 006D         __size_of_init_spi 0017                 _echo_ping 1E6B  
        ___lwdiv@dividend 0072                  ?___awdiv 0070                  ?___lbdiv 0070  
                ?___lwdiv 0070           init_timer2@post 00DE                 __pstrings 0800  
                ?_arp_msg 0070         __size_of_start_tx 0069               ??_IP_chksum 0020  
                ?_set_MAC 0070                  ?_tcp_msg 0070                  ?_udp_msg 0070  
              tcp_msg@arg 0030                tcp_msg@aux 003A                 _hexpowers 0806  
        ___lwdiv@quotient 0075                 _read_buff 003C            __size_of_putch 0008  
     __end_of_init_timer2 1931         interrupt_function 0004                 _ping_echo 00D7  
               clear_ram0 07F4                  _PIE1bits 008C                udp_msg@arg 002E  
              udp_msg@aux 002F                ?_echo_ping 0070                  _PIR1bits 000C  
                _PIR2bits 000D                 _ppcontrol 0068                 _uart_init 1886  
            echo_ping@chk 0037                 _rw_eeprom 18E1                _ADCON0bits 001F  
             __stringbase 0805                _ADCON1bits 009F                printf@flag 0020  
              printf@prec 0025              ??_config_eth 0076             isr@int_vector 004F  
              ?_read_buff 0070                _EECON1bits 018C                 join@lower 0070  
               join@upper 0076              tcp_msg@i_814 0038              tcp_msg@i_815 0039  
            tcp_msg@i_816 0035                ?_uart_init 0070        __end_of_config_eth 1800  
        __size_of___awdiv 0059          __size_of___lbdiv 0021          __size_of___lwdiv 003C  
              ?_rw_eeprom 0070              ??_init_stack 00DE        __end_of__stringtab 0806  
        __size_of_arp_msg 01FD               _init_timer2 1907           ___lwdiv@divisor 0070  
        __size_of_set_MAC 0048           ___lwdiv@counter 0077                  __ptext10 1D81  
                __ptext11 003C                  __ptext20 1B10                  __ptext12 18E1  
                __ptext21 062D                  __ptext13 1C22                  __ptext22 18BF  
                __ptext14 1856                  __ptext23 141E                  __ptext15 1931  
                __ptext24 089B                  __ptext16 1E6B                  __ptext25 19B5  
                __ptext17 1AA7                  __ptext26 189E                  __ptext18 196D  
                __ptext27 185E                  __ptext19 1B7F          __size_of_tcp_msg 0169  
                __ptext28 1A4E         __CFG_BOR4V$BOR40V 0000            init_timer2@eoc 00DF  
        __size_of_udp_msg 00B0            init_timer2@pre 00E2            init_timer2@sfr 00E3  
                _close_tx 1B10                  _arp_type 006A          rx_int@typeOfRead 007B  
          read_buff@i_750 0035            read_buff@i_751 0036            read_buff@i_760 0031  
          read_buff@i_752 0030            read_buff@i_761 0032            read_buff@i_745 002D  
          read_buff@i_753 0029            read_buff@i_762 0033            read_buff@i_746 0023  
          read_buff@i_754 0020            read_buff@i_763 0034            read_buff@i_755 002A  
          read_buff@i_747 0025            read_buff@i_756 0037            read_buff@i_748 002E  
          read_buff@i_757 0038            read_buff@i_749 002F            read_buff@i_758 0039  
          read_buff@i_759 002B            read_buff@match 0360             __size_of_main 004F  
           __size_of_join 0022                  _init_spi 186F        __end_of_init_stack 089B  
             ??_echo_ping 002E                  arp_msg@i 0021                  _start_tx 1AA7  
               printf@idx 0021                 printf@val 0023                  isr@i_830 0053  
                isr@i_841 004A                  isr@i_833 0047                  isr@i_827 0051  
                isr@i_835 0048                  isr@i_843 0046                  isr@i_845 0054  
                isr@i_829 0052                  isr@i_837 0045                  isr@i_870 0058  
                isr@i_846 0055                  isr@i_871 004C                  isr@i_863 004B  
                isr@i_839 0049                  isr@i_864 0056                  isr@i_872 004D  
                isr@i_866 0057                 putch@data 0070               ??_read_buff 0076  
                intlevel1 0000                  set_MAC@i 0077                  spi@dummy 0074  
                tcp_msg@i 0037             read_buff@ptrH 0028             read_buff@ptrL 0027  
               stringcode 0800                  udp_msg@i 0032            TCP_chksum@cant 0029  
             ??_uart_init 00DE                  printf@ap 0022               ??_rw_eeprom 0072  
                stringdir 0800                  stringtab 0800             TCP_chksum@aux 002A  
           TCP_chksum@sum 002C                _TCP_chksum 116D                _SSPCONbits 0014  
           IP_chksum@aux3 0028              IP_chksum@sum 002A  
